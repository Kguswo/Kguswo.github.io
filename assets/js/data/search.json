[
  
  {
    "title": "System Design Interview - 분산 시스템을 위한 유일 ID 생성기 설계",
    "url": "/posts/System-Design-Interview-%EB%B6%84%EC%82%B0-%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%84-%EC%9C%84%ED%95%9C-%EC%9C%A0%EC%9D%BC-ID-%EC%83%9D%EC%84%B1%EA%B8%B0-%EC%84%A4%EA%B3%84/",
    "categories": "시스템, 디자인",
    "tags": "System Design Interview",
    "date": "2025-08-25 10:28:49 +0800",
    "content": "이번은 책 7장인 분산 시스템을 위한 유일 ID 생성기를 설계해보겠다.간단한 팀/개인 프로젝트에서 ID를 설계할 때는 auto_increment 속성으로 설정된 기본 키를 사용하곤 했었다.하지만 대규모 분산 환경에서는 auto_increment를 사용할 수 없다.데이터"
  },
  
  {
    "title": "개발하며 Kotlin 문법 공부하기 (vs Java)",
    "url": "/posts/%EA%B0%9C%EB%B0%9C%ED%95%98%EB%A9%B0-Kotlin-%EB%AC%B8%EB%B2%95-%EA%B3%B5%EB%B6%80%ED%95%98%EA%B8%B0-vs-Java/",
    "categories": "언어",
    "tags": "kotlin",
    "date": "2025-08-25 01:22:42 +0800",
    "content": "Kotlin 기본문법만 알고 있는 상태에서 Kotlin 프로젝트를 진행하며 공부하고 찾아본 문법들을 정리해봤다.실제 개발하면서 마주친 Kotlin 문법들을 Java와 비교하여 정리하기 위해 글을 작성했다. (계속 추가 예정)Kotlin에서 data class는 자동으로"
  },
  
  {
    "title": "Singleton 에 대하여",
    "url": "/posts/Singleton-%EC%97%90-%EB%8C%80%ED%95%98%EC%97%AC/",
    "categories": "공부",
    "tags": "Design Pattern, Java",
    "date": "2025-08-24 21:27:54 +0800",
    "content": "들어가며  프로그래밍을 하다 보면 특정 객체가 딱 1개 필요한 상황이 있다. 예를 들어 설정 파일 관리자, 로그 기록기 등이 있다. 이런 경우 사용하는 것이 싱글턴 패턴 이다.  싱글턴 패턴이란? > 클래스의 인스턴스가 오직 하나만 생성도도록 보장하고, 이 인스턴스에 "
  },
  
  {
    "title": "BOJ_1623_신년 파티 (Java)",
    "url": "/posts/BOJ1623%EC%8B%A0%EB%85%84-%ED%8C%8C%ED%8B%B0-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-08-20 02:22:55 +0800",
    "content": "문제 링크 메모리: 147364 KB, 시간: 3040 ms다이나믹 프로그래밍, 트리, 트리에서의 다이나믹 프로그래밍2025년 8월 20일 03:09:29dfs와 tree 구조를 사용했다.백트래킹으로 경로도 탐색했다.import java.io.;import java.u"
  },
  
  {
    "title": "System Design Interview - (1)",
    "url": "/posts/System-Design-Interview-1/",
    "categories": "시스템, 디자인",
    "tags": "System Design Interview",
    "date": "2025-08-18 17:55:00 +0800",
    "content": "웹 - 앱 - 데이터베이스 - 캐시 등이 한 서버에서 실행된다.DNS 서버의 Domain address 에 대한 Ip address 를 요청한다.DNS 에서 Ip address 를 반환 받는다.해당 Ip address 를 통해서 웹서버에 HTTP 요청 보낸다.웹 페이지"
  },
  
  {
    "title": "BOJ_1516_게임 개발 (Java)",
    "url": "/posts/BOJ1516%EA%B2%8C%EC%9E%84-%EA%B0%9C%EB%B0%9C-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-08-12 04:07:40 +0800",
    "content": "문제 링크 메모리: 21636 KB, 시간: 224 ms다이나믹 프로그래밍, 그래프 이론, 방향 비순환 그래프, 위상 정렬2025년 8월 12일 05:05:23위상정렬 문제다. 진입차수를 순서에 맞게 잘 설정해 준 뒤 (선행되어야 할 것에 뒤에 따라올 친구들을 넣는 식"
  },
  
  {
    "title": "System Design Interviews @ FAANG",
    "url": "/posts/System-Design-Interviews-FAANG/",
    "categories": "시스템, 디자인",
    "tags": "system-design",
    "date": "2025-08-06 03:40:27 +0800",
    "content": "FAANG 회사에 입사하는 것은 많은 기술 전문가들의 꿈입니다. 이러한 회사들은 시스템 설계를 포함하여 엔지니어링의 모든 측면에서 우수성을 요구합니다. FAANG 회사의 시스템 설계 면접은 대규모로 복잡한 문제를 해결하는 후보자의 능력을 평가합니다. 이들은 기술적 스킬"
  },
  
  {
    "title": "Claude Code 사용기",
    "url": "/posts/Claude-Code-%EC%82%AC%EC%9A%A9%EA%B8%B0/",
    "categories": "기술",
    "tags": "claude code",
    "date": "2025-08-06 02:24:38 +0800",
    "content": "최근 화제가 된 Claude Code를 직접 써보기로 했다. 복잡한 작업보다는 간단한 노가다성 작업부터 시작해서 어떤 느낌인지 파악해보고 싶었다.Claude Code는 개발자가 터미널에서 바로 Claude AI에게 코딩 작업을 위임할 수 있는 도구입니다. 복잡한 웹 인"
  },
  
  {
    "title": "BOJ_7579_앱 (Java)",
    "url": "/posts/BOJ7579%EC%95%B1-Java/",
    "categories": "알고리즘",
    "tags": "sql, 프로그래머스",
    "date": "2025-08-06 01:34:53 +0800",
    "content": "[Gold III] 앱 - 7579  문제 링크  성능 요약  메모리: 24228 KB, 시간: 184 ms  분류  다이나믹 프로그래밍, 배낭 문제  제출 일자  2025년 8월 6일 01:51:06  문제 설명  우리는 스마트폰을 사용하면서 여러 가지 앱(App)을"
  },
  
  {
    "title": "PGMS_연간 평가점수에 해당하는 평가 등급 및 성과금 조회하기",
    "url": "/posts/PGMS%EC%97%B0%EA%B0%84-%ED%8F%89%EA%B0%80%EC%A0%90%EC%88%98%EC%97%90-%ED%95%B4%EB%8B%B9%ED%95%98%EB%8A%94-%ED%8F%89%EA%B0%80-%EB%93%B1%EA%B8%89-%EB%B0%8F-%EC%84%B1%EA%B3%BC%EA%B8%88-%EC%A1%B0%ED%9A%8C%ED%95%98%EA%B8%B0/",
    "categories": "SQL",
    "tags": "sql, 프로그래머스",
    "date": "2025-08-06 01:31:16 +0800",
    "content": "문제 링크 메모리: undefined, 시간: 코딩테스트 연습 > GROUP BY합계: 100.0 / 100.02025년 08월 06일 02:30:06출처: 프로그래머스 코딩 테스트 연습, https&#x3A;//school.programmers.co.kr/learn/"
  },
  
  {
    "title": "System Design Interview",
    "url": "/posts/System-Design-Interview/",
    "categories": "시스템, 디자인",
    "tags": "system-design",
    "date": "2025-08-02 00:50:19 +0800",
    "content": "위치 기반 서비스는 Yelp나 Google Places와 같은 앱에서 주변의 식당이나 가장 가까운 주유소 등을 찾는 데 사용되는 백엔드 구성 요소이며, 사용자 위치와 검색 반경을 입력받아 해당 반경 내의 모든 비즈니스를 반환하고, 비즈니스 소유자가 비즈니스를 추가, 삭"
  },
  
  {
    "title": "BOJ_16562_친구비 (Java)",
    "url": "/posts/BOJ16562%EC%B9%9C%EA%B5%AC%EB%B9%84-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-08-01 19:19:46 +0800",
    "content": "문제 링크 메모리: 20460 KB, 시간: 212 ms그래프 이론, 자료 구조, 그래프 탐색, 분리 집합2025년 8월 1일 20:17:14union-find를 바로 떠올렸다.이후 그 그룹마다 최솟값을 더해 k와 비교했다import java.io.;import jav"
  },
  
  {
    "title": "PGMS_멸종위기의 대장균 찾기",
    "url": "/posts/PGMS%EB%A9%B8%EC%A2%85%EC%9C%84%EA%B8%B0%EC%9D%98-%EB%8C%80%EC%9E%A5%EA%B7%A0-%EC%B0%BE%EA%B8%B0/",
    "categories": "SQL",
    "tags": "sql, 프로그래머스",
    "date": "2025-07-30 08:52:35 +0800",
    "content": "문제 링크 메모리: undefined, 시간: 코딩테스트 연습 > SELECT합계: 100.0 / 100.02025년 07월 30일 09:50:50출처: 프로그래머스 코딩 테스트 연습, https&#x3A;//school.programmers.co.kr/learn/ch"
  },
  
  {
    "title": "PGMS_수식복원하기 (Java)",
    "url": "/posts/PGMS%EC%88%98%EC%8B%9D%EB%B3%B5%EC%9B%90%ED%95%98%EA%B8%B0-Java/",
    "categories": "알고리즘",
    "tags": "Java, 알고리즘, 프로그래머스",
    "date": "2025-07-30 08:41:48 +0800",
    "content": "문제 링크 메모리: 96.1 MB, 시간: 3.00 ms코딩테스트 연습 > PCCP 기출문제정확성: 100.0합계: 100.0 / 100.02025년 07월 30일 09:38:25출처: 프로그래머스 코딩 테스트 연습, https&#x3A;//school.programm"
  },
  
  {
    "title": "Operating System Concepts - Page Replacement",
    "url": "/posts/Operating-System-Concepts-Page-Replacement/",
    "categories": "운영체제",
    "tags": "OS",
    "date": "2025-07-21 19:27:31 +0800",
    "content": "전체 10 페이지 중 실제로는 5페이지만을 사용하는 프로세스가 있다면, 요구 페이징을 통해 사용되지 않는 나머지 5페이지를 로드하는 I/O를 피할 수 있다.ex) 40 프레임을 사용할 수 있는 시스템이 있다고 할 때, 10페이지를 모두 로드해야 하는 상황이였다면 4개의"
  },
  
  {
    "title": "Java String.format vs 문자열 연결: 성능 차이를 알아보기",
    "url": "/posts/Java-String.format-vs-%EB%AC%B8%EC%9E%90%EC%97%B4-%EC%97%B0%EA%B2%B0-%EC%84%B1%EB%8A%A5-%EC%B0%A8%EC%9D%B4%EB%A5%BC-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0/",
    "categories": "공부",
    "tags": "Spring",
    "date": "2025-07-19 01:03:05 +0800",
    "content": "Java 개발을 하다 보면 문자열을 조합해야 하는 상황이 자주 발생한다. 이때 두 가지 주요한 방법이 있는데이 두 가지를 사용한다.둘 다 같은 결과를 만들어내지만, 내부적으로는 어떤 차이가 있을까? 성능상 차이도 있지 않을까?이런 궁금증에서 시작해 실제 Spring B"
  },
  
  {
    "title": "Windows에서 클론 시 'Filename too long' 오류 해결하기",
    "url": "/posts/Windows%EC%97%90%EC%84%9C-%ED%81%B4%EB%A1%A0-%EC%8B%9C-Filename-too-long-%EC%98%A4%EB%A5%98-%ED%95%B4%EA%B2%B0%ED%95%98%EA%B8%B0/",
    "categories": "오류, 해결",
    "tags": "git",
    "date": "2025-07-18 22:42:44 +0800",
    "content": "spring boot 프로젝트를 fork 한 레포지토리를 클론하는 중 예상치 못한 오류를 발견했다.클론은 성공했지만 체크아웃이 실패했다는 메시지가 보인다.이 오류는 Windows의 파일 경로 길이 제한 때문이다.찾아보니Windows는 기본적으로 260자의 파일 경로 제"
  },
  
  {
    "title": "제9회 천하제일 코딩대회 본선 Open Contest 후기",
    "url": "/posts/%EC%A0%9C9%ED%9A%8C-%EC%B2%9C%ED%95%98%EC%A0%9C%EC%9D%BC-%EC%BD%94%EB%94%A9%EB%8C%80%ED%9A%8C-%EB%B3%B8%EC%84%A0-Open-Contest-%ED%9B%84%EA%B8%B0/",
    "categories": "Code, Contests",
    "tags": "cp, 백준",
    "date": "2025-07-18 16:20:05 +0800",
    "content": "우연히 빈 시간에 PS 감각을 잃지 않을 겸 제9회 천하제일 코딩대회 본선 Open Contest 에 참여했다. 문제 링크 메모리: 15164 KB, 시간: 688 ms수학, 다이나믹 프로그래밍, 조합론2025년 7월 15일 15:22:10야구선수의 성적을 평가하는 기"
  },
  
  {
    "title": "BOJ_16890_창업 (Java)",
    "url": "/posts/BOJ16890%EC%B0%BD%EC%97%85-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-07-08 15:59:05 +0800",
    "content": "문제 링크 메모리: 47068 KB, 시간: 1076 ms그리디 알고리즘, 문자열, 정렬, 게임 이론2025년 7월 8일 16:47:38항상 맨 앞에 본인의 턴에 알파벳을 넣는게 디폴트다. (당연히 사람별로 koo는 가장 작은걸 맨앞, cube는 가장 큰걸 맨앞)하지만"
  },
  
  {
    "title": "PGMS_입양 시각 구하기(1) (SQL)",
    "url": "/posts/PGMS%EC%9E%85%EC%96%91-%EC%8B%9C%EA%B0%81-%EA%B5%AC%ED%95%98%EA%B8%B01-SQL/",
    "categories": "SQL",
    "tags": "sql, 프로그래머스",
    "date": "2025-07-08 14:55:33 +0800",
    "content": "문제 링크 메모리: 0.0 MB, 시간: 0.00 ms코딩테스트 연습 > GROUP BYEmpty2025년 07월 08일 15:52:53출처: 프로그래머스 코딩 테스트 연습, https&#x3A;//school.programmers.co.kr/learn/challeng"
  },
  
  {
    "title": "Operating System Concepts - Mutex, Semaphore 그리고 Java의 동기화 기법",
    "url": "/posts/Operating-System-Concepts-Mutex-Semaphore-%EA%B7%B8%EB%A6%AC%EA%B3%A0-Java%EC%9D%98-%EB%8F%99%EA%B8%B0%ED%99%94-%EA%B8%B0%EB%B2%95/",
    "categories": "운영체제",
    "tags": "OS",
    "date": "2025-07-06 04:43:52 +0800",
    "content": "여러 개의 프로세스가 공유 자원에 동시 접근할 때 실행 순서에 따라 결과값이 달라질 수 있는 현상공유 자원에 여러 프로세스/쓰레드가 동시에 접근 -> 의도치 않은 동작 발생 가능따라서 프로세스나 쓰레드를 공유자원에 동시에 접근하지 못하도록 접근 순서를 제어하는 방법 ("
  },
  
  {
    "title": "PGMS_특정 물고기를 잡은 총 수 구하기 (SQL)",
    "url": "/posts/PGMS%ED%8A%B9%EC%A0%95-%EB%AC%BC%EA%B3%A0%EA%B8%B0%EB%A5%BC-%EC%9E%A1%EC%9D%80-%EC%B4%9D-%EC%88%98-%EA%B5%AC%ED%95%98%EA%B8%B0-SQL/",
    "categories": "SQL",
    "tags": "sql, 프로그래머스",
    "date": "2025-07-02 02:41:01 +0800",
    "content": "문제 링크 메모리: undefined, 시간: 코딩테스트 연습 > SELECT합계: 100.0 / 100.02025년 07월 02일 03:41:06출처: 프로그래머스 코딩 테스트 연습, https&#x3A;//school.programmers.co.kr/learn/ch"
  },
  
  {
    "title": "Operating System Concepts - 실시간 CPU 스케줄링",
    "url": "/posts/Operating-System-Concepts-%EC%8B%A4%EC%8B%9C%EA%B0%84-CPU-%EC%8A%A4%EC%BC%80%EC%A4%84%EB%A7%81/",
    "categories": "운영체제",
    "tags": "OS",
    "date": "2025-07-01 19:08:19 +0800",
    "content": "Operating System 공룡책 5.6절의 실시간 CPU 스케줄링에 대해 정리해보았다실시간 CPU 스케줄링은 연성(soft) 실시간 시스템과 경성(hard) 실시간으로 구분연성 실시간 시스템중요한 실시간 프로세스가 스케줄 되는 시점에 관해 아무런 보장을 하지 않는"
  },
  
  {
    "title": "BOJ_4485_녹색 옷 입은 애가 젤다지? (Java)",
    "url": "/posts/BOJ4485%EB%85%B9%EC%83%89-%EC%98%B7-%EC%9E%85%EC%9D%80-%EC%95%A0%EA%B0%80-%EC%A0%A4%EB%8B%A4%EC%A7%80-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-06-29 15:21:36 +0800",
    "content": "문제 링크 메모리: 20540 KB, 시간: 192 ms그래프 이론, 그래프 탐색, 최단 경로, 데이크스트라, 격자 그래프2025년 6월 29일 16:16:25간단한 다익스트라 문제다."
  },
  
  {
    "title": "Operating System Concepts - 운영체제부터 프로그램이 실행되기까지",
    "url": "/posts/Operating-System-Concepts-%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C%EB%B6%80%ED%84%B0-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%9D%B4-%EC%8B%A4%ED%96%89%EB%90%98%EA%B8%B0%EA%B9%8C%EC%A7%80/",
    "categories": "운영체제",
    "tags": "OS",
    "date": "2025-06-24 19:19:43 +0800",
    "content": "컴퓨터에서 프로그램이 실행되기까지 과정을 정리해보고자 한다. 개발자 입장에서 직접 작성한 고급언어 코드 프로그램이 어떻게 작동하게 되는지 알아보자. 운영체제별 차이점까지 깊게 다루진 않았다.C/C++ 실행 과정Java 실행 과정개발자는 C, C++, Java, Pyth"
  },
  
  {
    "title": "Operating System Concepts - 운영체제의 작동",
    "url": "/posts/Operating-System-Concepts-%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C%EC%9D%98-%EC%9E%91%EB%8F%99/",
    "categories": "운영체제",
    "tags": "OS",
    "date": "2025-06-10 18:39:52 +0800",
    "content": "컴퓨터의 전원을 켜거나 재부팅 할 때와 같이 컴퓨터를 실행하려면 초기 프로그램을 실행해야 한다. 이 초기 프로그램(부트스트랩 프로그램)은 일반적으로 컴퓨터 하드웨어 내에 펌웨어로 저장된다.부트스트랩 프로그램은 운영체제를 적재하는 방법과 해당 시스템 실행을 시작하는 방법"
  },
  
  {
    "title": "BOJ_7412_환상의 듀엣 (Java)",
    "url": "/posts/BOJ7412%ED%99%98%EC%83%81%EC%9D%98-%EB%93%80%EC%97%A3-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-06-03 03:23:15 +0800",
    "content": "문제 링크 메모리: 52332 KB, 시간: 296 ms다이나믹 프로그래밍2025년 6월 3일 04:12:42dpi = 상덕이가 마지막으로 i까지 부르고 희원이가 마지막으로 j까지 불렀을 때 최솟값public class Main {    static BufferedRe"
  },
  
  {
    "title": "PGMS_특정 조건을 만족하는 물고기별 수와 최대 길이 구하기 (SQL)",
    "url": "/posts/PGMS%ED%8A%B9%EC%A0%95-%EC%A1%B0%EA%B1%B4%EC%9D%84-%EB%A7%8C%EC%A1%B1%ED%95%98%EB%8A%94-%EB%AC%BC%EA%B3%A0%EA%B8%B0%EB%B3%84-%EC%88%98%EC%99%80-%EC%B5%9C%EB%8C%80-%EA%B8%B8%EC%9D%B4-%EA%B5%AC%ED%95%98%EA%B8%B0-SQL/",
    "categories": "SQL",
    "tags": "sql, 프로그래머스",
    "date": "2025-06-03 02:13:59 +0800",
    "content": "문제 링크 메모리: undefined, 시간: 코딩테스트 연습 > GROUP BY합계: 100.0 / 100.02025년 06월 03일 03:07:34출처: 프로그래머스 코딩 테스트 연습, https&#x3A;//school.programmers.co.kr/learn/"
  },
  
  {
    "title": "Subquery vs Join",
    "url": "/posts/Subquery-vs-Join/",
    "categories": "데이터베이스",
    "tags": "Database, mysql",
    "date": "2025-06-02 18:45:31 +0800",
    "content": "개발을 하며 쿼리를 작성할 때 여러 테이블에서 데이터를 가져오기 위해 서브쿼리나 조인을 사용한 경험이 있을 것이다. 이때 어떤 방법을 선택하는것이 더 나은지에 대한 고찰을 해 보았다.쿼리 안에 또 다른 쿼리가 들어간 것상황에 따라 메인 쿼리의 WHERE, FROM, S"
  },
  
  {
    "title": "MySQL 옵티마이저 에러",
    "url": "/posts/MySQL-%EC%98%B5%ED%8B%B0%EB%A7%88%EC%9D%B4%EC%A0%80-%EC%97%90%EB%9F%AC/",
    "categories": "데이터베이스",
    "tags": "Database, mysql",
    "date": "2025-05-29 19:22:49 +0800",
    "content": "옵티마이저는 제한된 정보를 이용해서 최적의 실행계획을 최대한 짧은 시간안에 수립해야한다. 따라서 빠르고 정확하게 실행되어야한다.실제 실무에서 RDBMS사용할 때 옵티마이저 관련 오류가 많이 발생하고 이런 문제를 최대한 회피하고자 옵티마이저 힌트를 사용하고, 많은 힌트 "
  },
  
  {
    "title": "BOJ_16920_확장 게임 (Java)",
    "url": "/posts/BOJ16920%ED%99%95%EC%9E%A5-%EA%B2%8C%EC%9E%84-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-05-27 22:59:00 +0800",
    "content": "문제 링크 메모리: 57644 KB, 시간: 492 ms너비 우선 탐색, 그래프 이론, 그래프 탐색, 구현2025년 5월 27일 23:54:02bfs문제로,  조금의 복잡함이 있지만 쭉 구현하면 풀 수 있다. 플레이어별 queue를 유지하는것으로 진행했다.import "
  },
  
  {
    "title": "BOJ_1943_동전 분배 (Java)",
    "url": "/posts/BOJ1943%EB%8F%99%EC%A0%84-%EB%B6%84%EB%B0%B0-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-05-27 22:57:10 +0800",
    "content": "문제 링크 메모리: 20772 KB, 시간: 4420 ms다이나믹 프로그래밍, 배낭 문제2025년 5월 27일 22:30:13냅색 문제다. 1차원 배열로 풀었고 역순으로 진행했다. import java.io.;import java.util.;public class Ma"
  },
  
  {
    "title": "BOJ_1915_가장 큰 정사각형 (Java)",
    "url": "/posts/BOJ1915%EA%B0%80%EC%9E%A5-%ED%81%B0-%EC%A0%95%EC%82%AC%EA%B0%81%ED%98%95-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-05-27 20:46:24 +0800",
    "content": "문제 링크 메모리: 31372 KB, 시간: 364 ms다이나믹 프로그래밍2025년 5월 27일 21:30:36핵심 아이디어 : dpi를 \"(i,j)를 우하단 꼭짓점으로 하는 가장 큰 정사각형의 한 변의 길이\"로 정의하는 것.점화식:첫 번째 행과 열은 기본값으로 초기화"
  },
  
  {
    "title": "PGMS_조건에 부합하는 중고거래 상태 조회하기 (SQL)",
    "url": "/posts/PGMS%EC%A1%B0%EA%B1%B4%EC%97%90-%EB%B6%80%ED%95%A9%ED%95%98%EB%8A%94-%EC%A4%91%EA%B3%A0%EA%B1%B0%EB%9E%98-%EC%83%81%ED%83%9C-%EC%A1%B0%ED%9A%8C%ED%95%98%EA%B8%B0-SQL/",
    "categories": "SQL",
    "tags": "sql, 프로그래머스",
    "date": "2025-05-27 20:42:33 +0800",
    "content": "문제 링크 메모리: 0.0 MB, 시간: 0.00 ms코딩테스트 연습 > String， DateEmpty2025년 05월 27일 21:09:39출처: 프로그래머스 코딩 테스트 연습, https&#x3A;//school.programmers.co.kr/learn/chal"
  },
  
  {
    "title": "PGMS_분기별 분화된 대장균의 개체 수 구하기 (SQL)",
    "url": "/posts/PGMS%EB%B6%84%EA%B8%B0%EB%B3%84-%EB%B6%84%ED%99%94%EB%90%9C-%EB%8C%80%EC%9E%A5%EA%B7%A0%EC%9D%98-%EA%B0%9C%EC%B2%B4-%EC%88%98-%EA%B5%AC%ED%95%98%EA%B8%B0-SQL/",
    "categories": "SQL",
    "tags": "sql, 프로그래머스",
    "date": "2025-05-27 20:41:20 +0800",
    "content": "문제 링크 메모리: undefined, 시간: 코딩테스트 연습 > String， Date합계: 100.0 / 100.02025년 05월 27일 21:02:21출처: 프로그래머스 코딩 테스트 연습, https&#x3A;//school.programmers.co.kr/le"
  },
  
  {
    "title": "BOJ_4991_로봇 청소기 (Java)",
    "url": "/posts/BOJ4991%EB%A1%9C%EB%B4%87-%EC%B2%AD%EC%86%8C%EA%B8%B0-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-05-27 20:39:27 +0800",
    "content": "문제 링크 메모리: 118492 KB, 시간: 540 ms그래프 이론, 브루트포스 알고리즘, 그래프 탐색, 너비 우선 탐색, 비트마스킹2025년 5월 26일 11:03:27핵심 아이디어 : 로봇이 어떤 더러운 칸들을 청소했는지를 비트마스크로 상태를 관리하는 것더러운 칸"
  },
  
  {
    "title": "MySQL vs Elasticsearch 검색 성능 비교 ",
    "url": "/posts/MySQL-vs-Elasticsearch-%EA%B2%80%EC%83%89-%EC%84%B1%EB%8A%A5-%EB%B9%84%EA%B5%90/",
    "categories": "데이터베이스",
    "tags": "mysql",
    "date": "2025-05-21 19:17:38 +0800",
    "content": "이 실험에서는 전통적인 관계형 데이터베이스인 MySQL의 전문 검색(Full-Text Search)과 전문 검색 엔진인 Elasticsearch의 성능을 비교 분석하고자 한다.문장이나 문서 내용에서 키워드를 검색하는 기능1\\. 구분자(Stopword) 방식MySQL 5"
  },
  
  {
    "title": "BOJ_24552_올바른 괄호 (Java)",
    "url": "/posts/BOJ24552%EC%98%AC%EB%B0%94%EB%A5%B8-%EA%B4%84%ED%98%B8-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-05-16 00:02:13 +0800",
    "content": "문제 링크 메모리: 15868 KB, 시간: 148 ms누적 합2025년 5월 16일 00:43:59$\\texttt{(, )}$로 구성된 문자열 $S$에서 정확히 하나의 괄호를 지워 올바른 괄호열을 만들 수 있는 경우의 수를 출력하자.올바른 괄호열은 다음과 같이 정의"
  },
  
  {
    "title": "InnoDB 인덱스 잠금 실습해보기 (MySQL)",
    "url": "/posts/InnoDB-%EC%9D%B8%EB%8D%B1%EC%8A%A4-%EC%9E%A0%EA%B8%88-%EC%8B%A4%EC%8A%B5%ED%95%B4%EB%B3%B4%EA%B8%B0-MySQL/",
    "categories": "데이터베이스",
    "tags": "Database, mysql",
    "date": "2025-05-14 19:22:10 +0800",
    "content": "MySQL의 InnoDB 스토리지 엔진은 레코드 기반의 잠금 방식을 사용하지만, 흥미로운 점은 레코드 자체를 잠그는 것이 아니라 인덱스를 잠근다는 것입니다. 이 특성이 실제로 어떻게 동작하는지, 그리고 데이터베이스 설계와 성능에 어떤 영향을 미치는지 직접 테스트해보았습"
  },
  
  {
    "title": "BOJ_1208_부분수열의 합 2 (Java)",
    "url": "/posts/BOJ1208%EB%B6%80%EB%B6%84%EC%88%98%EC%97%B4%EC%9D%98-%ED%95%A9-2-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-05-11 23:39:09 +0800",
    "content": "문제 링크 메모리: 98592 KB, 시간: 672 ms이분 탐색, 중간에서 만나기2025년 5월 10일 18:15:10중간에서 만나기를 사용했다.너무 길어 $2^{40}$이 되면 연산이 초과나므로$2^{20}$으로 두 부분으로 나눴다. 이러면 10억보다 작아서 가능."
  },
  
  {
    "title": "PGMS_ 성분으로 구분한 아이스크림 총 주문량 (SQL)",
    "url": "/posts/PGMS-%EC%84%B1%EB%B6%84%EC%9C%BC%EB%A1%9C-%EA%B5%AC%EB%B6%84%ED%95%9C-%EC%95%84%EC%9D%B4%EC%8A%A4%ED%81%AC%EB%A6%BC-%EC%B4%9D-%EC%A3%BC%EB%AC%B8%EB%9F%89-SQL/",
    "categories": "SQL",
    "tags": "sql, 프로그래머스",
    "date": "2025-05-10 16:36:33 +0800",
    "content": "문제 링크 메모리: 0.0 MB, 시간: 0.00 ms코딩테스트 연습 > GROUP BYEmpty2025년 05월 10일 17:34:09출처: 프로그래머스 코딩 테스트 연습, https&#x3A;//school.programmers.co.kr/learn/challeng"
  },
  
  {
    "title": "Real MySQL - Ch 4",
    "url": "/posts/Real-MySQL/",
    "categories": "데이터베이스",
    "tags": "Database, RealMySQL 8.0",
    "date": "2025-05-10 16:15:23 +0800",
    "content": "Ch 04. 아키텍처  > MySQL 서버는 MySQL엔진 + 스토리지 엔진으로 구성된다.  4.1 MySQL 엔진 아키텍처  MySQL 서버는 다른 DBMS에 비해 구조가 독특하다.  MySQL 서버 전체 구조  MySQL 엔진: 프론트, 기획자, 옵티마이제이션 및 "
  },
  
  {
    "title": "트랜잭션과 격리 수준 (+ InnoDB Transaction Model )",
    "url": "/posts/%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98%EA%B3%BC-%EA%B2%A9%EB%A6%AC-%EC%88%98%EC%A4%80-InnoDB-Transaction-Model/",
    "categories": "데이터베이스",
    "tags": "Database, InnoDB, mysql",
    "date": "2025-05-07 18:47:20 +0800",
    "content": "💡 여러 작업들을 하나로 묶은 단위로, 이렇게 묶인 작업들은 모두 실행되거나 모두 실행되지 않는다(all-or-nothing). 읽기와 쓰기를 하나의 논리적 단위로 묶는 방법이라고 정의할 수 있다.하나의 트랜잭션 안에서 실패하면 트랜잭션 내부에서 했던 작업이 다시 진"
  },
  
  {
    "title": "BOJ_2258_정육점 (Java)",
    "url": "/posts/BOJ2258%EC%A0%95%EC%9C%A1%EC%A0%90-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-05-06 14:21:56 +0800",
    "content": "문제 링크 메모리: 43920 KB, 시간: 492 ms그리디 알고리즘, 정렬2025년 5월 6일 15:16:41가격 기준으로 오름차순한다. 가격이 같으면 더해야하고 가격이 높아지면 그 가격으로도 아래가격 고기 다 살 수 있다. 그리고 고기 무게는 내림차순으로 무거운것"
  },
  
  {
    "title": "BOJ_8983_사냥꾼 (Java)",
    "url": "/posts/BOJ8983%EC%82%AC%EB%83%A5%EA%BE%BC-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-05-06 12:26:05 +0800",
    "content": "문제 링크 메모리: 57164 KB, 시간: 608 ms이분 탐색, 정렬2025년 5월 6일 03:32:53import java.io.;import java.util.;public class Main {    static BufferedReader br;    stat"
  },
  
  {
    "title": "BOJ_15942_Thinkinh Heap (Java)",
    "url": "/posts/BOJ15942Thinkinh-Heap-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-05-05 01:16:24 +0800",
    "content": "문제 링크 메모리: 32644 KB, 시간: 288 ms해 구성하기, 그리디 알고리즘2025년 5월 5일 01:58:41minHeap의 작동원리상 특정 노드에 영향을 주려면 연결된 부모이거나 자식노드여야한다.그러므로 p와 연결된 브랜치 중 부모와 자식을 결정지으면 된다"
  },
  
  {
    "title": "PGMS_물고기 종류 별 대어 찾기 (SQL)",
    "url": "/posts/PGMS%EB%AC%BC%EA%B3%A0%EA%B8%B0-%EC%A2%85%EB%A5%98-%EB%B3%84-%EB%8C%80%EC%96%B4-%EC%B0%BE%EA%B8%B0-SQL/",
    "categories": "SQL",
    "tags": "sql, 프로그래머스",
    "date": "2025-05-04 23:54:54 +0800",
    "content": "문제 링크 메모리: undefined, 시간: 코딩테스트 연습 > SUM， MAX， MIN합계: 100.0 / 100.02025년 05월 05일 00:49:41출처: 프로그래머스 코딩 테스트 연습, https&#x3A;//school.programmers.co.kr/l"
  },
  
  {
    "title": "InnoDB에 대한 탐구 - (2)",
    "url": "/posts/InnoDB%EC%97%90-%EB%8C%80%ED%95%9C-%ED%83%90%EA%B5%AC-2/",
    "categories": "데이터베이스",
    "tags": "Database, mysql",
    "date": "2025-04-28 18:05:13 +0800",
    "content": "각 구조에 대한 정보를 알기 위해서는 InnoDB In-Memory Structures 와 InnoDB On-Disk Structures 섹션을 확인하길 바란다. 자세한 각 구조에 대해 이어서 작성하겠다.multi-versioned storage engine: http"
  },
  
  {
    "title": "InnoDB에 대한 탐구 - (1)",
    "url": "/posts/InnoDB%EC%97%90-%EB%8C%80%ED%95%9C-%ED%83%90%EA%B5%AC/",
    "categories": "데이터베이스",
    "tags": "Database, mysql",
    "date": "2025-04-28 18:00:47 +0800",
    "content": "Introduction to InnoDB in MySQL 8.0"
  },
  
  {
    "title": "Real MySQL - Ch 1 , 2",
    "url": "/posts/Real-MySQL-Ch-1-2/",
    "categories": "데이터베이스",
    "tags": "Database, RealMySQL 8.0",
    "date": "2025-04-26 16:14:26 +0800",
    "content": "Ch 01. 소개  1.1 MySQL 소개  > MySQL은 1979년 스웨덴의 TcX라는 회사의 터미널 인터페이스 라이브러리인 UNIREG로부터 시작된다. 이후 MySQL 버전 1.0이 완성된 후 사내에서만 사용되다가, 1996년에 일반인에게 공개됐다.  1.2 왜 "
  },
  
  {
    "title": "PGMS_조건에 맞는 아이템들의 가격의 총합 구하기 (SQL)",
    "url": "/posts/PGMS%EC%A1%B0%EA%B1%B4%EC%97%90-%EB%A7%9E%EB%8A%94-%EC%95%84%EC%9D%B4%ED%85%9C%EB%93%A4%EC%9D%98-%EA%B0%80%EA%B2%A9%EC%9D%98-%EC%B4%9D%ED%95%A9-%EA%B5%AC%ED%95%98%EA%B8%B0-SQL/",
    "categories": "SQL",
    "tags": "sql, 프로그래머스",
    "date": "2025-04-26 14:15:10 +0800",
    "content": "문제 링크 메모리: undefined, 시간: 코딩테스트 연습 > SUM， MAX， MIN합계: 100.0 / 100.02025년 04월 26일 15:10:25출처: 프로그래머스 코딩 테스트 연습, https&#x3A;//school.programmers.co.kr/l"
  },
  
  {
    "title": "LeetCode_maximum-points-you-can-obtain-from-cards (Java)",
    "url": "/posts/LeetCodemaximum-points-you-can-obtain-from-cards-Java/",
    "categories": "알고리즘",
    "tags": "Java, leetcode, 알고리즘",
    "date": "2025-04-26 14:13:02 +0800",
    "content": "누적합으로 풀이했다. 한 쪽에서 연속으로 뽑을 수 있고 왼쪽과 오른쪽만 선택 가능하므로 양쪽에서 각각 연속으로 몇개를 뽑는가가 중요하다. 순서는 상관없고 개수가 중요하다.class Solution {    public int maxScore(int\\[] cardPoin"
  },
  
  {
    "title": "PGMS_길 찾기 게임 (Java)",
    "url": "/posts/PGMS%EA%B8%B8-%EC%B0%BE%EA%B8%B0-%EA%B2%8C%EC%9E%84-Java/",
    "categories": "알고리즘",
    "tags": "Java, 알고리즘, 프로그래머스",
    "date": "2025-04-23 01:24:24 +0800",
    "content": "문제 링크 메모리: 111 MB, 시간: 35.45 ms코딩테스트 연습 > 2019 KAKAO BLIND RECRUITMENT정확성: 100.0합계: 100.0 / 100.02025년 04월 23일 02:22:35출처: 프로그래머스 코딩 테스트 연습, https&#x3"
  },
  
  {
    "title": "PGMS_가사 검색 (Java)",
    "url": "/posts/PGMS%EA%B0%80%EC%82%AC-%EA%B2%80%EC%83%89-Java/",
    "categories": "알고리즘",
    "tags": "Java, 알고리즘, 프로그래머스",
    "date": "2025-04-22 23:18:13 +0800",
    "content": "문제 링크 메모리: 819 MB, 시간: 1025.94 ms코딩테스트 연습 > 2020 KAKAO BLIND RECRUITMENT정확성: 25.0효율성: 75.0합계: 100.0 / 100.02025년 04월 23일 00:14:06출처: 프로그래머스 코딩 테스트 연습,"
  },
  
  {
    "title": "PGMS_연도별 대장균 크기의 편차 구하기 (SQL)",
    "url": "/posts/PGMS%EC%97%B0%EB%8F%84%EB%B3%84-%EB%8C%80%EC%9E%A5%EA%B7%A0-%ED%81%AC%EA%B8%B0%EC%9D%98-%ED%8E%B8%EC%B0%A8-%EA%B5%AC%ED%95%98%EA%B8%B0-SQL/",
    "categories": "SQL",
    "tags": "sql, 프로그래머스",
    "date": "2025-04-22 22:25:32 +0800",
    "content": "문제 링크 메모리: undefined, 시간: 코딩테스트 연습 > SUM， MAX， MIN합계: 100.0 / 100.02025년 04월 22일 23:23:28출처: 프로그래머스 코딩 테스트 연습, https&#x3A;//school.programmers.co.kr/l"
  },
  
  {
    "title": "BOJ_11438_LCA 2 (Java)",
    "url": "/posts/BOJ11438LCA-2-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-04-16 22:59:04 +0800",
    "content": "  문제 링크  메모리: 108964 KB, 시간: 952 ms 자료 구조, 최소 공통 조상, 희소 배열, 트리 2025년 4월 16일 23:37:54  트리에 대한 정보가 주어지고 두 노드의 가장 가까운 공통 조상 노드를 결과로 출력루트 노드는 항상 1번트리의 각 정"
  },
  
  {
    "title": "PGMS_풍선 터트리기 (Java)",
    "url": "/posts/PGMS%ED%92%8D%EC%84%A0-%ED%84%B0%ED%8A%B8%EB%A6%AC%EA%B8%B0-Java/",
    "categories": "알고리즘",
    "tags": "Java, 알고리즘, 프로그래머스",
    "date": "2025-04-15 23:51:27 +0800",
    "content": "문제 링크 메모리: 128 MB, 시간: 33.98 ms코딩테스트 연습 > 월간 코드 챌린지 시즌1정확성: 100.0합계: 100.0 / 100.02025년 04월 16일 00:47:01출처: 프로그래머스 코딩 테스트 연습, https&#x3A;//school.prog"
  },
  
  {
    "title": "LeetCode_Restore IP Addresses (Java)",
    "url": "/posts/LeetCodeRestore-IP-Addresses-Java/",
    "categories": "알고리즘",
    "tags": "Java, leetcode, 알고리즘",
    "date": "2025-04-15 22:49:32 +0800",
    "content": "Leethub 으로 간단하게 Github에 문제와 코드를 업로드하세요!dfs와 백트래킹으로 간단하게 풀 수 있다. 답을 만들 때는 Stringbuilder을 사용했다. 다시 백트래킹시킬때 setLength로 이전상황으로 만들었다.class Solution {    st"
  },
  
  {
    "title": "BOJ_1520_내리막 길 (Java)",
    "url": "/posts/BOJ1520%EB%82%B4%EB%A6%AC%EB%A7%89-%EA%B8%B8-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-04-15 21:45:32 +0800",
    "content": "  문제 링크  메모리: 48580 KB, 시간: 488 ms 깊이 우선 탐색, 다이나믹 프로그래밍, 그래프 이론, 그래프 탐색 2025년 4월 15일 22:39:47Top-Down DP + dfs를 활용하려 하다가 메모이제이션을 해도 시간복잡도가 dfs는 매우 커지니"
  },
  
  {
    "title": "PGMS_부모의 형질을 모두 가지는 대장균 찾기 (SQL)",
    "url": "/posts/PGMS%EB%B6%80%EB%AA%A8%EC%9D%98-%ED%98%95%EC%A7%88%EC%9D%84-%EB%AA%A8%EB%91%90-%EA%B0%80%EC%A7%80%EB%8A%94-%EB%8C%80%EC%9E%A5%EA%B7%A0-%EC%B0%BE%EA%B8%B0-SQL/",
    "categories": "SQL",
    "tags": "sql, 프로그래머스",
    "date": "2025-04-15 20:53:44 +0800",
    "content": "  문제 링크  메모리: undefined, 시간:  코딩테스트 연습 > SELECT 합계: 100.0 / 100.0 2025년 04월 15일 21:49:02출처: 프로그래머스 코딩 테스트 연습, https&#x3A;//school.programmers.co.kr/le"
  },
  
  {
    "title": "BOJ_20125_쿠키의 신체 측정 (Java)",
    "url": "/posts/BOJ20125%EC%BF%A0%ED%82%A4%EC%9D%98-%EC%8B%A0%EC%B2%B4-%EC%B8%A1%EC%A0%95-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-04-11 20:05:25 +0800",
    "content": "  문제 링크  메모리: 21568 KB, 시간: 260 ms 구현 2025년 4월 11일 20:59:58"
  },
  
  {
    "title": "PGMS_헤비 유저가 소유한 장소 (SQL)",
    "url": "/posts/PGMS%ED%97%A4%EB%B9%84-%EC%9C%A0%EC%A0%80%EA%B0%80-%EC%86%8C%EC%9C%A0%ED%95%9C-%EC%9E%A5%EC%86%8C-SQL/",
    "categories": "SQL",
    "tags": "sql, 프로그래머스",
    "date": "2025-04-07 17:21:45 +0800",
    "content": "  문제 링크  메모리: 0.0 MB, 시간: 0.00 ms 코딩테스트 연습 > 2021 Dev－Matching： 웹 백엔드 개발자（상반기） Empty 2025년 04월 07일 18:17:08"
  },
  
  {
    "title": "PGMS_합승 택시 요금 (Java)",
    "url": "/posts/PGMS%ED%95%A9%EC%8A%B9-%ED%83%9D%EC%8B%9C-%EC%9A%94%EA%B8%88-Java/",
    "categories": "알고리즘",
    "tags": "Java, 알고리즘, 프로그래머스",
    "date": "2025-04-07 17:18:53 +0800",
    "content": "  문제 링크  메모리: 85.6 MB, 시간: 125.89 ms 코딩테스트 연습 > 2021 KAKAO BLIND RECRUITMENT 정확성: 50.0효율성: 50.0합계: 100.0 / 100.0 2025년 04월 04일 19:48:47플로이드-워셜로 풀었다cla"
  },
  
  {
    "title": "Hit Me Up ; README.md 방문자 수 카운팅 서비스 ",
    "url": "/posts/README.md-%EB%B0%A9%EB%AC%B8%EC%9E%90-%EC%88%98-%EC%B9%B4%EC%9A%B4%ED%8A%B8-%EC%84%9C%EB%B9%84%EC%8A%A4/",
    "categories": "사이드, 프로젝트",
    "tags": "github, hits, readme",
    "date": "2025-04-05 16:23:32 +0800",
    "content": "Hit Me Up ; README.md 방문자 수 카운팅 서비스 "
  },
  
  {
    "title": "PGMS_2022 Kakao_사라지는 발판 (Java)",
    "url": "/posts/PGMS2022-Kakao92345-Java/",
    "categories": "알고리즘",
    "tags": "Java, 알고리즘, 프로그래머스",
    "date": "2025-04-02 02:36:47 +0800",
    "content": "문제 링크 메모리: 83.5 MB, 시간: 13.12 ms코딩테스트 연습 > 2022 KAKAO BLIND RECRUITMENT정확성: 100.0합계: 100.0 / 100.02025년 04월 02일 03:31:41출처: 프로그래머스 코딩 테스트 연습, https&#x"
  },
  
  {
    "title": "BOJ_3687_성냥개비 (Java)",
    "url": "/posts/BOJ3687%EC%84%B1%EB%83%A5%EA%B0%9C%EB%B9%84-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-03-31 21:13:38 +0800",
    "content": "문제 링크 메모리: 14060 KB, 시간: 104 ms다이나믹 프로그래밍, 그리디 알고리즘2025년 3월 31일 22:01:50import java.io.;import java.util.;public class Main {    static BufferedReader"
  },
  
  {
    "title": "BOJ_2109_순회강연 (Java)",
    "url": "/posts/BOJ2109%EC%88%9C%ED%9A%8C%EA%B0%95%EC%97%B0-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-03-31 20:09:03 +0800",
    "content": "문제 링크 메모리: 21660 KB, 시간: 288 ms자료 구조, 그리디 알고리즘, 우선순위 큐, 정렬2025년 3월 31일 21:06:40처음에 d일이하인줄 모르고 d일만 가능한줄 알고 너무 쉽게 풀었다가 다시 풀었다. d일 이하의 최대 일수에 배치하도록 TreeS"
  },
  
  {
    "title": "LeetCode_354. Russian Doll Envelopes (Java)",
    "url": "/posts/LeetCode354.-Russian-Doll-Envelopes-Java/",
    "categories": "알고리즘",
    "tags": "Java, leetcode, 알고리즘",
    "date": "2025-03-28 17:23:59 +0800",
    "content": "처음에는 단순히 정렬을 통해서만 비교했다. 하지만 다음과 같은 반례가 생겼다.\\[\\[2,100], \\[3,200], \\[4,300], \\[5,500], \\[5,400], \\[5,250], \\[6,370], \\[6,360], \\[7,380]]이렇게 했을 때 단순히 너비 "
  },
  
  {
    "title": "PGMS_가격이 제일 비싼 식품의 정보 출력하기 (SQL)",
    "url": "/posts/PGMS%EA%B0%80%EA%B2%A9%EC%9D%B4-%EC%A0%9C%EC%9D%BC-%EB%B9%84%EC%8B%BC-%EC%8B%9D%ED%92%88%EC%9D%98-%EC%A0%95%EB%B3%B4-%EC%B6%9C%EB%A0%A5%ED%95%98%EA%B8%B0-SQL/",
    "categories": "SQL",
    "tags": "sql, 프로그래머스",
    "date": "2025-03-28 15:51:46 +0800",
    "content": "  문제 링크  메모리: 0.0 MB, 시간: 0.00 ms 코딩테스트 연습 > SUM， MAX， MIN Empty 2025년 03월 28일 16:48:47다른 방법으로 price로 내림차순한 뒤 LIMIT으로 1개 출력하는 방법도 있다."
  },
  
  {
    "title": "BOJ_11657_타임머신 (Java)",
    "url": "/posts/BOJ11657%ED%83%80%EC%9E%84%EB%A8%B8%EC%8B%A0-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-03-28 15:18:10 +0800",
    "content": "  문제 링크  메모리: 19564 KB, 시간: 256 ms 벨만–포드, 그래프 이론, 최단 경로 2025년 3월 28일 16:08:59벨만 포드를 풀기위해 풀었다. 벨만포드는 생각보다 구현이 쉽다. 그리고 어떤 문제에 사용해야하는지도 거의 정해져있는것같다. 간선의 "
  },
  
  {
    "title": "BOJ_1719_택배 (Java)",
    "url": "/posts/BOJ1719%ED%83%9D%EB%B0%B0-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-03-28 15:15:45 +0800",
    "content": "  문제 링크  메모리: 21208 KB, 시간: 336 ms 데이크스트라, 플로이드–워셜, 그래프 이론, 최단 경로 2025년 3월 28일 15:40:31플로이드 워셜로 경유지중심으로 O($N^3$)으로 풀었다. 다익스트라 하면 O(N\\*MlogN)인데 M이 매우 크"
  },
  
  {
    "title": "PGMS_Kakao 2023_이모티콘 할인행사 (Java)",
    "url": "/posts/PGMSKakao-2023%EC%9D%B4%EB%AA%A8%ED%8B%B0%EC%BD%98-%ED%95%A0%EC%9D%B8%ED%96%89%EC%82%AC-Java/",
    "categories": "알고리즘",
    "tags": "Java, 알고리즘, 프로그래머스",
    "date": "2025-03-27 20:30:13 +0800",
    "content": "문제 링크 메모리: 85.3 MB, 시간: 59.33 ms코딩테스트 연습 > 2023 KAKAO BLIND RECRUITMENT정확성: 100.0합계: 100.0 / 100.02025년 03월 27일 21:28:02출처: 프로그래머스 코딩 테스트 연습, https&#x"
  },
  
  {
    "title": "BOJ_10431_줄 세우기 (Java, C++, Python)",
    "url": "/posts/BOJ10431%EC%A4%84-%EC%84%B8%EC%9A%B0%EA%B8%B0-Java-C-Python/",
    "categories": "알고리즘",
    "tags": "C++, Java, python, 백준, 알고리즘",
    "date": "2025-03-27 19:10:21 +0800",
    "content": "문제 링크 메모리: 32412 KB, 시간: 116 ms구현, 시뮬레이션, 정렬2025년 3월 27일 20:06:08리스트 맨 뒤에서부터 제대로 찾아갈 때 까지 cnt를 늘려가고 이후 다시 정렬. import java.io.; import java.util.; publ"
  },
  
  {
    "title": "BOJ_2661_좋은 수열 (Java)",
    "url": "/posts/BOJ2661%EC%A2%8B%EC%9D%80-%EC%88%98%EC%97%B4-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-03-25 22:54:24 +0800",
    "content": "  문제 링크  메모리: 14460 KB, 시간: 132 ms 백트래킹 2025년 3월 25일 23:22:57 import java.io.; import java.util.; public class Main {     static BufferedReader br;   "
  },
  
  {
    "title": "BOJ_13975_파일 합치기 3 (Java)",
    "url": "/posts/BOJ13975%ED%8C%8C%EC%9D%BC-%ED%95%A9%EC%B9%98%EA%B8%B0-3-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-03-25 22:50:19 +0800",
    "content": "  문제 링크  메모리: 279312 KB, 시간: 2468 ms 자료 구조, 그리디 알고리즘, 우선순위 큐 2025년 3월 25일 21:40:00 import java.io.; import java.util.; public class Main {     static "
  },
  
  {
    "title": "LeetCode_1037_Minimum Number of K Consecutive Bit Flips (Java)",
    "url": "/posts/LeetCode1037Minimum-Number-of-K-Consecutive-Bit-Flips-Java/",
    "categories": "알고리즘",
    "tags": "Java, leetcode, 알고리즘",
    "date": "2025-03-25 22:48:30 +0800",
    "content": "   }"
  },
  
  {
    "title": "BOJ_1976_여행 가자 (Java)",
    "url": "/posts/BOJ1976%EC%97%AC%ED%96%89-%EA%B0%80%EC%9E%90-Java-7fv3wkih/",
    "categories": "알고리즘",
    "tags": "",
    "date": "2025-03-25 22:43:52 +0800",
    "content": "[Gold IV] 여행 가자 - 1976  문제 링크  성능 요약  메모리: 19060 KB, 시간: 160 ms  분류  자료 구조, 분리 집합, 그래프 이론, 그래프 탐색  제출 일자  2025년 3월 25일 19:22:21  문제 설명  동혁이는 친구들과 함께 여"
  },
  
  {
    "title": "PGMS_금과 은 운반하기 (Java)",
    "url": "/posts/PGMS%EA%B8%88%EA%B3%BC-%EC%9D%80-%EC%9A%B4%EB%B0%98%ED%95%98%EA%B8%B0-Java/",
    "categories": "알고리즘",
    "tags": "Java, 알고리즘, 프로그래머스",
    "date": "2025-03-25 12:34:44 +0800",
    "content": "  문제 링크  메모리: 105 MB, 시간: 75.97 ms 코딩테스트 연습 > 월간 코드 챌린지 시즌3 정확성: 100.0합계: 100.0 / 100.0 2025년 03월 24일 04:20:44 }"
  },
  
  {
    "title": "BOJ_24492_Cow Frisbee",
    "url": "/posts/BOJ24492Cow-Frisbee/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-03-22 16:48:16 +0800",
    "content": "문제 링크 메모리: 54876 KB, 시간: 516 ms자료 구조, 스택2025년 3월 22일 17:44:04Farmer John's $N$ cows ($N \\leq 3 \\times 10^5)$ have heights $1, 2, \\ldots, N$. One da"
  },
  
  {
    "title": "Computer Science Note - Database",
    "url": "/posts/Computer-Science-Note-Database/",
    "categories": "CS, Note",
    "tags": "CS, 데이터베이스",
    "date": "2025-03-21 23:30:43 +0800",
    "content": "본 게시글의 그림들은 참고 레퍼런스들을 토대로 직접 그렸음을 미리 밝힙니다.사람, 장소, 물건 등 여러개의 속성을 지닌 명사를 의미ex) 회원이라는 엔티티 -> 속성 : 이름, 아이디, 주소, 전화번호를 속성으로 가짐서비스의 요구사항에 맞춰 속성이 정해짐A가 혼자서는 "
  },
  
  {
    "title": "Computer Science Note - Network",
    "url": "/posts/Computer-Science-Note-Network/",
    "categories": "CS, Note",
    "tags": "CS, 네트워크",
    "date": "2025-03-21 05:01:41 +0800",
    "content": "좋은 네트워크많은 처리량을 처리 가능지연시간이 짧음장애 빈도가 적음좋은 보안많은 트래픽 처리 = 많은 처리량을 가진다처리량 단위 : BPS (Bits Per Second)처리량에 영향을 주는 것들사용자들이 많이 접속할때마다 커지는 트래픽네트워크 장치 간의 대역폭네트워크"
  },
  
  {
    "title": "BOJ_2877_4와 7 (Java)",
    "url": "/posts/BOJ28774%EC%99%80-7-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-03-19 19:08:30 +0800",
    "content": "문제 링크 메모리: 14284 KB, 시간: 100 ms구현, 수학2025년 3월 19일 20:04:13자릿수별 개수 파악1자리 숫자: 2개 (4, 7) = 2¹2자리 숫자: 4개 (44, 47, 74, 77) = 2²3자리 숫자: 8개 (444, 447, ...) ="
  },
  
  {
    "title": "BOJ_2169_로봇 조종하기 (Java)",
    "url": "/posts/BOJ2169%EB%A1%9C%EB%B4%87-%EC%A1%B0%EC%A2%85%ED%95%98%EA%B8%B0-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-03-19 18:22:11 +0800",
    "content": "문제 링크 메모리: 89348 KB, 시간: 532 ms다이나믹 프로그래밍2025년 3월 19일 19:19:15dfs로 접근하면 시간초과가 발생한다. 이에 dp를 사용했다. 각 층마다 진행하면 위에서 내려오는것, 왼쪽으로 이동하는것, 오른쪽으로 이동하는것으로 생각할 수"
  },
  
  {
    "title": "BOJ_10800_컬러볼 (Java)",
    "url": "/posts/BOJ10800%EC%BB%AC%EB%9F%AC%EB%B3%BC-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-03-19 05:16:56 +0800",
    "content": "문제 링크 메모리: 102656 KB, 시간: 1816 ms구현, 누적 합, 정렬2025년 3월 19일 06:11:23"
  },
  
  {
    "title": "PGMS_2023 Kakao_표 병합 (Java)",
    "url": "/posts/PGMS2023-Kakao%ED%91%9C-%EB%B3%91%ED%95%A9-Java/",
    "categories": "알고리즘",
    "tags": "Java, 알고리즘, 프로그래머스",
    "date": "2025-03-19 03:55:35 +0800",
    "content": "문제 링크 메모리: 78.3 MB, 시간: 21.13 ms코딩테스트 연습 > 2023 KAKAO BLIND RECRUITMENT정확성: 100.0합계: 100.0 / 100.02025년 03월 19일 04:54:15출처: 프로그래머스 코딩 테스트 연습, https&#x"
  },
  
  {
    "title": "LeetCode_Ones and Zeroes",
    "url": "/posts/LeetCodeOnes-and-Zeroes/",
    "categories": "알고리즘",
    "tags": "Java, leetcode, 알고리즘",
    "date": "2025-03-18 23:20:53 +0800",
    "content": "LeetCode_Ones and Zeroes"
  },
  
  {
    "title": "BOJ_1027_고층 건물 (Java)",
    "url": "/posts/BOJ1027%EA%B3%A0%EC%B8%B5-%EA%B1%B4%EB%AC%BC-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-03-18 17:42:44 +0800",
    "content": "문제 링크 메모리: 14220 KB, 시간: 104 ms브루트포스 알고리즘, 기하학, 수학2025년 3월 18일 18:33:54좌우 건물들의 높이를 이용했다. 기울기의 증감이 일정하게 증가하느냐 감소하느냐를 보면된다.import java.io.;import java.u"
  },
  
  {
    "title": "BOJ_20437_문자열 게임 2 (Java)",
    "url": "/posts/BOJ20437%EB%AC%B8%EC%9E%90%EC%97%B4-%EA%B2%8C%EC%9E%84-2-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-03-18 04:05:59 +0800",
    "content": "문제 링크 메모리: 28544 KB, 시간: 296 ms슬라이딩 윈도우, 문자열2025년 3월 18일 05:00:291번 답 구하기와 2번 답 구하기를 각각 나누어서 설명하겠다.왼쪽(left)과 오른쪽(right) 포인터를 사용하여 윈도우를 조절윈도우 내에서 각 문자의"
  },
  
  {
    "title": "PGMS_이름에 el이 들어가는 동물 찾기 (SQL)",
    "url": "/posts/PGMS%EC%9D%B4%EB%A6%84%EC%97%90-el%EC%9D%B4-%EB%93%A4%EC%96%B4%EA%B0%80%EB%8A%94-%EB%8F%99%EB%AC%BC-%EC%B0%BE%EA%B8%B0-SQL/",
    "categories": "SQL",
    "tags": "sql, 프로그래머스",
    "date": "2025-03-17 20:55:11 +0800",
    "content": "문제 링크 메모리: 0.0 MB, 시간: 0.00 ms코딩테스트 연습 > String， DateEmpty2025년 03월 17일 21:54:36출처: 프로그래머스 코딩 테스트 연습, https&#x3A;//school.programmers.co.kr/learn/chal"
  },
  
  {
    "title": "BOJ_15573_채굴 (Java)",
    "url": "/posts/BOJ15573%EC%B1%84%EA%B5%B4-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-03-16 16:06:56 +0800",
    "content": "문제 링크 메모리: 314360 KB, 시간: 1664 ms너비 우선 탐색, 이분 탐색, 그래프 이론, 그래프 탐색, 매개 변수 탐색2025년 3월 16일 16:59:34"
  },
  
  {
    "title": "BOJ_12886_돌 그룹 (Java)",
    "url": "/posts/BOJ12886%EB%8F%8C-%EA%B7%B8%EB%A3%B9-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-03-14 14:36:17 +0800",
    "content": "문제 링크 메모리: 69936 KB, 시간: 260 ms너비 우선 탐색, 그래프 이론, 그래프 탐색2025년 3월 14일 15:33:01import java.io.;import java.util.;public class Main {    static BufferedRe"
  },
  
  {
    "title": "BOJ_14232_보석 도둑 (Java)",
    "url": "/posts/BOJ14232%EB%B3%B4%EC%84%9D-%EB%8F%84%EB%91%91-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-03-14 14:06:13 +0800",
    "content": "문제 링크 메모리: 14368 KB, 시간: 116 ms수학, 정수론, 소수 판정, 에라토스테네스의 체2025년 3월 14일 15:03:12무조건 K만큼 들어야하므로 나눗셈을 적용했다. 나눌 수 없는수는 소수이므로 소수로 계속 나누어주었다./\\*\\*Author: now"
  },
  
  {
    "title": "BOJ_14225_부분수열의 합 (Java)",
    "url": "/posts/BOJ14225%EB%B6%80%EB%B6%84%EC%88%98%EC%97%B4%EC%9D%98-%ED%95%A9-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-03-13 14:25:23 +0800",
    "content": "  문제 링크  메모리: 16396 KB, 시간: 124 ms 브루트포스 알고리즘 2025년 3월 13일 15:23:25import java.io.;import java.util.;public class Main {    static BufferedReader br; "
  },
  
  {
    "title": "BOJ_2835_인기도 조사 (Java)",
    "url": "/posts/BOJ2835%EC%9D%B8%EA%B8%B0%EB%8F%84-%EC%A1%B0%EC%82%AC-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-03-11 02:38:37 +0800",
    "content": "문제 링크 메모리: 204196 KB, 시간: 1884 ms자료 구조, 느리게 갱신되는 세그먼트 트리, 누적 합, 세그먼트 트리2025년 3월 10일 23:26:53"
  },
  
  {
    "title": "BOJ_1826_연료 채우기 (Java)",
    "url": "/posts/BOJ1826%EC%97%B0%EB%A3%8C-%EC%B1%84%EC%9A%B0%EA%B8%B0-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-03-10 20:06:43 +0800",
    "content": "문제 링크 메모리: 20244 KB, 시간: 232 ms자료 구조, 그리디 알고리즘, 우선순위 큐, 정렬2025년 3월 10일 20:56:48현재 위치에서 갈 수 있는 모든 주유소 중에서 가장 많은 연료를 제공하는 곳을 선택우선순위 큐를 사용하여 방문 가능한 주유소 중"
  },
  
  {
    "title": "Computer Networking: a Top Down Approach - (10)",
    "url": "/posts/Computer-Networking-a-Top-Down-Approach-10/",
    "categories": "네트워크",
    "tags": "네트워크",
    "date": "2025-03-10 04:13:10 +0800",
    "content": "복습DNS는 신뢰성보다 속도가 더 중요하고, 많은 클라이언트를 수용하는 것을 필요로 한다. 따라서 속도가 빠르고, 연결 상태를 유지하지 않고 정보 기록을 최소화하여 많은 클라이언트 수용이 가능한 UDP를 사용한다.RDT에서 2가지 안좋은 현상 가능패킷 에러패킷 loss"
  },
  
  {
    "title": "SQL vs NoSQL",
    "url": "/posts/SQL-vs-NoSQL/",
    "categories": "공부",
    "tags": "백엔드",
    "date": "2025-03-10 02:21:34 +0800",
    "content": "관계형 데이터베이스는 고정된 row와 column으로 구성된 테이블에 데이터를 저장한다. 그리고 SQL을 사용하여 여러 테이블에 존재하는 데이터와 관계에 따라서 조인하여 합칠 수 있다. 관계형 데이터베이스는 데이터를 중복 없이 한번만 저장하고, 데이터 무결성을 보장한다"
  },
  
  {
    "title": "HTTP/1.1 vs HTTP/2.0",
    "url": "/posts/HTTP1.1-vs-HTTP2.0/",
    "categories": "공부",
    "tags": "백엔드",
    "date": "2025-03-10 02:13:59 +0800",
    "content": "HTTP는 웹상에서 클라이언트와 서버간의 통신을 위한 프로토콜이다. HTTP/1.0의 경우 한개의 요청과 응답마다 TCP 커넥션을 생성하여 사용되었다. 하지만 이러한 요청은 매 요청마다 연결을 생성하는 오버헤드가 발생한다. HTTP/1.1은 이러한 문제를 지속 커넥션 "
  },
  
  {
    "title": "프로세스보다 쓰레드의 컨텍스트 스위칭이 빠른 이유",
    "url": "/posts/%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%EB%B3%B4%EB%8B%A4-%EC%93%B0%EB%A0%88%EB%93%9C%EC%9D%98-%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8-%EC%8A%A4%EC%9C%84%EC%B9%AD%EC%9D%B4-%EB%B9%A0%EB%A5%B8-%EC%9D%B4%EC%9C%A0/",
    "categories": "공부",
    "tags": "Java, Spring, 백엔드",
    "date": "2025-03-09 04:47:54 +0800",
    "content": "컨텍스트 스위칭은 CPU나 코어에서 실행중이던 프로세스나 쓰레드가 다른 프로세스나 쓰레드로 교체되는 과정이다. 이는 멀티태스킹 시스템에서 여러 작업을 효율적으로 관리하기 위해 필수적인 메커니즘이다.컨텍스트는 프로세스나 쓰레드의 현재 상태를 의미한다. 여기에는 CPU의 "
  },
  
  {
    "title": "Scale-Up vs Scale-Out",
    "url": "/posts/Scale-Up-vs-Scale-Out/",
    "categories": "공부",
    "tags": "Java, Spring, 백엔드",
    "date": "2025-03-09 04:21:11 +0800",
    "content": "기존 개발하던 서비스의 서버가 한계에 다다랐을 때 Scale-Up (스케일 업) 혹은 Scale-Out (스케일 아웃) 을 고려한다.스케일 업은 기존의 서버를 더 높은 사양으로 업그레이드하는것이다. 예를들면 AWS EC2 t2.micro에서 t2.small로 업그레이드"
  },
  
  {
    "title": "ACID란?",
    "url": "/posts/ACID%EB%9E%80/",
    "categories": "공부",
    "tags": "백엔드",
    "date": "2025-03-09 02:25:54 +0800",
    "content": "ACID는 원자성(Atomicity), 일관성(Consistency), 격리성(Isolation), 지속성(Durability)의 약자이며, 데이터베이스 트랜잭션이 안전하게 수행된다는 것을 보장하기 위한 성질을 의미한다.원자성은 트랜잭션 내부 연산들이 부분적으로 실행되"
  },
  
  {
    "title": "REST 란?",
    "url": "/posts/REST-%EB%9E%80/",
    "categories": "공부",
    "tags": "백엔드",
    "date": "2025-03-09 01:25:56 +0800",
    "content": "REST(Representational State Transfer) 는 자원의 표현을 이용하여 상태를 주고받는 것을 의미한다. 여기서 자원이란 소프트웨어가 관리하는 모든 것을 의미하고 자원의 표현은 자원을 나타내기 위한 이름을 의미한다. 예를들어, 서버가 관리하는 주문"
  },
  
  {
    "title": "동시성과 병렬성",
    "url": "/posts/%EB%8F%99%EC%8B%9C%EC%84%B1%EA%B3%BC-%EB%B3%91%EB%A0%AC%EC%84%B1/",
    "categories": "공부",
    "tags": "Java, Spring, 백엔드",
    "date": "2025-03-09 00:27:15 +0800",
    "content": "동시성이란?"
  },
  
  {
    "title": "PGMS_중복 제거하기 (SQL)",
    "url": "/posts/PGMS%EC%A4%91%EB%B3%B5-%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0-SQL/",
    "categories": "SQL",
    "tags": "sql, 프로그래머스",
    "date": "2025-03-08 19:00:32 +0800",
    "content": "문제 링크 메모리: 0.0 MB, 시간: 0.00 ms코딩테스트 연습 > SUM， MAX， MINEmpty2025년 03월 08일 19:59:10출처: 프로그래머스 코딩 테스트 연습, https&#x3A;//school.programmers.co.kr/learn/cha"
  },
  
  {
    "title": "BOJ_2225_합분해 (Java, Python)",
    "url": "/posts/BOJ2225%ED%95%A9%EB%B6%84%ED%95%B4-Java-Python/",
    "categories": "알고리즘",
    "tags": "Java, python, 백준, 알고리즘",
    "date": "2025-03-08 17:51:42 +0800",
    "content": "문제 링크 메모리: 34456 KB, 시간: 44 ms다이나믹 프로그래밍, 수학2025년 3월 8일 18:48:44import java.io.;import java.util.;public class Main {    static BufferedReader br;    "
  },
  
  {
    "title": "PGMS_가장 큰 삼각형 덩어리 (Java)",
    "url": "/posts/PGMS%EA%B0%80%EC%9E%A5-%ED%81%B0-%EC%82%BC%EA%B0%81%ED%98%95-%EB%8D%A9%EC%96%B4%EB%A6%AC-Java/",
    "categories": "알고리즘",
    "tags": "Java, 알고리즘, 프로그래머스",
    "date": "2025-03-08 12:21:25 +0800",
    "content": "문제 링크 메모리: 121 MB, 시간: 89.95 ms코딩테스트 연습 > 2025 프로그래머스 코드챌린지 본선정확성: 100.0합계: 100.0 / 100.02025년 03월 07일 20:11:02출처: 프로그래머스 코딩 테스트 연습, https&#x3A;//scho"
  },
  
  {
    "title": "BOJ_8980_택배 (Java)",
    "url": "/posts/BOJ8980%ED%83%9D%EB%B0%B0-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-03-07 12:58:38 +0800",
    "content": "문제 링크 메모리: 20996 KB, 시간: 324 ms그리디 알고리즘, 정렬2025년 3월 7일 13:55:58import java.io.;import java.util.;public class Main {    class Package implements Compa"
  },
  
  {
    "title": "PGMS_봉인된 주문 (Java)",
    "url": "/posts/PGMS%EB%B4%89%EC%9D%B8%EB%90%9C-%EC%A3%BC%EB%AC%B8-Java/",
    "categories": "알고리즘",
    "tags": "Java, 알고리즘, 프로그래머스",
    "date": "2025-03-07 01:59:37 +0800",
    "content": "문제 링크(https&#x3A;//school.programmers.co.kr/learn/courses/30/lessons/389481메모리: 154 MB, 시간: 129.59 ms코딩테스트 연습 > 2025 프로그래머스 코드챌린지 2차 예선정확성: 100.0합계: 1"
  },
  
  {
    "title": "BOJ_19949_영재의 시험 (Java)",
    "url": "/posts/BOJ19949%EC%98%81%EC%9E%AC%EC%9D%98-%EC%8B%9C%ED%97%98-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-03-05 15:00:14 +0800",
    "content": "문제 링크 메모리: 15620 KB, 시간: 196 ms백트래킹, 브루트포스 알고리즘2025년 3월 5일 15:56:25dfs로 모든 경우의수를, 백트래킹 적용해서 풀었다. import java.io.;import java.util.;public class Main {"
  },
  
  {
    "title": "BOJ_388354_홀짝트리 (Java)",
    "url": "/posts/BOJ388354%ED%99%80%EC%A7%9D%ED%8A%B8%EB%A6%AC-Java/",
    "categories": "알고리즘",
    "tags": "Java, 알고리즘, 프로그래머스",
    "date": "2025-03-04 15:52:03 +0800",
    "content": "문제 링크 메모리: 290 MB, 시간: 718.45 ms코딩테스트 연습 > 2025 프로그래머스 코드챌린지 1차 예선정확성: 100.0합계: 100.0 / 100.02025년 03월 04일 16:35:14출처: 프로그래머스 코딩 테스트 연습, https&#x3A;//"
  },
  
  {
    "title": "LeetCode_2553_Total Cost to Hire K Workers (Java)",
    "url": "/posts/LeetCode2553Total-Cost-to-Hire-K-Workers-Java/",
    "categories": "알고리즘",
    "tags": "Java, leetcode, 알고리즘",
    "date": "2025-03-04 13:23:24 +0800",
    "content": "왼쪽K개중 최솟값, 오른쪽 K개중 최솟값을 O(1)에 찾으며 삽입시 log(N)으로 정렬하는 최소힙 2개를 사용했다. 그리고 서로의 구간을 침범하지 않게 left&lt;=right를 유지했다.}"
  },
  
  {
    "title": "PGMS_59406_동물 수 구하기 (SQL)",
    "url": "/posts/PGMS59406%EB%8F%99%EB%AC%BC-%EC%88%98-%EA%B5%AC%ED%95%98%EA%B8%B0-SQL/",
    "categories": "SQL",
    "tags": "sql, 프로그래머스",
    "date": "2025-03-04 12:46:15 +0800",
    "content": "문제 링크 메모리: 0.0 MB, 시간: 0.00 ms코딩테스트 연습 > SUM， MAX， MINEmpty2025년 03월 04일 13:33:54출처: 프로그래머스 코딩 테스트 연습, https&#x3A;//school.programmers.co.kr/learn/cha"
  },
  
  {
    "title": "BOJ_1394_암호 (Java)",
    "url": "/posts/BOJ1394%EC%95%94%ED%98%B8-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-03-04 12:41:20 +0800",
    "content": "문제 링크 메모리: 28008 KB, 시간: 272 ms조합론, 자료 구조, 해시를 사용한 집합과 맵, 수학, 문자열2025년 3월 4일 02:42:06암호의 길이가 M일때 1~(M-1)까지의 경우의수는 모두 더해줘야한다. 그걸 다 더해주고, 길이 M일땐 각 위치마다 "
  },
  
  {
    "title": "LeetCode_127_Word Ladder (Java)",
    "url": "/posts/LeetCode127Word-Ladder-Java/",
    "categories": "알고리즘",
    "tags": "Java, leetcode, 알고리즘",
    "date": "2025-03-04 12:37:11 +0800",
    "content": "Wordlist에 있는 문자들로 탐색을 이어나가야하는데 하나씩 문자가 다른 것들을 찾는 bfs를 생각했다.}"
  },
  
  {
    "title": "BOJ_2866_문자열 잘라내기 (Java)",
    "url": "/posts/BOJ2866%EB%AC%B8%EC%9E%90%EC%97%B4-%EC%9E%98%EB%9D%BC%EB%82%B4%EA%B8%B0-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-03-04 00:30:52 +0800",
    "content": "문제 링크 메모리: 304568 KB, 시간: 1100 ms이분 탐색, 자료 구조, 해시를 사용한 집합과 맵, 문자열2025년 3월 2일 21:48:02모든 문자열을 생각해보고 각 문자열을 행마다 Hashset으로 비교했다.import java.io.;import ja"
  },
  
  {
    "title": "BOJ_17420_깊콘이 넘쳐흘러 (Java)",
    "url": "/posts/BOJ17420%EA%B9%8A%EC%BD%98%EC%9D%B4-%EB%84%98%EC%B3%90%ED%9D%98%EB%9F%AC-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-03-01 04:24:18 +0800",
    "content": "문제 링크 메모리: 41760 KB, 시간: 584 ms그리디 알고리즘, 정렬2025년 3월 1일 05:21:19/\\*\\*Author: nowalex322, Kim HyeonJae\\*/import java.io.;import java.util.;public class "
  },
  
  {
    "title": "BOJ_14719",
    "url": "/posts/BOJ14719/",
    "categories": "알고리즘",
    "tags": "",
    "date": "2025-02-28 17:56:15 +0800",
    "content": "문제 링크 메모리: 14316 KB, 시간: 104 ms구현, 시뮬레이션2025년 2월 28일 18:39:00각 위치에서 좌우 최대높이를 저장한 뒤, 그 중 작은 값을 기준으로 물이 고이게 된다. 그리고 고이는 양은 그 위치에서의 높이를 빼주면 된다. 이때 그 위치에서"
  },
  
  {
    "title": "BOJ_14391_종이 조각 (Java)",
    "url": "/posts/BOJ14391%EC%A2%85%EC%9D%B4-%EC%A1%B0%EA%B0%81-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-02-28 03:01:14 +0800",
    "content": "문제 링크 메모리: 18520 KB, 시간: 188 ms비트마스킹, 브루트포스 알고리즘2025년 2월 27일 22:06:49최대 4\\*4 개의 비트라고 생각하고 가로를 0, 세로를 1로 두고 숫자를 계산했다.import java.io.;import java.util.;"
  },
  
  {
    "title": "디스코드 뮤직 봇 개발 (4)",
    "url": "/posts/%EB%94%94%EC%8A%A4%EC%BD%94%EB%93%9C-%EB%AE%A4%EC%A7%81-%EB%B4%87-%EA%B0%9C%EB%B0%9C-4/",
    "categories": "사이드, 프로젝트",
    "tags": "GCP, PostgreSQL, discord, docker, docker compose",
    "date": "2025-02-26 04:41:42 +0800",
    "content": "오늘은 문제가 많았던 출석관련 기능을 수정했다. 그럼 이번 수정사항과 여러 시행착오를 아래에서 자세히 설명해보겠다.기존에 사용하던 SQLite 데이터베이스를 PostgreSQL로 전환하고, Docker Compose를 통해 배포 환경을 구축한 과정을 기록하려고 한다.기"
  },
  
  {
    "title": "BOJ_21758_꿀 따기 (Java)",
    "url": "/posts/BOJ21758%EA%BF%80-%EB%94%B0%EA%B8%B0-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-02-25 23:16:23 +0800",
    "content": "문제 링크 메모리: 25356 KB, 시간: 272 ms그리디 알고리즘, 누적 합2025년 2월 26일 00:04:35아래와 같이 좌우로 $N$개의 장소가 있다.위의 그림과 같이 배치된 경우 두 마리의 벌 모두 $4 + 1 + 4 + 9 + 9 = 27$의 꿀을 따서,"
  },
  
  {
    "title": "PGMS_164671_조회수가 가장 많은 중고거래 게시판의 첨부파일 조회하기 (SQL)",
    "url": "/posts/PGMS164671%EC%A1%B0%ED%9A%8C%EC%88%98%EA%B0%80-%EA%B0%80%EC%9E%A5-%EB%A7%8E%EC%9D%80-%EC%A4%91%EA%B3%A0%EA%B1%B0%EB%9E%98-%EA%B2%8C%EC%8B%9C%ED%8C%90%EC%9D%98-%EC%B2%A8%EB%B6%80%ED%8C%8C%EC%9D%BC-%EC%A1%B0%ED%9A%8C%ED%95%98%EA%B8%B0-SQL/",
    "categories": "SQL",
    "tags": "sql, 프로그래머스",
    "date": "2025-02-25 20:31:45 +0800",
    "content": "문제 링크 메모리: 0.0 MB, 시간: 0.00 ms코딩테스트 연습 > String， DateEmpty2025년 02월 25일 21:28:25출처: 프로그래머스 코딩 테스트 연습, https&#x3A;//school.programmers.co.kr/learn/chal"
  },
  
  {
    "title": "디스코드 뮤직 봇 개발 (3)",
    "url": "/posts/%EB%94%94%EC%8A%A4%EC%BD%94%EB%93%9C-%EB%AE%A4%EC%A7%81-%EB%B4%87-%EA%B0%9C%EB%B0%9C-3/",
    "categories": "사이드, 프로젝트",
    "tags": "CI/CD, discord, systemd",
    "date": "2025-02-25 04:36:00 +0800",
    "content": "출석체크 기능을 사용하다 보니 자정인데도 출석했다고 인식하는 것을 보고 직감적으로 한국 표준 시간대가 설정되지 않았다고 생각했다. 이를 적용하고자 코드를 변경하려고 했고, 그 전에 CI/CD  및 임시배포방법인 tmux 대신 systemd 로 바꾸고자 생각했다.이에 먼"
  },
  
  {
    "title": "VSCode에서 Git Bash Terminal 사용 시 시작 경로 오류 해결하기",
    "url": "/posts/VSCode%EC%97%90%EC%84%9C-Git-Bash-Terminal-%EC%82%AC%EC%9A%A9-%EC%8B%9C-%EC%8B%9C%EC%9E%91-%EA%B2%BD%EB%A1%9C-%EC%98%A4%EB%A5%98-%ED%95%B4%EA%B2%B0%ED%95%98%EA%B8%B0/",
    "categories": "오류, 해결",
    "tags": "vscode",
    "date": "2025-02-25 02:43:23 +0800",
    "content": "VS Code에서 Git Bash 터미널을 사용할 때 예상치 못한 문제가 발생했다. 터미널이 프로젝트 작업 공간(workspace folder)에서 시작되지 않고 엉뚱한 위치인 C:/Users/\\[User]/AppData/Local/Programs/Microsoft V"
  },
  
  {
    "title": "LeetCode_584. Find Customer Referee (SQL)",
    "url": "/posts/LeetCode584.-Find-Customer-Referee-SQL/",
    "categories": "SQL",
    "tags": "leetcode, sql",
    "date": "2025-02-25 01:43:00 +0800",
    "content": "584. Find Customer RefereeEasyTable: Customer  +-------------+---------+ | Column Name | Type    | +-------------+---------+ | id          | int     | | name        | varchar | | referee_id  | int    ..."
  },
  
  {
    "title": "LeetCode_1908. Recyclable and Low Fat Products (SQL)",
    "url": "/posts/LeetCode1908.-Recyclable-and-Low-Fat-Products-SQL/",
    "categories": "SQL",
    "tags": "leetcode, sql",
    "date": "2025-02-25 01:41:35 +0800",
    "content": "1908. Recyclable and Low Fat ProductsEasyTable: Products  +-------------+---------+ | Column Name | Type    | +-------------+---------+ | product_id  | int     | | low_fats    | enum    | | recyclable..."
  },
  
  {
    "title": "LeetCode_88_Merge Sorted Array (Java)",
    "url": "/posts/LeetCode88Merge-Sorted-Array-Java/",
    "categories": "알고리즘",
    "tags": "Java, leetcode, 알고리즘",
    "date": "2025-02-25 01:40:07 +0800",
    "content": "88. Merge Sorted ArrayEasyYou are given two integer arrays nums1 and nums2, sorted in non-decreasing order, and two integers m and n, representing the number of elements in nums1 and nums2 respectivel..."
  },
  
  {
    "title": "BOJ_3020_개똥벌레 (Java)",
    "url": "/posts/BOJ3020%EA%B0%9C%EB%98%A5%EB%B2%8C%EB%A0%88-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-02-24 17:38:29 +0800",
    "content": "문제 링크 메모리: 56196 KB, 시간: 276 ms이분 탐색, 누적 합2025년 2월 24일 18:33:26누적합으로 풀었다. 종유석과 석순 각각 누적합으로 겹치는 공간의 숫자를 세주었다. 그 개수별 map을 만들었고 value에는 그 구간들을 넣어주었다. 그래서"
  },
  
  {
    "title": "디스코드 뮤직 봇 개발 (2)",
    "url": "/posts/%EB%94%94%EC%8A%A4%EC%BD%94%EB%93%9C-%EB%AE%A4%EC%A7%81-%EB%B4%87-%EA%B0%9C%EB%B0%9C-2/",
    "categories": "사이드, 프로젝트",
    "tags": "GCP, discord, sqlite",
    "date": "2025-02-24 03:00:31 +0800",
    "content": "이번엔 디스코드 봇을 24/7 가동하기위한 무료 호스팅 서버를 구축하고자 한다. 여러가지 후보군 중 GCP를 선택했다. 일단 평생 무료 + 300$ 크레딧이 가장 압도적인 이유고 쓰기 편하기도 하기 때문에 선정했다.참고로 300$ 크레딧은 3달 지속된다. 그 뒤엔 무료"
  },
  
  {
    "title": "BOJ_1727_커플 만들기 (Java)",
    "url": "/posts/BOJ1727%EC%BB%A4%ED%94%8C-%EB%A7%8C%EB%93%A4%EA%B8%B0-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-02-23 22:41:02 +0800",
    "content": "문제 링크 메모리: 20392 KB, 시간: 140 ms다이나믹 프로그래밍, 그리디 알고리즘, 정렬2025년 2월 23일 23:34:57풀이가 꽤 난해했다. 인원 짝이 맞으면 정렬해서 다 연결하면 되겠지만 그게 안된다. N과 M이 달라 그때그때 최적의 선택을 해줘야하면"
  },
  
  {
    "title": "PGMS_2022 Kakao_코딩 테스트 공부 (Java)",
    "url": "/posts/PGMS2022-Kakao%EC%BD%94%EB%94%A9-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EA%B3%B5%EB%B6%80-Java/",
    "categories": "알고리즘",
    "tags": "Java, 알고리즘, 프로그래머스",
    "date": "2025-02-23 12:49:02 +0800",
    "content": "문제 링크 메모리: 54.4 MB, 시간: 13.68 ms코딩테스트 연습 > 2022 KAKAO TECH INTERNSHIP정확성: 50.0효율성: 50.0합계: 100.0 / 100.02025년 02월 23일 13:45:07출처: 프로그래머스 코딩 테스트 연습, ht"
  },
  
  {
    "title": "BOJ_20033_Square, Not Rectangle (Java)",
    "url": "/posts/BOJ20033Square-Not-Rectangle-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-02-23 00:11:23 +0800",
    "content": "문제 링크 메모리: 46272 KB, 시간: 396 ms이분 탐색, 자료 구조, 스택2025년 2월 23일 01:02:13A histogram is a polygon made by aligning $N$ adjacent rectangles that share a com"
  },
  
  {
    "title": "디스코드 뮤직 봇 개발 (1)",
    "url": "/posts/%EB%94%94%EC%8A%A4%EC%BD%94%EB%93%9C-%EB%AE%A4%EC%A7%81-%EB%B4%87-%EA%B0%9C%EB%B0%9C-1/",
    "categories": "사이드, 프로젝트",
    "tags": "discord",
    "date": "2025-02-22 10:10:50 +0800",
    "content": "디스코드를 애용하는 1인으로서 다양한 봇들은  너무 유용하고 편한 기능이다. 그중에서도 뮤직봇은 대부분의 사용자들이 애용하는 봇이라고 생각한다. 음성채널에서 간단하게 원하는 음악을 스트리밍할 수 있기 때문이다. 그런데 요즘 youtube링크를 붙여넣어도 뮤직봇이 먹통인"
  },
  
  {
    "title": "BOJ_12991_홍준이의 행렬 (Java)",
    "url": "/posts/BOJ12991%ED%99%8D%EC%A4%80%EC%9D%B4%EC%9D%98-%ED%96%89%EB%A0%AC-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-02-20 15:30:22 +0800",
    "content": "문제 링크 메모리: 31356 KB, 시간: 552 ms이분 탐색, 매개 변수 탐색2025년 2월 20일 16:26:32이분탐색을 2번 활용해주었다./\\*\\*Author: nowalex322, Kim HyeonJae\\*/import java.io.;import java"
  },
  
  {
    "title": "PGMS_요격 시스템 (Java)",
    "url": "/posts/PGMS%EC%9A%94%EA%B2%A9-%EC%8B%9C%EC%8A%A4%ED%85%9C-Java/",
    "categories": "알고리즘",
    "tags": "Java, 알고리즘, 프로그래머스",
    "date": "2025-02-20 14:28:18 +0800",
    "content": "문제 링크 메모리: 182 MB, 시간: 516.01 ms코딩테스트 연습 > 연습문제정확성: 100.0합계: 100.0 / 100.02025년 02월 20일 15:24:28출처: 프로그래머스 코딩 테스트 연습, https&#x3A;//school.programmers."
  },
  
  {
    "title": "BOJ_14258_XOR 그룹 (Java)",
    "url": "/posts/BOJ14258XOR-%EA%B7%B8%EB%A3%B9-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-02-19 15:43:55 +0800",
    "content": "문제 링크 메모리: 56844 KB, 시간: 1544 ms자료 구조, 분리 집합, 오프라인 쿼리2025년 2월 19일 16:39:34제일 작은수를 제거해나가는 대신 빈 칸에서 제일 큰수를 넣어가며 진행했다. 이때 그룹을 이루는 것끼리 union-find로 진행할 수 있"
  },
  
  {
    "title": "BOJ_2457_공주님의 정원 (Java)",
    "url": "/posts/BOJ2457%EA%B3%B5%EC%A3%BC%EB%8B%98%EC%9D%98-%EC%A0%95%EC%9B%90-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-02-19 03:27:31 +0800",
    "content": "문제 링크 메모리: 22040 KB, 시간: 268 ms그리디 알고리즘, 정렬2025년 2월 19일 04:11:26날짜를 정렬한다. 정렬 기준은 시작일을 오름차순, 끝일을 내림차순으로.모든 날짜가 연속되도록 만들었다.이후 선택을할건데 최대한 지금까지 한 구간이랑 한 날"
  },
  
  {
    "title": "BOJ_17485_진우의 달 여행 (Large) (Java)",
    "url": "/posts/BOJ17485%EC%A7%84%EC%9A%B0%EC%9D%98-%EB%8B%AC-%EC%97%AC%ED%96%89-Large-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-02-19 01:33:41 +0800",
    "content": "문제 링크 메모리: 18468 KB, 시간: 196 ms다이나믹 프로그래밍2025년 2월 19일 02:30:21간단한 3차원 dp문제다. 이전 방향을 포함해서 고려해야하기때문이다import java.io.;import java.util.;public class Main"
  },
  
  {
    "title": "BOJ_1256_사전 (Java)",
    "url": "/posts/BOJ1256%EC%82%AC%EC%A0%84-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-02-19 00:00:03 +0800",
    "content": "문제 링크 메모리: 14240 KB, 시간: 104 ms조합론, 다이나믹 프로그래밍, 수학2025년 2월 19일 00:49:23combination 수를 구했다./\\*\\*Author: nowalex322, Kim HyeonJae\\*/import java.io.;impo"
  },
  
  {
    "title": "BOJ_24230_트리 색칠하기 (Java)",
    "url": "/posts/BOJ24230%ED%8A%B8%EB%A6%AC-%EC%83%89%EC%B9%A0%ED%95%98%EA%B8%B0-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-02-16 19:57:03 +0800",
    "content": "문제 링크 메모리: 105944 KB, 시간: 1624 ms깊이 우선 탐색, 그래프 이론, 그래프 탐색, 트리2025년 2월 16일 20:52:11정점이 $N$개인 트리가 있다. 정점에는 1부터 $N$까지 번호가 붙어있다.  트리의 루트는 항상 1번 정점이며 맨 처음에"
  },
  
  {
    "title": "PGMS_루시와 엘라 찾기 (SQL)",
    "url": "/posts/PGMS%EB%A3%A8%EC%8B%9C%EC%99%80-%EC%97%98%EB%9D%BC-%EC%B0%BE%EA%B8%B0-SQL/",
    "categories": "SQL",
    "tags": "sql, 프로그래머스",
    "date": "2025-02-16 00:41:05 +0800",
    "content": "문제 링크 메모리: 0.0 MB, 시간: 0.00 ms코딩테스트 연습 > String， DateEmpty2025년 02월 16일 01:35:27출처: 프로그래머스 코딩 테스트 연습, https&#x3A;//school.programmers.co.kr/learn/chal"
  },
  
  {
    "title": "BOJ_10159_저울 (Java)",
    "url": "/posts/BOJ10159%EC%A0%80%EC%9A%B8-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-02-15 17:45:19 +0800",
    "content": "문제 링크 메모리: 15012 KB, 시간: 144 ms깊이 우선 탐색, 플로이드–워셜, 그래프 이론, 그래프 탐색, 최단 경로2025년 2월 15일 18:40:57연결 그래프를 입력받을 때 대소 비교를 오름차순과 내림차순을 구분하여 입력했다.기본 compareTo의 "
  },
  
  {
    "title": "PGMS_올바른 괄호의 갯수 (Java)",
    "url": "/posts/PGMS%EC%98%AC%EB%B0%94%EB%A5%B8-%EA%B4%84%ED%98%B8%EC%9D%98-%EA%B0%AF%EC%88%98-Java/",
    "categories": "알고리즘",
    "tags": "Java, 알고리즘, 프로그래머스",
    "date": "2025-02-15 03:03:30 +0800",
    "content": "문제 링크 메모리: 85.5 MB, 시간: 0.21 ms코딩테스트 연습 > 연습문제정확성: 100.0합계: 100.0 / 100.02025년 02월 15일 04:00:25출처: 프로그래머스 코딩 테스트 연습, https&#x3A;//school.programmers.c"
  },
  
  {
    "title": "BOJ_2600_구슬게임 (Java)",
    "url": "/posts/BOJ2600%EA%B5%AC%EC%8A%AC%EA%B2%8C%EC%9E%84-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-02-15 01:08:11 +0800",
    "content": "문제 링크 메모리: 15164 KB, 시간: 132 ms다이나믹 프로그래밍, 게임 이론2025년 2월 15일 02:05:23import java.io.;import java.util.;public class Main {    static BufferedReader br"
  },
  
  {
    "title": "Computer Networking: a Top Down Approach - (9)",
    "url": "/posts/Computer-Networking-a-Top-Down-Approach-9/",
    "categories": "네트워크",
    "tags": "네트워크",
    "date": "2025-02-13 02:06:42 +0800",
    "content": "보내는 TCP에서 받는 양을 조절한다. 파이프마다 굵기가 다 다른데 가장 얇은 파이프에서 병목현상이 발생할 확률이 높기 때문에 그 부분이 critical point이다. 하지만 그 부분을 우리가 알 순 없다. 처음에 1방울, 2방울 이렇게 천천히 늘려가본다. 그러다가 "
  },
  
  {
    "title": "BOJ_2482_색상환 (Java)",
    "url": "/posts/BOJ2482%EC%83%89%EC%83%81%ED%99%98-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-02-12 16:43:39 +0800",
    "content": "문제 링크 메모리: 16568 KB, 시간: 120 ms다이나믹 프로그래밍2025년 2월 12일 16:18:35 원형 구조를 선형으로 바꿔 DP로 계산한 후, 원형 특성으로 인한 중복을 제거하는 방식import java.io.;import java.util.;publi"
  },
  
  {
    "title": "로드 밸런싱이란?",
    "url": "/posts/%EB%A1%9C%EB%93%9C-%EB%B0%B8%EB%9F%B0%EC%8B%B1%EC%9D%B4%EB%9E%80/",
    "categories": "공부",
    "tags": "Java, Spring, 백엔드",
    "date": "2025-02-12 02:08:59 +0800",
    "content": "애플리케이션을 지원하는 리소스 풀에 들어오는 네트워크 트래픽 (들어오는 요청) 을 균등하게 분산하는 것을 의미한다. 이를 수행하는 로드 밸런서는 애플리케이션 서버 앞단에 위치하며 클라이언트 요청을 지시하고 제어한다. 이를 통해서 애플리케이션의 가용성, 확장성, 보안 및"
  },
  
  {
    "title": "Computer Networking: a Top Down Approach - (8)",
    "url": "/posts/Computer-Networking-a-Top-Down-Approach-8/",
    "categories": "네트워크",
    "tags": "네트워크",
    "date": "2025-02-12 01:54:57 +0800",
    "content": "데이터를 보낼때 상대가 받을 수 있는 만큼 보내야한다. 받을 수 있는 공간이 얼마 없는데 많이 보내선 안된다. 이걸 어떻게 알 수 있는가? 상대의 Receive Buffer을 보면 된다. Receive Buffer의 상태를 보고 데이터를 받을 수 있는 공간이 N만큼 남"
  },
  
  {
    "title": "BOJ_15661_링크와 스타트 (Java)",
    "url": "/posts/BOJ15661%EB%A7%81%ED%81%AC%EC%99%80-%EC%8A%A4%ED%83%80%ED%8A%B8-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-02-11 19:47:15 +0800",
    "content": "문제 링크 메모리: 20332 KB, 시간: 1268 ms백트래킹, 비트마스킹, 브루트포스 알고리즘2025년 2월 11일 20:38:37이전 비슷한 문제인 스타트와 링크 를 조금만 개선하면된다. 팀마다 인원수 제한이 없으므로 1부터 N-1까지 고려하도록 변경해주었다.i"
  },
  
  {
    "title": "SWEA_5653_줄기세포 배양 (Java)",
    "url": "/posts/SWEA5653%EC%A4%84%EA%B8%B0%EC%84%B8%ED%8F%AC-%EB%B0%B0%EC%96%91-Java/",
    "categories": "알고리즘",
    "tags": "Java, SWEA, 알고리즘",
    "date": "2025-02-11 19:43:50 +0800",
    "content": "문제 링크 메모리: 100,876 KB, 시간: 2,361 ms, 코드길이: 3,798 Bytes2025-02-11 19:24출처: SW Expert Academy, https&#x3A;//swexpertacademy.com/main/code/problem/proble"
  },
  
  {
    "title": "BOJ_15683_감시 (Java)",
    "url": "/posts/BOJ15683%EA%B0%90%EC%8B%9C-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-02-11 02:03:32 +0800",
    "content": "문제 링크 메모리: 44284 KB, 시간: 292 ms백트래킹, 브루트포스 알고리즘, 구현, 시뮬레이션2025년 2월 11일 02:47:05"
  },
  
  {
    "title": "BOJ_4384_공평하게 팀 나누기 (Java)",
    "url": "/posts/BOJ4384%EA%B3%B5%ED%8F%89%ED%95%98%EA%B2%8C-%ED%8C%80-%EB%82%98%EB%88%84%EA%B8%B0-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-02-10 23:28:28 +0800",
    "content": "문제 링크 메모리: 36892 KB, 시간: 188 ms다이나믹 프로그래밍, 배낭 문제2025년 2월 10일 23:55:01/\\*\\*Author: nowalex322, Kim HyeonJae\\*/import java.io.;import java.util.;public "
  },
  
  {
    "title": "BOJ_24231_해석 (Java)",
    "url": "/posts/BOJ24231%ED%95%B4%EC%84%9D-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-02-10 12:04:29 +0800",
    "content": "문제 링크 메모리: 15216 KB, 시간: 148 ms다이나믹 프로그래밍2025년 2월 10일 13:01:01$($ 와 $)$로만 이루어진 문자열을 괄호 문자열이라고 한다. 괄호 문자열 중, 다음 규칙을 지키는 문자열을 올바른 괄호 문자열이라고 한다.빈 문자열은 올바"
  },
  
  {
    "title": "BOJ_17613_점프 (Java)",
    "url": "/posts/BOJ17613%EC%A0%90%ED%94%84-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-02-10 11:15:28 +0800",
    "content": "문제 링크 메모리: 21952 KB, 시간: 212 ms분할 정복, 다이나믹 프로그래밍2025년 2월 10일 12:07:56아이디어는 겨우 떠올렸는데 분기가 어려웠다. "
  },
  
  {
    "title": "BOJ_15948_간단한 문제 (Java)",
    "url": "/posts/BOJ15948%EA%B0%84%EB%8B%A8%ED%95%9C-%EB%AC%B8%EC%A0%9C-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-02-10 03:54:45 +0800",
    "content": "[Platinum I] 간단한 문제 - 15948  문제 링크  성능 요약  메모리: 14212 KB, 시간: 104 ms  분류  애드 혹, 해 구성하기, 수학  제출 일자  2025년 2월 10일 03:36:23  문제 설명  자연수 $n$, $m$과 자연수 수열 "
  },
  
  {
    "title": "PGMS_동명 동물 수 찾기 (SQL)",
    "url": "/posts/PGMS%EB%8F%99%EB%AA%85-%EB%8F%99%EB%AC%BC-%EC%88%98-%EC%B0%BE%EA%B8%B0-SQL/",
    "categories": "SQL",
    "tags": "sql, 프로그래머스",
    "date": "2025-02-10 00:22:11 +0800",
    "content": "문제 링크 메모리: 0.0 MB, 시간: 0.00 ms코딩테스트 연습 > GROUP BYEmpty2025년 02월 10일 01:19:49출처: 프로그래머스 코딩 테스트 연습, https&#x3A;//school.programmers.co.kr/learn/challeng"
  },
  
  {
    "title": "BOJ_2487_섞기 수열 (Java)",
    "url": "/posts/BOJ2487%EC%84%9E%EA%B8%B0-%EC%88%98%EC%97%B4-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-02-09 21:39:13 +0800",
    "content": "문제 링크 메모리: 17116 KB, 시간: 160 ms유클리드 호제법, 수학, 정수론, 순열 사이클 분할2025년 2월 9일 13:38:15각 위치마다 사이클이 있는데 이 사이클의 최소공배수를 구하면 된다. import java.io.;import java.util."
  },
  
  {
    "title": "BOJ_2549_루빅의 사각형 (Java)",
    "url": "/posts/BOJ2549%EB%A3%A8%EB%B9%85%EC%9D%98-%EC%82%AC%EA%B0%81%ED%98%95-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-02-09 01:54:27 +0800",
    "content": "문제 풀이  한 줄 이동에 3가지 방법이 있다. 그러므로 8개의 선이 있으므로 24개의 방법이라고 할 수 있다. 완전탐색이면 최대 7번이라고 할 때 24^7 가지의 상태가 발생할 수 있고 약 40억개이므로 시간초과가 발생한다.  이에 2가지 방법이 정해라고 생각된다. "
  },
  
  {
    "title": "BOJ_1637_날카로운 눈 (Java)",
    "url": "/posts/BOJ1637%EB%82%A0%EC%B9%B4%EB%A1%9C%EC%9A%B4-%EB%88%88-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-02-08 21:54:52 +0800",
    "content": "문제 링크 메모리: 14916 KB, 시간: 136 ms이분 탐색, 매개 변수 탐색2025년 2월 8일 22:44:20제한이 매우 크지만 모두 탐색해야하기 때문에 파라매트릭 서치를 사용했다. mid를 이분탐색으로 갱신하면서 mid까지의 개수를 기준으로 짝수개면 mid "
  },
  
  {
    "title": "BOJ_2234_성곽 (Java)",
    "url": "/posts/BOJ2234%EC%84%B1%EA%B3%BD-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-02-07 21:57:48 +0800",
    "content": "문제 링크 메모리: 168500 KB, 시간: 424 ms너비 우선 탐색, 비트마스킹, 그래프 이론, 그래프 탐색2025년 2월 7일 22:47:03bfs 와 비트마스킹으로 풀었다./\\*\\*Author: nowalex322, Kim HyeonJae\\*/import ja"
  },
  
  {
    "title": "BOJ_17435_합성함수와 쿼리 (Java)",
    "url": "/posts/BOJ17435%ED%95%A9%EC%84%B1%ED%95%A8%EC%88%98%EC%99%80-%EC%BF%BC%EB%A6%AC-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-02-05 04:11:09 +0800",
    "content": "문제 링크 메모리: 103124 KB, 시간: 900 ms자료 구조, 희소 배열2025년 2월 5일 05:07:06희소 배열을 공부했다. 2의 거듭제곱 단위로 건너뛰는 결과를 미리 저장해두는 배열입니다dpk = x에서 시작해서 2^k번 이동했을 때의 도착점예시로 이해하"
  },
  
  {
    "title": "BOJ_18513_샘터 (Java)",
    "url": "/posts/BOJ18513%EC%83%98%ED%84%B0-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-02-04 22:40:40 +0800",
    "content": "문제 링크 메모리: 56076 KB, 시간: 560 ms너비 우선 탐색, 자료 구조, 그래프 이론, 그래프 탐색2025년 2월 4일 23:16:33간단한 bfs 문제다. 처음에 한참 삽질한 방법은 아직도 왜 틀린지 모르겠다. 그림과 같은 방법으로 풀었었는데 이 방법으로"
  },
  
  {
    "title": "BOJ_22862_가장 긴 짝수 연속한 부분 수열 (large) (Java)",
    "url": "/posts/BOJ22862%EA%B0%80%EC%9E%A5-%EA%B8%B4-%EC%A7%9D%EC%88%98-%EC%97%B0%EC%86%8D%ED%95%9C-%EB%B6%80%EB%B6%84-%EC%88%98%EC%97%B4-large-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-02-03 04:20:50 +0800",
    "content": "문제 링크 메모리: 92168 KB, 시간: 448 ms두 포인터2025년 2월 3일 05:02:12길이가 $N$인 수열 $S$가 있다. 수열 $S$는 1 이상인 정수로 이루어져 있다.수열 $S$에서 원하는 위치에 있는 수를 골라 최대 $K$번 삭제를 할 수 있다.예를"
  },
  
  {
    "title": "BOJ_15576_큰 수 곱셉 (2), BOJ_22289_큰 수 곱셈 (3) (C++, Java)",
    "url": "/posts/BOJ15576%ED%81%B0-%EC%88%98-%EA%B3%B1%EC%85%89-2-BOJ22289%ED%81%B0-%EC%88%98-%EA%B3%B1%EC%85%88-3-C-Java/",
    "categories": "알고리즘",
    "tags": "C++, Java, 백준, 알고리즘",
    "date": "2025-02-02 20:04:56 +0800",
    "content": "문제 링크 메모리: 48496 KB, 시간: 332 ms고속 푸리에 변환, 수학2025년 2월 2일 20:08:33FFT 공부중입니다. 부족한 부분이나 틀린 부분이 있다면 지적해주세요.A. 기본 접근 방식일반적인 O(n²) 곱셈 알고리즘으로는 300,000자리의 곱셈을"
  },
  
  {
    "title": "BOJ_1067_이동 (Java)",
    "url": "/posts/BOJ1067%EC%9D%B4%EB%8F%99-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-02-02 08:27:10 +0800",
    "content": "문제 링크 메모리: 28436 KB, 시간: 444 ms고속 푸리에 변환, 수학2025년 2월 2일 09:03:38예전에 풀어보고싶었던 주제인 고속 푸리에 변환을 공부해보았다. PS에서 FFT를 convolution을 O(nlogn)에 계산해야 할 상황에 필요한 지식이"
  },
  
  {
    "title": "BOJ_13710_XOR 합 3 (Java)",
    "url": "/posts/BOJ13710XOR-%ED%95%A9-3-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-02-02 03:04:32 +0800",
    "content": "문제 링크 메모리: 26200 KB, 시간: 324 ms비트마스킹, 누적 합2025년 2월 2일 03:55:42같은 수를 두 번 XOR하면 0XOR은 순서가 바뀌어도 결과 동일구간 L,R의 XOR 합 = refixSumXOR\\[R] ^ prefixSumXOR\\[L-1]"
  },
  
  {
    "title": "BOJ_1261_알고스팟 (Java)",
    "url": "/posts/BOJ1261%EC%95%8C%EA%B3%A0%EC%8A%A4%ED%8C%9F-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-02-01 20:38:45 +0800",
    "content": "문제 링크 메모리: 14776 KB, 시간: 124 ms0-1 너비 우선 탐색, 데이크스트라, 그래프 이론, 그래프 탐색, 최단 경로2025년 2월 1일 21:27:46다익스트라 문제다. breakCnt를 우선순위로 정렬기준을 삼아 PriorityQueue를 사용했다."
  },
  
  {
    "title": "BOJ_3190_뱀 (Java)",
    "url": "/posts/BOJ3190%EB%B1%80-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-02-01 02:37:57 +0800",
    "content": "문제 링크 메모리: 14636 KB, 시간: 112 ms자료 구조, 덱, 구현, 큐, 시뮬레이션2025년 2월 1일 03:28:43공백은 0, 벽은 -1, 사과는 9, 상하좌우 이동한 뱀의 칸마다 1, 2, 3, 4 를 부여했다. 이로써 2차원 배열 하나로 모든걸 끝낼"
  },
  
  {
    "title": "BOJ_14889_스타트와 링크 (Java)",
    "url": "/posts/BOJ14889%EC%8A%A4%ED%83%80%ED%8A%B8%EC%99%80-%EB%A7%81%ED%81%AC-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-02-01 01:12:28 +0800",
    "content": "문제 링크 메모리: 22400 KB, 시간: 408 ms백트래킹, 브루트포스 알고리즘2024년 4월 27일 18:22:12두 팀으로 반반씩 조합으로 나눠 각각 점수를 매긴 뒤 차이를 min갱신해줬다. dfs로 조합만들기./\\*\\*Author: nowalex322, Ki"
  },
  
  {
    "title": "BOJ_2295_세 수의 합 (Java)",
    "url": "/posts/BOJ2295%EC%84%B8-%EC%88%98%EC%9D%98-%ED%95%A9-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-01-31 23:01:04 +0800",
    "content": "문제 링크 메모리: 16932 KB, 시간: 196 ms이분 탐색, 자료 구조, 해시를 사용한 집합과 맵, 중간에서 만나기2025년 1월 31일 23:53:19첫 풀이는 세 수의 합을 O(N^3)으로 구현하지 않고 a+b+c=k일 때 a+b를 O(N^2)로 구해놓고 k"
  },
  
  {
    "title": "BOJ_2212_센서 (Java, C++)",
    "url": "/posts/BOJ2212%EC%84%BC%EC%84%9C-Java-C/",
    "categories": "알고리즘",
    "tags": "C++, Java, 백준, 알고리즘",
    "date": "2025-01-31 14:41:38 +0800",
    "content": "문제 링크 메모리: 16220 KB, 시간: 168 ms그리디 알고리즘, 정렬2025년 1월 31일 15:34:27"
  },
  
  {
    "title": "BOJ_6087_레이저 통신 (Java)",
    "url": "/posts/BOJ6087%EB%A0%88%EC%9D%B4%EC%A0%80-%ED%86%B5%EC%8B%A0-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-01-31 13:58:34 +0800",
    "content": "문제 링크 메모리: 18580 KB, 시간: 168 ms너비 우선 탐색, 데이크스트라, 그래프 이론, 그래프 탐색, 최단 경로2025년 1월 31일 14:49:56벽 부수고 이동하기와 비슷하다고 생각했으며, 거울에 대한 우선순위가 있기 때문에 다익스트라 문제라고 생각했"
  },
  
  {
    "title": "PGMS_베스트앨범 (Java)",
    "url": "/posts/PGMS%EB%B2%A0%EC%8A%A4%ED%8A%B8%EC%95%A8%EB%B2%94-Java/",
    "categories": "알고리즘",
    "tags": "Java, 알고리즘, 프로그래머스",
    "date": "2025-01-31 02:15:20 +0800",
    "content": "문제 링크 메모리: 78.8 MB, 시간: 1.37 ms코딩테스트 연습 > 해시정확성: 100.0합계: 100.0 / 100.02025년 01월 31일 03:01:14출처: 프로그래머스 코딩 테스트 연습, https&#x3A;//school.programmers.co."
  },
  
  {
    "title": "PGMS_기지국 설치 (Java)",
    "url": "/posts/PGMS%EA%B8%B0%EC%A7%80%EA%B5%AD-%EC%84%A4%EC%B9%98-Java/",
    "categories": "알고리즘",
    "tags": "Java, 알고리즘, 프로그래머스",
    "date": "2025-01-30 23:15:23 +0800",
    "content": "문제 링크 메모리: 54.5 MB, 시간: 1.05 ms코딩테스트 연습 > Summer／Winter Coding（～2018）정확성: 70.5효율성: 29.5합계: 100.0 / 100.02025년 01월 31일 00:10:27출처: 프로그래머스 코딩 테스트 연습, ht"
  },
  
  {
    "title": "BOJ_1135_뉴스 전하기 (Java, C++)",
    "url": "/posts/BOJ1135%EB%89%B4%EC%8A%A4-%EC%A0%84%ED%95%98%EA%B8%B0-Java/",
    "categories": "알고리즘",
    "tags": "C++, Java, 백준, 알고리즘",
    "date": "2025-01-30 21:02:02 +0800",
    "content": "문제 링크 메모리: 14372 KB, 시간: 108 ms다이나믹 프로그래밍, 트리에서의 다이나믹 프로그래밍, 그리디 알고리즘, 정렬, 트리2025년 1월 30일 21:35:53일단 정답을 찾기 위해 maxDepth를 사용해야 하는줄 알았다. 하지만 1번부모에 30명의 "
  },
  
  {
    "title": "PGMS_조건에 맞는 사용자 정보 조회하기 (SQL)",
    "url": "/posts/PGMS%EC%A1%B0%EA%B1%B4%EC%97%90-%EB%A7%9E%EB%8A%94-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%A0%95%EB%B3%B4-%EC%A1%B0%ED%9A%8C%ED%95%98%EA%B8%B0-SQL/",
    "categories": "SQL",
    "tags": "sql, 프로그래머스",
    "date": "2025-01-30 18:59:15 +0800",
    "content": "문제 링크 메모리: 0.0 MB, 시간: 0.00 ms코딩테스트 연습 > String， DateEmpty2025년 01월 30일 19:57:13출처: 프로그래머스 코딩 테스트 연습, https&#x3A;//school.programmers.co.kr/learn/chal"
  },
  
  {
    "title": "다중 서버 환경에서 세션 기반 인증 방식의 위험성",
    "url": "/posts/%EB%8B%A4%EC%A4%91-%EC%84%9C%EB%B2%84-%ED%99%98%EA%B2%BD%EC%97%90%EC%84%9C-%EC%84%B8%EC%85%98-%EA%B8%B0%EB%B0%98-%EC%9D%B8%EC%A6%9D-%EB%B0%A9%EC%8B%9D%EC%9D%98-%EC%9C%84%ED%97%98%EC%84%B1/",
    "categories": "공부",
    "tags": "Java, Spring, 백엔드",
    "date": "2025-01-30 01:16:01 +0800",
    "content": "다중 서버 환경에서 세션 기반 인증 방식은 세션 불일치 문제를 초래할 수 있다. 만약 서버 A, B를 관리하고 있을 때, 로드 밸런서는 사용자의 요청을 상황에 맞게 A, B 중 한 곳으로 전달한다. 유효한 로그인 요청이 A 서버로 처음 도착하면 사용자에 대한 세션 정보"
  },
  
  {
    "title": "SOLID 원칙",
    "url": "/posts/SOLID-%EC%9B%90%EC%B9%99/",
    "categories": "공부",
    "tags": "Java, Spring, 백엔드",
    "date": "2025-01-30 00:38:34 +0800",
    "content": "SOLID 원칙은 객체지향 설계 5원칙이라고도 불리며, 각 원칙의 앞 글자를 따서 만들어졌다. 객체지향 설계의 핵심 중 하나인 의존성 관리를 잘 하기 위해 SOLID 원칙을 준수해야한다. 단일 책임 원칙 (Single Responsibility Principle) 은 "
  },
  
  {
    "title": "BOJ_7570_줄 세우기 (Java, C++)",
    "url": "/posts/BOJ7570%EC%A4%84-%EC%84%B8%EC%9A%B0%EA%B8%B0-Java-C/",
    "categories": "알고리즘",
    "tags": "C++, Java, 백준, 알고리즘",
    "date": "2025-01-29 02:46:31 +0800",
    "content": "문제 링크 메모리: 5928 KB, 시간: 104 ms다이나믹 프로그래밍, 그리디 알고리즘2025년 1월 29일 03:37:46아이디어는 LIS알고리즘이다. LIS알고리즘을 사용하면서 1씩 증가하는 최장 수열을 찾으면 나머지 숫자을 앞뒤에 최적으로 붙일 수 있기 때문에"
  },
  
  {
    "title": "PGMS_PCCP 3번_충돌위험 찾기 (Java)",
    "url": "/posts/PGMSPCCP-3%EB%B2%88%EC%B6%A9%EB%8F%8C%EC%9C%84%ED%97%98-%EC%B0%BE%EA%B8%B0-Java/",
    "categories": "알고리즘",
    "tags": "Java, 알고리즘, 프로그래머스",
    "date": "2025-01-28 05:49:53 +0800",
    "content": "문제 링크 메모리: 183 MB, 시간: 195.24 ms코딩테스트 연습 > PCCP 기출문제정확성: 100.0합계: 100.0 / 100.02025년 01월 28일 06:38:38출처: 프로그래머스 코딩 테스트 연습, https&#x3A;//school.program"
  },
  
  {
    "title": "BOJ_15684_사다리 조작 (Java, C++)",
    "url": "/posts/BOJ15684%EC%82%AC%EB%8B%A4%EB%A6%AC-%EC%A1%B0%EC%9E%91-Java-C/",
    "categories": "알고리즘",
    "tags": "C++, Java, 백준, 알고리즘",
    "date": "2025-01-28 00:19:45 +0800",
    "content": "문제 링크 메모리: 14652 KB, 시간: 112 ms백트래킹, 브루트포스 알고리즘, 구현2025년 1월 28일 00:52:40import java.io.;import java.util.;public class Main {    static BufferedReader"
  },
  
  {
    "title": "Computer Networking: a Top Down Approach - (7)",
    "url": "/posts/Computer-Networking-a-Top-Down-Approach-7/",
    "categories": "네트워크",
    "tags": "네트워크",
    "date": "2025-01-27 03:08:27 +0800",
    "content": "Point-to-point한 프로세스와 한 프로세스(한 소켓 쌍) 간의 연결만 처리 (One Sender, One Receiver)Reliable, in-order byte stream : 신뢰 가능하게 유실되지 않으면서, 순서대로 처리pipelined : 한방에 덩어"
  },
  
  {
    "title": "BOJ_23351_물주기 (Java, C++)",
    "url": "/posts/BOJ23351%EB%AC%BC%EC%A3%BC%EA%B8%B0-Java-C/",
    "categories": "알고리즘",
    "tags": "C++, Java, 백준, 알고리즘",
    "date": "2025-01-26 21:58:51 +0800",
    "content": "문제 링크 메모리: 14312 KB, 시간: 128 ms그리디 알고리즘, 구현, 시뮬레이션2025년 1월 26일 08:35:59랑이 집사는 고양이들이 좋아한다는 캣닢을 직접 재배하려고 한다.일직선으로 놓여진 $N$개의 화분에 캣닢이 하나씩 심어져 있다.각 화분은 초기에"
  },
  
  {
    "title": "BOJ_15912_우주선 만들기 (Java, C++)",
    "url": "/posts/BOJ15912%EC%9A%B0%EC%A3%BC%EC%84%A0-%EB%A7%8C%EB%93%A4%EA%B8%B0-Java-C/",
    "categories": "알고리즘",
    "tags": "C++, Java, 백준, 알고리즘",
    "date": "2025-01-25 22:03:49 +0800",
    "content": "문제 링크 메모리: 2156 KB, 시간: 0 ms다이나믹 프로그래밍2025년 1월 25일 22:59:23&lt;스타로드와 토끼는 토르를 구출하기 위해서 우주선을 만들고 있다.우주선을 만들기 위해서는 총 N개의 부품을 상점에서 모두 구입해야 한다. 모든 부품은 무게 W"
  },
  
  {
    "title": "Computer Networking: a Top Down Approach - (6)",
    "url": "/posts/Computer-Networking-a-Top-Down-Approach-6/",
    "categories": "네트워크",
    "tags": "네트워크",
    "date": "2025-01-25 04:15:30 +0800",
    "content": "한번에 여러개를 보낼것이다.Window Size 만큼 패킷을 덩어리로 보낸다. 이 사이즈만큼은 Feedback 받지 않고 그냥 보낼 수 있다.ACKs : cummulative한 방식 (쌓는다는 의미)ex : ACKs 11 : 0~11까지 잘 받았다는 의미Sender 부"
  },
  
  {
    "title": "DB Replication이란?",
    "url": "/posts/DB-Replication%EC%9D%B4%EB%9E%80/",
    "categories": "공부",
    "tags": "Java, Spring, 백엔드",
    "date": "2025-01-24 23:50:09 +0800",
    "content": "DB Replication은 데이터베이스의 고가용성과 데이터 안정성을 보장하기 위해 활용되는 핵심 기술이다. 특히, 대규모 애플리케이션 환경에서는 데이터의 지속적인 가용성과 신뢰성이 매우 중요하기 때문에, 원본(Source) 서버와 복제(Replica) 서버간의 데이터"
  },
  
  {
    "title": "BOJ_17302_흰색으로 만들기 (Java, C++)",
    "url": "/posts/BOJ17302%ED%9D%B0%EC%83%89%EC%9C%BC%EB%A1%9C-%EB%A7%8C%EB%93%A4%EA%B8%B0-Java/",
    "categories": "알고리즘",
    "tags": "C++, Java, 백준, 알고리즘",
    "date": "2025-01-24 20:27:24 +0800",
    "content": "문제 링크 메모리: 44860 KB, 시간: 668 ms애드 혹2025년 1월 24일 21:23:54/\\*\\*Author: nowalex322, Kim HyeonJae\\*/import java.io.;import java.util.;public class Main { "
  },
  
  {
    "title": "Computer Networking: a Top Down Approach - (5)",
    "url": "/posts/Computer-Networking-a-Top-Down-Approach-5/",
    "categories": "네트워크",
    "tags": "네트워크",
    "date": "2025-01-24 02:58:52 +0800",
    "content": "전송 계층은 Reliable 하다고 말할 수 있다. 이 뜻은 application 계층으로부터 내려온 데이터들이 application 계층까지 데이터 유실 없이 도달할 수 있다는 뜻. 네트워크 레이어를 보면, Transport layer를 통해 Reliable한 데이터"
  },
  
  {
    "title": "BOJ_13504_XOR 합 (Java)",
    "url": "/posts/BOJ13504XOR-%ED%95%A9-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-01-23 14:59:47 +0800",
    "content": "문제 링크 메모리: 366500 KB, 시간: 2060 ms자료 구조, 누적 합, 트리, 트라이2025년 1월 23일 15:54:10/\\*\\*Author: nowalex322, Kim HyeonJae\\*/import java.io.;import java.util.;pu"
  },
  
  {
    "title": "BOJ_1868_보물찾기 (Java)",
    "url": "/posts/BOJ1868%EB%B3%B4%EB%AC%BC%EC%B0%BE%EA%B8%B0-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-01-23 03:10:20 +0800",
    "content": "문제 링크 메모리: 34856 KB, 시간: 300 ms다이나믹 프로그래밍, 트리에서의 다이나믹 프로그래밍, 그래프 이론, 그래프 탐색, 그리디 알고리즘, 트리2025년 1월 23일 01:37:28비트마스크를 사용하여 각 서브트리의 \"깊이 정보\"를 관리DFS를 통해 트"
  },
  
  {
    "title": "BOJ_1484_다이어트 (Java)",
    "url": "/posts/BOJ1484%EB%8B%A4%EC%9D%B4%EC%96%B4%ED%8A%B8-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-01-22 19:09:25 +0800",
    "content": "문제 링크 메모리: 14428 KB, 시간: 104 ms수학, 두 포인터2025년 1월 22일 19:22:13/\\*\\*Author: nowalex322, Kim HyeonJae\\*/import java.io.;import java.util.;public class Ma"
  },
  
  {
    "title": "Record를 DTO로 사용하는 이유",
    "url": "/posts/Record%EB%A5%BC-DTO%EB%A1%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0/",
    "categories": "공부",
    "tags": "Java, Spring, 백엔드",
    "date": "2025-01-21 23:50:04 +0800",
    "content": "Record는 Java 16에서 정식 출시된 특별한 유형의 클래스로 불변성(Immutable)을 기본으로 한다.기존의 클래스와 달리 모든 필드가 final 키워드로 선언되며, 객체 생성 후 변경할 수 없다. 또한 필드 선언만으로 자동으로 생성자, getter , equ"
  },
  
  {
    "title": "BOJ_18427_함께 블록 쌓기 (Java)",
    "url": "/posts/BOJ18427%ED%95%A8%EA%BB%98-%EB%B8%94%EB%A1%9D-%EC%8C%93%EA%B8%B0-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-01-21 19:23:27 +0800",
    "content": "문제 링크 메모리: 17560 KB, 시간: 160 ms다이나믹 프로그래밍, 배낭 문제2025년 1월 21일 20:14:25dp로 메모이제이션하며 모든 경우의수에 대한 개수를 세주었다./\\*\\*Author: nowalex322, Kim HyeonJae\\*/import "
  },
  
  {
    "title": "BOJ_5557_1학년 (Java, C++)",
    "url": "/posts/BOJ55571%ED%95%99%EB%85%84-Java-C/",
    "categories": "알고리즘",
    "tags": "C++, Java, 백준, 알고리즘",
    "date": "2025-01-21 18:33:08 +0800",
    "content": "문제 링크 메모리: 2020 KB, 시간: 0 ms다이나믹 프로그래밍2025년 1월 21일 19:29:21/\\*\\*Author: nowalex322, Kim HyeonJae\\*/import java.io.;import java.util.;public class Main"
  },
  
  {
    "title": "Computer Networking: a Top Down Approach - (4)",
    "url": "/posts/Computer-Networking-a-Top-Down-Approach-4/",
    "categories": "네트워크",
    "tags": "네트워크",
    "date": "2025-01-21 15:11:58 +0800",
    "content": "Multiplexing : 보내는 측의 Application Layer으로부터 여러 소켓에서 오는 메시지들이 아래로 Transport Layer으로 내려올 것이다. 이 메시지들이 어디서 오든지 간에 Transport Layer은 메시지들을 segment(Header +"
  },
  
  {
    "title": "Computer Networking: a Top Down Approach - (3)",
    "url": "/posts/Chapter-1/",
    "categories": "네트워크",
    "tags": "네트워크",
    "date": "2025-01-21 02:46:04 +0800",
    "content": "어플리케이션과 네트워크 사이의 통신을 위한 인터페이스2가지 타입의 소켓 : 소켓 타입이 소통 방식을 결정 (TCP 소켓 / UDP 소켓)생성후 소켓을 통해 데이터를 전달하고 전달받을 수 있음1\\. socket() : 웹서버가 소켓을 생성한다.2\\. bind() : 생성"
  },
  
  {
    "title": "PGMS_2022 KAKAO_주차 요금 계산 (Java)",
    "url": "/posts/PGMS2022-KAKAO%EC%A3%BC%EC%B0%A8-%EC%9A%94%EA%B8%88-%EA%B3%84%EC%82%B0-Java/",
    "categories": "알고리즘",
    "tags": "Java, 알고리즘, 프로그래머스",
    "date": "2025-01-20 23:07:09 +0800",
    "content": "문제 링크 메모리: 76.7 MB, 시간: 8.39 ms코딩테스트 연습 > 2022 KAKAO BLIND RECRUITMENT정확성: 100.0합계: 100.0 / 100.02025년 01월 21일 00:05:21출처: 프로그래머스 코딩 테스트 연습, https&#x3"
  },
  
  {
    "title": "BOJ_1781_컵라면 (Java)",
    "url": "/posts/BOJ1781%EC%BB%B5%EB%9D%BC%EB%A9%B4-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-01-20 20:40:31 +0800",
    "content": "문제 링크 메모리: 71064 KB, 시간: 708 ms자료 구조, 그리디 알고리즘, 우선순위 큐, 정렬2025년 1월 20일 21:09:35/\\*\\*Author: nowalex322, Kim HyeonJae\\*/import java.io.;import java.uti"
  },
  
  {
    "title": "BOJ_1939_중량 제한 (Java)",
    "url": "/posts/BOJ1939%EC%A4%91%EB%9F%89-%EC%A0%9C%ED%95%9C-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-01-19 19:35:18 +0800",
    "content": "문제 링크 메모리: 50688 KB, 시간: 516 ms너비 우선 탐색, 이분 탐색, 자료 구조, 분리 집합, 그래프 이론, 그래프 탐색, 최단 경로2025년 1월 19일 20:27:43전에 풀어본 분리집합문제와 비슷했다. 같은 집합으로 형성되는지를 체크했고 이때 조건"
  },
  
  {
    "title": "PGMS_부서별 평균 연봉 조회하기 (SQL)",
    "url": "/posts/PGMS%EB%B6%80%EC%84%9C%EB%B3%84-%ED%8F%89%EA%B7%A0-%EC%97%B0%EB%B4%89-%EC%A1%B0%ED%9A%8C%ED%95%98%EA%B8%B0-SQL/",
    "categories": "SQL",
    "tags": "sql, 프로그래머스",
    "date": "2025-01-19 02:48:10 +0800",
    "content": "문제 링크 메모리: undefined, 시간: 코딩테스트 연습 > GROUP BY합계: 100.0 / 100.02025년 01월 19일 03:45:05출처: 프로그래머스 코딩 테스트 연습, https&#x3A;//school.programmers.co.kr/learn/"
  },
  
  {
    "title": "HTTPS 란?",
    "url": "/posts/HTTPS-%EB%9E%80/",
    "categories": "공부",
    "tags": "Java, Spring, 백엔드",
    "date": "2025-01-19 02:33:08 +0800",
    "content": "HTTP는 Hypertext Transfer Protocol의 약자로 서버와 클라이언트간 통신을 위한 통신 규약이다. 하지만, HTTP는 암호화되지 않는 평문 데이터를 전송하기 때문에 제 3자가 정보를 조회할 수 있다는 위험이 있다. 이를 해결하기 위해 HTTPS가 등"
  },
  
  {
    "title": "PGMS_선입 선출 스케줄링 (Java)",
    "url": "/posts/PGMS%EC%84%A0%EC%9E%85-%EC%84%A0%EC%B6%9C-%EC%8A%A4%EC%BC%80%EC%A4%84%EB%A7%81-Java/",
    "categories": "알고리즘",
    "tags": "Java, 알고리즘, 프로그래머스",
    "date": "2025-01-18 19:39:46 +0800",
    "content": "문제 링크 메모리: 54.3 MB, 시간: 8.18 ms코딩테스트 연습 > 연습문제정확성: 70.0효율성: 30.0합계: 100.0 / 100.02025년 01월 18일 20:36:40출처: 프로그래머스 코딩 테스트 연습, https&#x3A;//school.progr"
  },
  
  {
    "title": "BOJ_20955_민서의 응급 수술 (Java)",
    "url": "/posts/BOJ20955%EB%AF%BC%EC%84%9C%EC%9D%98-%EC%9D%91%EA%B8%89-%EC%88%98%EC%88%A0/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-01-18 18:02:38 +0800",
    "content": "문제 링크 메모리: 42356 KB, 시간: 336 ms자료 구조, 분리 집합, 그래프 이론, 트리2025년 1월 18일 18:42:20그림처럼 사이클은 끊고, 연결되지 않은 그룹은 이어주는 연산을 세면 되는데 딱 필요한 알고리즘이 union-find라고 생각했고, 사"
  },
  
  {
    "title": "Computer Networking: a Top Down Approach - (2)",
    "url": "/posts/Computer-Networking-a-Top-Down-Approach-2/",
    "categories": "네트워크",
    "tags": "네트워크",
    "date": "2025-01-18 01:59:56 +0800",
    "content": "자동차10대(패킷)가 나가기 위해 12s X 10 = 120s 즉 2분만큼 걸림.toll booth를 쭉 따라 가는데 100km / 속력(100km/h) = 1hour 즉 1시간 걸림.패킷 스위칭에 걸리는 전체 시간 : 1시간 2분.앞에 bit가 link에 도달하는 시"
  },
  
  {
    "title": "웹 서버 vs 웹 어플리케이션 서버(WAS)",
    "url": "/posts/%EC%9B%B9-%EC%84%9C%EB%B2%84-vs-%EC%9B%B9-%EC%96%B4%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EC%84%9C%EB%B2%84WAS/",
    "categories": "공부",
    "tags": "Java, Spring, 백엔드",
    "date": "2025-01-17 23:09:32 +0800",
    "content": "웹 서버 는 정적 컨텐츠(HTML, CSS, JS, Image, ... etc) 를 제공하는 역할을 수행한다. 동적 컨텐츠를 요청하면 그 요청을 WAS로 전달할 수도 있다. 대표적인 웹 서버로 Apache, Nginx 등이 있다. 웹 어플리케이션 서버 (Web Appl"
  },
  
  {
    "title": "Stack 자료구조",
    "url": "/posts/Stack-%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/",
    "categories": "공부",
    "tags": "Java, Spring, 백엔드",
    "date": "2025-01-17 22:55:58 +0800",
    "content": "스택(Stack) 은 후입선출이라는 개념을 가진 선형 자료구조다. 스택 자료구조에서 삭제(pop)는 가장 최상단(top)에서만 이루어진다. 비어있는 스택에서 값을 추출하려고 시도하는 경우를 스택 언더플로우라고 하며, 스택이 넘치는 경우를 스택 오버플로우라고 한다. 대표"
  },
  
  {
    "title": "BOJ_1417_국회의원 선거 (Java, C++)",
    "url": "/posts/BOJ1417%EA%B5%AD%ED%9A%8C%EC%9D%98%EC%9B%90-%EC%84%A0%EA%B1%B0-Java-C/",
    "categories": "알고리즘",
    "tags": "C++, Java, 백준, 알고리즘",
    "date": "2025-01-17 22:18:49 +0800",
    "content": "문제 링크 메모리: 2020 KB, 시간: 0 ms자료 구조, 그리디 알고리즘, 구현, 우선순위 큐, 시뮬레이션2025년 1월 17일 23:14:40Priority Queue 자료구조를 이용하면 쉽게 풀 수 있다. 다솜이가 다른사람의 최댓값보다 클 때까지 최대인사람을 "
  },
  
  {
    "title": "Computer Networking: a Top Down Approach - (1)",
    "url": "/posts/Computer-Networking-a-Top-Down-Approach-1/",
    "categories": "네트워크",
    "tags": "네트워크",
    "date": "2025-01-17 21:01:19 +0800",
    "content": "우리들이 위치하는 곳라우터 : 데이터를 목적지까지 전달구성요소들을 이어주는 링크들컴퓨터, 노트북, 스마트 폰 등 사용자가 상호작용 하는 장치네트워크 엣지의 목적은 시스템 간 데이터를 주고 받는 것인데, 이 때 데이터를 순서대로, 전송을 보장하는 목적인 TCP를 사용한다"
  },
  
  {
    "title": "서버 사이드 렌더링 vs 클라이언트 사이드 렌더링 (SSR과 CSR)",
    "url": "/posts/%EC%84%9C%EB%B2%84-%EC%82%AC%EC%9D%B4%EB%93%9C-%EB%A0%8C%EB%8D%94%EB%A7%81-vs-%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8-%EC%82%AC%EC%9D%B4%EB%93%9C-%EB%A0%8C%EB%8D%94%EB%A7%81-SSR%EA%B3%BC-CSR/",
    "categories": "공부",
    "tags": "Java, Spring, 백엔드",
    "date": "2025-01-17 03:12:06 +0800",
    "content": "서버 사이드 렌더링(SSR) 은 서버 측에서 렌더링하는 방식이다. 클라이언트가 서버에 컨텐츠를 요청하면, 서버는 페이지에 필요한 데이터를 즉시 얻어와 모두 삽입하고, CSS까지 모두 적용해 렌더링 준비를 마친 HTML과 JS 코드를 응답한다. 브라우저에서는 JS 코드를"
  },
  
  {
    "title": "BOJ_17411_가장 긴 증가하는 부분 수열 6 (Java)",
    "url": "/posts/BOJ17411%EA%B0%80%EC%9E%A5-%EA%B8%B4-%EC%A6%9D%EA%B0%80%ED%95%98%EB%8A%94-%EB%B6%80%EB%B6%84-%EC%88%98%EC%97%B4-6-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-01-17 03:00:08 +0800",
    "content": "문제 링크 메모리: 495940 KB, 시간: 3084 ms이분 탐색, 자료 구조, 가장 긴 증가하는 부분 수열: O(n log n), 세그먼트 트리2025년 1월 17일 03:38:31일반적인 LIS는 이분 탐색을 사용하여 O(N log N)에 해결할 수 있다. 하지"
  },
  
  {
    "title": "타임 아웃 (Connection Timeout, Socket Timeout, Read Timeout)",
    "url": "/posts/%ED%83%80%EC%9E%84-%EC%95%84%EC%9B%83-Connection-Timeout-Socket-Timeout-Read-Timeout/",
    "categories": "공부",
    "tags": "Java, Spring, 백엔드",
    "date": "2025-01-16 02:57:17 +0800",
    "content": "Connection Timeout은 클라이언트가 서버에 연결을 시도할 때, 일정 시간 내에 연결이 이루어지지 않으면 발생하는 타임아웃이다.TCP 소켓 통신에서 클라이언트와 서버가 연결될 때, 정확한 전송을 보장하기 위해 사전에 세션을 수립하는데, 이 과정을 3-way-"
  },
  
  {
    "title": "Reverse Proxy vs. Forward Proxy",
    "url": "/posts/Reverse-Proxy-vs.-Forward-Proxy/",
    "categories": "공부",
    "tags": "Java, Spring, 백엔드",
    "date": "2025-01-16 02:50:44 +0800",
    "content": "포워드 프록시는 주로 클라이언트 측에 위치하여, 사용자가 인터넷에 접근할 때 중개자 역할을 한다.예를 들어, 회사 내부 네트워크에서 근무하는 직원이 외부 웹사이트에 접속하려고 할 때, 포워드 프록시 서버를 통해 요청이 전달된다. 이 과정에서 사용자의 실제 IP 주소는 "
  },
  
  {
    "title": "BOJ_14003_가장 긴 증가하는 부분 수열 5 (Java)",
    "url": "/posts/BOJ14003%EA%B0%80%EC%9E%A5-%EA%B8%B4-%EC%A6%9D%EA%B0%80%ED%95%98%EB%8A%94-%EB%B6%80%EB%B6%84-%EC%88%98%EC%97%B4-5-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-01-16 02:41:19 +0800",
    "content": "문제 링크 메모리: 155836 KB, 시간: 736 ms이분 탐색, 가장 긴 증가하는 부분 수열: O(n log n)2025년 1월 16일 02:53:33어떻게 배열을 구상해야할지 참고했고, 이분탐색은 남들 코드와는 다르게 항상 작성하던데로 left&lt;=right"
  },
  
  {
    "title": "BOJ_12738_가장 긴 증가하는 부분 수열 3 (Java)",
    "url": "/posts/BOJ12738%EA%B0%80%EC%9E%A5-%EA%B8%B4-%EC%A6%9D%EA%B0%80%ED%95%98%EB%8A%94-%EB%B6%80%EB%B6%84-%EC%88%98%EC%97%B4-3-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-01-16 02:39:14 +0800",
    "content": "문제 링크 메모리: 125548 KB, 시간: 528 ms이분 탐색, 가장 긴 증가하는 부분 수열: O(n log n)2025년 1월 16일 02:52:31와 이어지는 문제다.어떻게 배열을 구상해야할지 참고했고, 이분탐색은 남들 코드와는 다르게 항상 작성하던데로 lef"
  },
  
  {
    "title": "BOJ_12015_가장 긴 증가하는 부분 수열 2 (Java)",
    "url": "/posts/BOJ12015%EA%B0%80%EC%9E%A5-%EA%B8%B4-%EC%A6%9D%EA%B0%80%ED%95%98%EB%8A%94-%EB%B6%80%EB%B6%84-%EC%88%98%EC%97%B4-2-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-01-16 02:36:46 +0800",
    "content": "문제 링크 메모리: 100136 KB, 시간: 496 ms이분 탐색, 가장 긴 증가하는 부분 수열: O(n log n)2025년 1월 16일 02:50:23LIS알고리즘을 이분탐색을 적용해보았다. N이 클때 O(NlogN)으로 완료해야한다.어떻게 배열을 구상해야할지 참"
  },
  
  {
    "title": "BOJ_14002_가장 긴 증가하는 부분 수열 4  (Java, C++)",
    "url": "/posts/BOJ14002%EA%B0%80%EC%9E%A5-%EA%B8%B4-%EC%A6%9D%EA%B0%80%ED%95%98%EB%8A%94-%EB%B6%80%EB%B6%84-%EC%88%98%EC%97%B4-4-Java-C/",
    "categories": "알고리즘",
    "tags": "C++, Java, 백준, 알고리즘",
    "date": "2025-01-15 22:23:38 +0800",
    "content": "문제 링크 메모리: 2020 KB, 시간: 0 ms다이나믹 프로그래밍2025년 1월 15일 23:07:25유명한 유형인 LIS 유형이다. 이제 역추적까지 곁들인 문제다. 역추적 부분은 dp 배열에서 최대 길이찾고 -1길이 찾고 ... 순으로 진행했다.public cla"
  },
  
  {
    "title": "BOJ_2565_전깃줄 (Java, C++)",
    "url": "/posts/BOJ2565%EC%A0%84%EA%B9%83%EC%A4%84-Java-C/",
    "categories": "알고리즘",
    "tags": "C++, Java, 백준, 알고리즘",
    "date": "2025-01-15 14:36:50 +0800",
    "content": "문제 링크 메모리: 2024 KB, 시간: 0 ms다이나믹 프로그래밍2025년 1월 15일 15:32:23A 전봇대를 기준으로 오름차순 정렬하면, B 전봇대의 연결 위치들이 증가하는 순서로 있을 때 전깃줄이 교차하지 않는다.A 전봇대의 위치가 증가할 때 B 전봇대의 위"
  },
  
  {
    "title": "Operating System Concepts - (13)",
    "url": "/posts/Operating-System-Concepts-13/",
    "categories": "운영체제",
    "tags": "공룡책, 운영체제",
    "date": "2025-01-15 01:33:32 +0800",
    "content": "Logical block디스크의 외부에서 보는 디스크의 단위 정보 저장 공간들주소를 가진 1차원 배열처럼 취급정보를 전송하는 최소 단위SectorLogical block이 물리적인 디스크에 매핑된 위치Sector 0은 최외곽 실린더의 첫 트랙에 있는 첫 번째 섹터이다."
  },
  
  {
    "title": "BOJ_11973_Angry Cows (Silver) (Java)",
    "url": "/posts/BOJ11973Angry-Cows-Silver-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-01-14 22:13:35 +0800",
    "content": "문제 링크 메모리: 22528 KB, 시간: 248 ms이분 탐색, 매개 변수 탐색2025년 1월 14일 22:54:46Bessie the cow has designed what she thinks will be the next big hit video game: \"A"
  },
  
  {
    "title": "BOJ_2961_도영이가 만든 맛있는 음식 (Java)",
    "url": "/posts/BOJ2961%EB%8F%84%EC%98%81%EC%9D%B4%EA%B0%80-%EB%A7%8C%EB%93%A0-%EB%A7%9B%EC%9E%88%EB%8A%94-%EC%9D%8C%EC%8B%9D-Java/",
    "categories": "알고리즘",
    "tags": "",
    "date": "2025-01-14 20:28:02 +0800",
    "content": "문제 링크 메모리: 14256 KB, 시간: 104 ms백트래킹, 비트마스킹, 브루트포스 알고리즘2025년 1월 14일 21:13:23dfs로 모든 조합을 검사해보며 최소값을 갱신했다. 최소 하나의 재료는 골라야한다는 조건을 비트마스킹 방문조건처리인 visited값이 "
  },
  
  {
    "title": "Operating System Concepts - (12)",
    "url": "/posts/Operating-System-Concepts-12/",
    "categories": "운영체제",
    "tags": "공룡책, 운영체제",
    "date": "2025-01-14 16:51:31 +0800",
    "content": "Contiguous AllocationLinked AllocationIndexed Allocation하나의 파일이 디스크 상에서 연속해서 할당되는 방법단점External fragmentation 발생 가능파일 크기가 균일하지 않아 빈 조각들이 있을것이다. 새로운 파일을"
  },
  
  {
    "title": "CORS란?",
    "url": "/posts/CORS%EB%9E%80/",
    "categories": "공부",
    "tags": "Java, Spring, 백엔드",
    "date": "2025-01-14 01:28:05 +0800",
    "content": "CORS(Cross Origin Resource Sharing)는 출처가 다른 곳의 리소스를 요청할 때 접근 권한을 부여하는 메커니즘이다. 리소스를 주고받는 두 곳의 출처가 다르면 출처가 교차한다고 한다. 이때 출처는 URL뿐만 아니라 프로토콜과 포트까지 포함된다. 만"
  },
  
  {
    "title": "Operating System Concepts - (11)",
    "url": "/posts/Operating-System-Concepts-11/",
    "categories": "운영체제",
    "tags": "공룡책, 운영체제",
    "date": "2025-01-14 01:14:39 +0800",
    "content": "\" A named collection of related information \"일반적으로 비휘발성의 보조기억장치(e.g. hard disk) 에 저장운영체제는 다양한 저장장치를 file이라는 동일한 논리적 단위로 볼 수 있게 해줌.Operation : create, "
  },
  
  {
    "title": "BOJ_15591_MooTube (Silver) (Java)",
    "url": "/posts/BOJ15591MooTube-Silver-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-01-14 01:14:21 +0800",
    "content": "문제 링크 메모리: 449696 KB, 시간: 2008 ms너비 우선 탐색, 깊이 우선 탐색, 그래프 이론, 그래프 탐색2025년 1월 13일 21:57:20bfs로 두 정점 사이의 점수를 구한다.//\t\tfor(int i=1; i&lt;N; i++) {//\t\t\tfor("
  },
  
  {
    "title": "BOJ_2805_나무 자르기 (Java)",
    "url": "/posts/BOJ2805%EB%82%98%EB%AC%B4-%EC%9E%90%EB%A5%B4%EA%B8%B0-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-01-13 19:52:25 +0800",
    "content": "문제 링크 메모리: 120652 KB, 시간: 920 ms이분 탐색, 매개 변수 탐색2025년 1월 13일 20:47:21파라매트릭 서치로 res값을 찾아나갔다. mid값으로 특정 높이를 찾고 그게 최대한 높으면서 M을 만족하도록 찾았다.public class Main"
  },
  
  {
    "title": "갭락(Gap Lock)과 넥스트키 락(Next-Key Lock) 및 Phantom Read",
    "url": "/posts/%EA%B0%AD%EB%9D%BDGap-Lock%EA%B3%BC-%EB%84%A5%EC%8A%A4%ED%8A%B8%ED%82%A4-%EB%9D%BDNext-Key-Lock-%EB%B0%8F-Phantom-Read/",
    "categories": "공부",
    "tags": "Java, Spring, 백엔드",
    "date": "2025-01-13 02:20:38 +0800",
    "content": "Phantom Read는 트랜잭션이 동일한 조건의 쿼리를 반복 실행할 때, 나중에 실행된 쿼리에서 처음에는 존재하지 않았던 새로운 행이 나타나는 현상을 말합니다. 이는 주로 읽기 일관성(Read Consistency) 을 유지하는 과정에서 발생할 수 있는 문제로, 데이"
  },
  
  {
    "title": "Operating System Concepts - (10)",
    "url": "/posts/Operating-System-Concepts-10/",
    "categories": "운영체제",
    "tags": "공룡책, 운영체제",
    "date": "2025-01-13 02:09:05 +0800",
    "content": "Virtual Memory (2)  다양한 캐싱 환경 캐싱 기법   한정된 빠른 공간(캐시)에 요청된 데이터를 저장해 두었다가 또 똑같은 요청이 들어오면 느린 저장장치에 접근하지 않고 빠른 캐시로부터 직접 서비스하는 방식   가상 메모리 페이징 시스템에서는 한정된 빠른"
  },
  
  {
    "title": "BOJ_5430_AC (Java)",
    "url": "/posts/BOJ5430AC-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-01-12 17:11:43 +0800",
    "content": "문제 링크 메모리: 92696 KB, 시간: 696 ms덱, 파싱, 구현, 문자열, 자료 구조2025년 1월 12일 18:00:57아무것도 없는 경우에 RRRRR만 하면 \\[] 가 출력된다는 반례를 생각해내야한다!"
  },
  
  {
    "title": "PGMS_5월 식품들의 총매출 조회하기 (SQL)",
    "url": "/posts/PGMS5%EC%9B%94-%EC%8B%9D%ED%92%88%EB%93%A4%EC%9D%98-%EC%B4%9D%EB%A7%A4%EC%B6%9C-%EC%A1%B0%ED%9A%8C%ED%95%98%EA%B8%B0-SQL/",
    "categories": "SQL",
    "tags": "sql, 프로그래머스",
    "date": "2025-01-12 15:41:17 +0800",
    "content": "문제 링크 메모리: 0.0 MB, 시간: 0.00 ms코딩테스트 연습 > JOINEmpty2025년 01월 12일 16:38:46출처: 프로그래머스 코딩 테스트 연습, https&#x3A;//school.programmers.co.kr/learn/challengesTO"
  },
  
  {
    "title": "PGMS_KAKAO(2018)_[1차] 프렌즈4블록 (Java)",
    "url": "/posts/PGMSKAKAO20181%EC%B0%A8-%ED%94%84%EB%A0%8C%EC%A6%884%EB%B8%94%EB%A1%9D-Java/",
    "categories": "알고리즘",
    "tags": "Java, 알고리즘, 프로그래머스",
    "date": "2025-01-12 00:55:17 +0800",
    "content": "문제 링크 메모리: undefined, 시간: .코딩테스트 연습 > 2018 KAKAO BLIND RECRUITMENTEmpty2025년 01월 12일 01:33:30출처: 프로그래머스 코딩 테스트 연습, https&#x3A;//school.programmers.co."
  },
  
  {
    "title": "PGMS_야근지수 (Java, C++)",
    "url": "/posts/PGMS%EC%95%BC%EA%B7%BC%EC%A7%80%EC%88%98-Java-C/",
    "categories": "알고리즘",
    "tags": "C++, Java, 알고리즘, 프로그래머스",
    "date": "2025-01-11 23:04:58 +0800",
    "content": "문제 링크 메모리: 3.82 MB, 시간: 28.26 ms코딩테스트 연습 > 연습문제정확성: 86.7효율성: 13.3합계: 100.0 / 100.02025년 01월 11일 23:58:47출처: 프로그래머스 코딩 테스트 연습, https&#x3A;//school.prog"
  },
  
  {
    "title": "BOJ_1393_음하철도 구구팔 (Java, C++)",
    "url": "/posts/BOJ1393%EC%9D%8C%ED%95%98%EC%B2%A0%EB%8F%84-%EA%B5%AC%EA%B5%AC%ED%8C%94-Java-C/",
    "categories": "알고리즘",
    "tags": "C++, Java, 백준, 알고리즘",
    "date": "2025-01-11 13:59:20 +0800",
    "content": "문제 링크 메모리: 2020 KB, 시간: 0 ms브루트포스 알고리즘, 수학, 정수론2025년 1월 11일 14:53:00기차의 이동 벡터 최적화기차의 이동 방향 (dx, dy)를 최소 단위로 줄인다예: (4,6)으로 이동한다면 GCD인 2로 나눠서 (2,3)으로 변환"
  },
  
  {
    "title": "브라우저는 어떻게 동작하는가?",
    "url": "/posts/%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%8A%94%EA%B0%80/",
    "categories": "공부",
    "tags": "백엔드",
    "date": "2025-01-10 14:31:52 +0800",
    "content": "브라우저는 가장 많이 사용하는 소프트웨어일 것이다. 탈리 가르시엘이란 이스라엘 개발자가 게시한 글을 통해 이를 자세히 알아보자.최근 인터넷 익스플로러, 파이어폭스, 사파리, 크롬, 오페라 이렇게 5개의 브라우저가 많이 사용되지만 파이어 폭스, 크롬, 사파리와 같은 오픈"
  },
  
  {
    "title": "Operating System Concepts - (9)",
    "url": "/posts/Operating-System-Concepts-9/",
    "categories": "운영체제",
    "tags": "공룡책, 운영체제",
    "date": "2025-01-10 08:27:53 +0800",
    "content": "가상 메모리는 운영체제가 관리한다.실제로 필요할 때 page를 메모리에 올리는 것. (요청이 있으면 페이지를 메모리에 올리겠다는 의미)실제로 대부분의 시스템들은 Paging 기법 사용 중요구 페이징의 장점I/O양의 감소 (프로그램 중에 빈번하게 사용되는 부분은 지극히 "
  },
  
  {
    "title": "데이터베이스 동시성 제어",
    "url": "/posts/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-%EB%8F%99%EC%8B%9C%EC%84%B1-%EC%A0%9C%EC%96%B4/",
    "categories": "공부",
    "tags": "Java, Spring, 백엔드",
    "date": "2025-01-09 20:18:58 +0800",
    "content": "동시성 제어 방식 중 대표적으로 MVCC(Multi-Version Concurrency Control) 와 Lock-Based Concurrency Control 이 있다.MVCC는 데이터의 여러 버전을 유지하여 트랜잭션이 동시에 데이터를 읽고 쓸 수 있도록 하는 방식"
  },
  
  {
    "title": "HTTP 메서드의 멱등성",
    "url": "/posts/HTTP-%EB%A9%94%EC%84%9C%EB%93%9C%EC%9D%98-%EB%A9%B1%EB%93%B1%EC%84%B1/",
    "categories": "공부",
    "tags": "Java, Spring, 백엔드",
    "date": "2025-01-09 19:43:58 +0800",
    "content": "연산을 여러번 적용하더라도 결과가 달라지지 않는 성질을 멱등성이라고 한다. HTTP 메서드의 멱등성은 동일한 요청을 한 번 보내는 것과 여러번 보내는 것이 서로 동일한 효과를 지니며, 서버의 상태도 동일하게 남을 경우에 멱등하다고 말할 수 있다. 대표적으로 멱등한 메서"
  },
  
  {
    "title": "BOJ_2503_숫자 야구 (Java)",
    "url": "/posts/BOJ2503%EC%88%AB%EC%9E%90-%EC%95%BC%EA%B5%AC-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-01-09 15:38:36 +0800",
    "content": "문제 링크 메모리: 16248 KB, 시간: 120 ms브루트포스 알고리즘, 구현2025년 1월 9일 16:33:20가능한 모든 3자리 숫자를 생성한다. 이때 문제의 조건에 맞는 숫자만을 리스트에 추가한다.추가 조건세 자리의 숫자가 모두 달라야 함0이 포함되지 않아야 "
  },
  
  {
    "title": "클라이언트가 웹사이트에 처음 접근했을 때 발생하는 일",
    "url": "/posts/%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8%EA%B0%80-%EC%9B%B9%EC%82%AC%EC%9D%B4%ED%8A%B8%EC%97%90-%EC%B2%98%EC%9D%8C-%EC%A0%91%EA%B7%BC%ED%96%88%EC%9D%84-%EB%95%8C-%EB%B0%9C%EC%83%9D%ED%95%98%EB%8A%94-%EC%9D%BC/",
    "categories": "공부",
    "tags": "Java, Spring, 백엔드",
    "date": "2025-01-09 01:53:07 +0800",
    "content": "사용자가 https&#x3A;//www.google.com/ 를 입력하면, 브라우저는 HTTP 프로토콜을 사용해 구글 웹 서버와 통신하려고 한다. HTTP는 OSI 7계층 중 애플리케이션 계층에서 동작하는 프로토콜이다.이때 브라우저는 요청한 도메인 이름 (www.goo"
  },
  
  {
    "title": "데이터베이스 커넥션 풀(Connection Pool)",
    "url": "/posts/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-%EC%BB%A4%EB%84%A5%EC%85%98-%ED%92%80Connection-Pool/",
    "categories": "공부",
    "tags": "Java, Spring, 백엔드",
    "date": "2025-01-09 01:32:38 +0800",
    "content": "애플리케이션과 데이터베이스가 통신을 하기 위해서는 데이터베이스 커넥션이 필요하다.데이터베이스 드라이버를 사용하여 데이터베이스에 연결데이터 읽기/쓰기를 위한 TCP 소켓 열기소켓을 통한 데이터 읽기/쓰기연결 종료소켓 닫기커넥션 풀이 없다면 애플리케이션에서 데이터베이스에 "
  },
  
  {
    "title": "Thread, Process, Core의 수는 다다익선일까?",
    "url": "/posts/Thread-Process-Core%EC%9D%98-%EC%88%98%EB%8A%94-%EB%8B%A4%EB%8B%A4%EC%9D%B5%EC%84%A0%EC%9D%BC%EA%B9%8C/",
    "categories": "공부",
    "tags": "Java, Spring, 백엔드",
    "date": "2025-01-09 00:51:02 +0800",
    "content": "스레드, 프로세스, 코어의 수가 많을수록 시스템 성능이 향상된다고 생각할 수 있지만, 실제로 그렇지 않을 확률이 크다.쓰레드가 지나치게 많아지면 운영체제가 쓰레드 간 컨텍스트 스위칭을 자주 수행해야 하여 CPU 자원이 쓰레드 관리에 소모된다. 이로 인해 실제 작업 수행"
  },
  
  {
    "title": "단위테스트 VS 통합테스트",
    "url": "/posts/%EB%8B%A8%EC%9C%84%ED%85%8C%EC%8A%A4%ED%8A%B8-VS-%ED%86%B5%ED%95%A9%ED%85%8C%EC%8A%A4%ED%8A%B8/",
    "categories": "공부",
    "tags": "Java, Spring, 백엔드",
    "date": "2025-01-09 00:07:05 +0800",
    "content": "단위 테스트는 소프트웨어으 가장 작은 단위, 즉 개별 메서드나 함수의 기능을 검증하는 테스트다. 특정 기능이 올바르게 동작하는지 확인하기 위함이며 독립적이고 빠르게 실행된다. 반면 통합 테스트는 개별 모듈들이 결합되어 전체 시스템이 올바르게 동작하는지 검증하는 테스트다"
  },
  
  {
    "title": "공유 락(Shared Lock) 과 배타 락(Exclusive Lock)",
    "url": "/posts/%EA%B3%B5%EC%9C%A0-%EB%9D%BDShared-Lock-%EA%B3%BC-%EB%B0%B0%ED%83%80-%EB%9D%BDExclusive-Lock/",
    "categories": "공부",
    "tags": "Java, Spring, 백엔드",
    "date": "2025-01-08 23:24:40 +0800",
    "content": "공유 락과 배타 락은 비관적 락(Pessimistic Lock)의 데이터 일관성과 무결성을 위해 사용하는 락 유형이다.공유 락은 읽기 락(Read Lock)이라고 부르며, 공유 락이 걸린 데이터는 읽기(SELECT)연산만 가능하며, 쓰기(UPDATE, DELETE)는 "
  },
  
  {
    "title": "Operating System Concepts - (8)",
    "url": "/posts/Operating-System-Concepts-8/",
    "categories": "운영체제",
    "tags": "공룡책, 운영체제",
    "date": "2025-01-08 23:07:19 +0800",
    "content": "Memory Management - (3)"
  },
  
  {
    "title": "BOJ_1937_욕심쟁이 판다 (Java)",
    "url": "/posts/BOJ1937%EC%9A%95%EC%8B%AC%EC%9F%81%EC%9D%B4-%ED%8C%90%EB%8B%A4-Java/",
    "categories": "알고리즘",
    "tags": "",
    "date": "2025-01-08 13:50:32 +0800",
    "content": "문제 링크 메모리: 37428 KB, 시간: 456 ms깊이 우선 탐색, 다이나믹 프로그래밍, 그래프 이론, 그래프 탐색2025년 1월 8일 14:42:05간단한 dfs, 메모이제이션(백트래킹) 문제. DFS와 DP(동적 계획법)를 결합하여 해결하는 대표적인 문제다. "
  },
  
  {
    "title": "동기 방식으로 외부 서비스를 호출할 때 외부 서비스 장애시 어떻게 조치해야 할까?",
    "url": "/posts/%EB%8F%99%EA%B8%B0-%EB%B0%A9%EC%8B%9D%EC%9C%BC%EB%A1%9C-%EC%99%B8%EB%B6%80-%EC%84%9C%EB%B9%84%EC%8A%A4%EB%A5%BC-%ED%98%B8%EC%B6%9C%ED%95%A0-%EB%95%8C-%EC%99%B8%EB%B6%80-%EC%84%9C%EB%B9%84%EC%8A%A4-%EC%9E%A5%EC%95%A0%EC%8B%9C-%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%A1%B0%EC%B9%98%ED%95%B4%EC%95%BC-%ED%95%A0%EA%B9%8C/",
    "categories": "공부",
    "tags": "Java, Spring, 백엔드",
    "date": "2025-01-07 19:42:52 +0800",
    "content": "외부 서비스 장애로 인해 응답이 오래 걸린다고 했을 때 외부 API 응답으로 대기하는 자원들이 운영 서버 내부에 쌓이면서 성능에 악영향을 줄 수 있다. 이를 해결하기 위한 가장 기본적인 방법은 타임아웃을 설정하는 것이다. 크게 타임아웃에는 커넥션 타임아웃과 리드 타임아"
  },
  
  {
    "title": "BOJ_17352_여러분의 다리가 되어 드리겠습니다! (Java)",
    "url": "/posts/BOJ17352%EC%97%AC%EB%9F%AC%EB%B6%84%EC%9D%98-%EB%8B%A4%EB%A6%AC%EA%B0%80-%EB%90%98%EC%96%B4-%EB%93%9C%EB%A6%AC%EA%B2%A0%EC%8A%B5%EB%8B%88%EB%8B%A4-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-01-07 19:28:44 +0800",
    "content": "문제 링크 메모리: 83392 KB, 시간: 548 ms자료 구조, 분리 집합, 그래프 이론, 그래프 탐색2025년 1월 7일 20:22:41보자마자 Union-find 문제라고 생각했다. 모든 점들을 묶으면 2개의 그룹이 생긴다고 생각했다. 그래서 집합으로 묶자고 결"
  },
  
  {
    "title": "BOJ_2493_탑 (Java, C++)",
    "url": "/posts/BOJ2493%ED%83%91-Java-C/",
    "categories": "알고리즘",
    "tags": "C++, Java, 백준, 알고리즘",
    "date": "2025-01-07 16:36:04 +0800",
    "content": "문제 링크 메모리: 87888 KB, 시간: 816 ms자료 구조, 스택2025년 1월 7일 17:20:49스택이 비었는지 체크하지 않기 위에 맨 앞에 더미데이터로 높이가 무한대이며 순서가 0인 탑을 넣었다.스택에는 이전에 확인한 탑들 중에서 현재 탑보다 높은 탑들만 "
  },
  
  {
    "title": "Spring 어노테이션들의 차이 @Component, @Controller, @Service, @Repository",
    "url": "/posts/Spring-%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98%EB%93%A4%EC%9D%98-%EC%B0%A8%EC%9D%B4-Component-Controller-Service-Repository/",
    "categories": "공부",
    "tags": "Java, Spring, 백엔드",
    "date": "2025-01-07 02:14:54 +0800",
    "content": "@Component, @Service, @Controller, @Repository는 각각의 클래스를 특정 역할을 수행하는 Spring Bean으로 등록할 때 사용된다.  각 어노테이션은 클래스가 어떤 역할을 하는지를 명시적으로 나타내며, Spring의 @Compone"
  },
  
  {
    "title": "동일성 vs 동등성",
    "url": "/posts/%EB%8F%99%EC%9D%BC%EC%84%B1-vs-%EB%8F%99%EB%93%B1%EC%84%B1/",
    "categories": "공부",
    "tags": "Java, Spring, 백엔드",
    "date": "2025-01-07 01:30:05 +0800",
    "content": "동일성과 동등성은 객체를 비교할 때 중요한 개념이다. 자바에서는 이 두 개념을 equals() 메서드와 == 연산자를 통해 구분할 수 있다.equals()는 객체의 내용을 비교하는 반면, ==는 객체의 참조(레퍼런스)를 비교한다. 따라서 두 객체의 내용이 같더라도 서로"
  },
  
  {
    "title": "equals 와 hashCode를 함께 재정의하는 이유",
    "url": "/posts/equals-%EC%99%80-hashCode%EB%A5%BC-%ED%95%A8%EA%BB%98-%EC%9E%AC%EC%A0%95%EC%9D%98%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0/",
    "categories": "공부",
    "tags": "Java, Spring, 백엔드",
    "date": "2025-01-07 00:02:08 +0800",
    "content": "equals와 hashCode 메서드는 객체의 동등성 비교와 해시값 생성을 위해서 사용할 수 있다. 하지만, 함께 재정의하지 않는다면 예상치 못한 결과를 만들 수 있다. 가령, 해시값을 사용하는 자료구조(HashSet, HashMap, ...) 을 사용할 때 문제가 발"
  },
  
  {
    "title": "JPA에서의 ID 생성 전략",
    "url": "/posts/JPA%EC%97%90%EC%84%9C%EC%9D%98-ID-%EC%83%9D%EC%84%B1-%EC%A0%84%EB%9E%B5/",
    "categories": "공부",
    "tags": "Java, Spring, 백엔드",
    "date": "2025-01-06 23:38:56 +0800",
    "content": "JPA에서 ID를 생성하기 위해서는 직접할당 과 자동할당 을 사용할 수 있다.직접 할당은 @Id 어노테이션만을 사용해 Id 값을 직접 할당하는 방식이다. 반면, 자동 할당은 @Id 와 @GeneratedValue 를 함께 사용해서 원하는 키 생성 전략을 선택하는 방식이"
  },
  
  {
    "title": "BOJ_2873_롤러코스터 (Java)",
    "url": "/posts/BOJ2873%EB%A1%A4%EB%9F%AC%EC%BD%94%EC%8A%A4%ED%84%B0-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-01-06 19:42:07 +0800",
    "content": "문제 링크 메모리: 73500 KB, 시간: 696 ms해 구성하기, 그리디 알고리즘, 구현2025년 1월 6일 20:36:02처음엔 짝수x짝수부분을 dfs로 풀었는데 시간초과가 났다. 이에 내가 생각하는 최적의 패턴이 존재했기에 이대로 출력해야겠다고 생각했고, 효율적"
  },
  
  {
    "title": "SWEA_1798_범준이의 제주도 여행 계획 (Java)",
    "url": "/posts/SWEA1798%EB%B2%94%EC%A4%80%EC%9D%B4%EC%9D%98-%EC%A0%9C%EC%A3%BC%EB%8F%84-%EC%97%AC%ED%96%89-%EA%B3%84%ED%9A%8D-Java/",
    "categories": "알고리즘",
    "tags": "Java, SWEA, 알고리즘",
    "date": "2025-01-06 03:26:47 +0800",
    "content": "문제 링크 메모리: 24,960 KB, 시간: 3,595 ms, 코드길이: 4,573 Bytes2025-01-06 04:19출처: SW Expert Academy, https&#x3A;//swexpertacademy.com/main/code/problem/problem"
  },
  
  {
    "title": "PGMS_즐겨찾기가 가장 많은 식당 정보 출력하기 (SQL)",
    "url": "/posts/PGMS%EC%A6%90%EA%B2%A8%EC%B0%BE%EA%B8%B0%EA%B0%80-%EA%B0%80%EC%9E%A5-%EB%A7%8E%EC%9D%80-%EC%8B%9D%EB%8B%B9-%EC%A0%95%EB%B3%B4-%EC%B6%9C%EB%A0%A5%ED%95%98%EA%B8%B0-SQL/",
    "categories": "SQL",
    "tags": "sql, 프로그래머스",
    "date": "2025-01-05 22:21:01 +0800",
    "content": "문제 링크 메모리: 0.0 MB, 시간: 0.00 ms코딩테스트 연습 > GROUP BYEmpty2025년 01월 05일 23:20:10출처: 프로그래머스 코딩 테스트 연습, https&#x3A;//school.programmers.co.kr/learn/challeng"
  },
  
  {
    "title": "BOJ_15971_두 로봇 (Java, C++)",
    "url": "/posts/BOJ15971%EB%91%90-%EB%A1%9C%EB%B4%87-Java-C/",
    "categories": "알고리즘",
    "tags": "C++, Java, 백준, 알고리즘",
    "date": "2025-01-05 21:27:31 +0800",
    "content": "문제 링크 메모리: 81880 KB, 시간: 444 ms너비 우선 탐색, 깊이 우선 탐색, 그래프 이론, 그래프 탐색2025년 1월 5일 22:05:56public class Main {\tclass Node{\t\tint to;\t\tint W;\t\tpublic Node(int"
  },
  
  {
    "title": "Operating System Concepts - (7)",
    "url": "/posts/Operating-System-Concepts-7/",
    "categories": "운영체제",
    "tags": "공룡책, 운영체제",
    "date": "2025-01-05 03:12:59 +0800",
    "content": "주소 변환을 페이징 별로 해야하기 때문에 바인딩이 어려워짐.Paging (페이징 기법)Process의 Virtual Memory를 동일한 사이즈의 Page 단위로 나눔Virtual Memory의 내용이 page 단위로 noncontiguous하게 저장됨.일부는 back"
  },
  
  {
    "title": "얕은 복사와 깊은 복사",
    "url": "/posts/%EC%96%95%EC%9D%80-%EB%B3%B5%EC%82%AC%EC%99%80-%EA%B9%8A%EC%9D%80-%EB%B3%B5%EC%82%AC/",
    "categories": "공부",
    "tags": "Java, 백엔드",
    "date": "2025-01-04 21:13:51 +0800",
    "content": "자바에서 객체를 복사할 때 얕은 복사와 깊은 복사라는 두 가지 방식이 있다. 먼저 Book과 Author라는 두 클래스를 사용해서 예제를 알아보자. Book은 책의 이름(name)과 저자(author) 정보를 가지고 있고, Author는 저자의 이름을 가지고 있다.sh"
  },
  
  {
    "title": "트랜잭션의 격리 수준",
    "url": "/posts/%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98%EC%9D%98-%EA%B2%A9%EB%A6%AC-%EC%88%98%EC%A4%80/",
    "categories": "공부",
    "tags": "Java, Spring, 백엔드",
    "date": "2025-01-04 20:47:33 +0800",
    "content": "트랜잭션의 격리 수준은 동시에 여러 트랜잭션이 실행될 때 한 트랜잭션이 다른 트랜잭션의 연산에 영향을 받지 않도록 하는 정도를 말한다. 낮은 격리 수준은 동시 처리 능력을 높이지만, 데이터의 일관성 문제를 발생시킬 수 있다. 반대로, 높은 격리 수준은 데이터의 일관성을"
  },
  
  {
    "title": "BOJ_20952_게임 개발자 승희 (Java)",
    "url": "/posts/BOJ20952%EA%B2%8C%EC%9E%84-%EA%B0%9C%EB%B0%9C%EC%9E%90-%EC%8A%B9%ED%9D%AC-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-01-04 13:55:06 +0800",
    "content": "문제 링크 메모리: 56632 KB, 시간: 696 ms구현, 수학2025년 1월 4일 14:40:17재밌는 문제!public class Main {//\t\tbr = new BufferedReader(new InputStreamReader(new FileInputStre"
  },
  
  {
    "title": "Checked Exception과 Unchecked Exception",
    "url": "/posts/Checked-Exception%EA%B3%BC-Unchecked-Exception/",
    "categories": "공부",
    "tags": "Java, Spring, 백엔드",
    "date": "2025-01-04 01:06:08 +0800",
    "content": "Checked Exception 은 컴파일 시점에 확인되며, 반드시 처리해야하는 예외다. Java에서는 IOException , SQLException 등이 이에 속한다. Check Exception을 유발하는 메서드를 호출하는 경우, 메서드 시그니처에 throw 를 "
  },
  
  {
    "title": "N+1문제 (Spring JPA)",
    "url": "/posts/N1%EB%AC%B8%EC%A0%9C-Spring-JPA/",
    "categories": "공부",
    "tags": "Java, Spring, 백엔드",
    "date": "2025-01-04 00:35:43 +0800",
    "content": "JPA N+1 문제는 연관 관계가 설정된 엔티티를 조회할 경우에, 조회된 데이터 개수 N개 만큼 연관관계의 조회 쿼리가 추가로 발생하느 ㄴ현상이다. 예를들어, 블로그 게시글과 댓글이 있는 경우, 게시글을 조회한 후 각 게시글마다 댓글을 조회하기 위해 추가 쿼리가 발생한"
  },
  
  {
    "title": "엔티티 매니저란?",
    "url": "/posts/%EC%97%94%ED%8B%B0%ED%8B%B0-%EB%A7%A4%EB%8B%88%EC%A0%80%EB%9E%80/",
    "categories": "알고리즘",
    "tags": "Java, Spring, 백엔드",
    "date": "2025-01-04 00:19:28 +0800",
    "content": "엔티티 매니저에 대해 알기 위해선 영속성 컨텍스트에 대해 알아야 한다. 영속성 컨텍스트는 엔티티를 영구 저장하는 환경으로 1차 캐싱, 쓰기 지연, 변경 감지를 통해 영속 로직을 효율적으로 할 수 있게 해준다. 이러한 효율적인 영속 로직 수행을 위해서 엔티티는 영속성 컨"
  },
  
  {
    "title": "JPA의 ddl-auto 옵션은 각각 어떤 동작을 하고 어떤 상황에서 사용해야 할까?",
    "url": "/posts/JPA%EC%9D%98-ddl-auto-%EC%98%B5%EC%85%98%EC%9D%80-%EA%B0%81%EA%B0%81-%EC%96%B4%EB%96%A4-%EB%8F%99%EC%9E%91%EC%9D%84-%ED%95%98%EA%B3%A0-%EC%96%B4%EB%96%A4-%EC%83%81%ED%99%A9%EC%97%90%EC%84%9C-%EC%82%AC%EC%9A%A9%ED%95%B4%EC%95%BC-%ED%95%A0%EA%B9%8C/",
    "categories": "공부",
    "tags": "Java, Spring, 백엔드",
    "date": "2025-01-04 00:02:44 +0800",
    "content": "ddl-auto 옵션은 스프링 부트 애플리케이션에서 Hibernate와 같은 JPA 구현체를 사용할 때 데이터베이스 스키마 관리를 제어하는 설정이다. 이 옵션은 application.properties 또는 application.yml 파일에서 설정할 수 있으며, 다양"
  },
  
  {
    "title": "Spring Data JPA에서 새로운 Entity인지 판단하는 방법",
    "url": "/posts/Spring-Data-JPA%EC%97%90%EC%84%9C-%EC%83%88%EB%A1%9C%EC%9A%B4-Entity%EC%9D%B8%EC%A7%80-%ED%8C%90%EB%8B%A8%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95/",
    "categories": "공부",
    "tags": "Java, Spring, 백엔드",
    "date": "2025-01-03 15:51:28 +0800",
    "content": "새로운 엔티티인지 여부는 JpaEntityInformation의 isNew(T entity) 에 의해 판단된다. 다른 설정이 없다면 JpaMetaModelEntityInformation 클래스가 동작한다. @Version 이 사용된 필드가 없거나 Version 이 사용"
  },
  
  {
    "title": "BOJ_17611_직각다각형 (Java)",
    "url": "/posts/BOJ17611%EC%A7%81%EA%B0%81%EB%8B%A4%EA%B0%81%ED%98%95-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-01-03 11:33:48 +0800",
    "content": "문제 링크 메모리: 46140 KB, 시간: 276 ms누적 합, 정렬, 스위핑2025년 1월 3일 12:25:29public class Main {\tstatic BufferedReader br;\tstatic BufferedWriter bw;\tstatic StringT"
  },
  
  {
    "title": "Spring @Transactional 어노테이션은 private 메서드에서 동작할까?",
    "url": "/posts/Spring-Transactional-%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98%EC%9D%80-private-%EB%A9%94%EC%84%9C%EB%93%9C%EC%97%90%EC%84%9C-%EB%8F%99%EC%9E%91%ED%95%A0%EA%B9%8C/",
    "categories": "공부",
    "tags": "Java, Spring, 백엔드",
    "date": "2025-01-03 02:23:13 +0800",
    "content": "Spring AOP 기반 런타임에 동작하는 어노테이션으로 @Transactional , @Cacheable , @Async 등이 있습니다. Spring AOP (어떤 로직을 기준으로 핵심적인 관점, 부가적인 관점으로 나누어서 보고 그 관점을 기준으로 각각 모듈화하겠다는"
  },
  
  {
    "title": "BOJ_2629_양팔 저울 (Java)",
    "url": "/posts/BOJ2629%EC%96%91%ED%8C%94-%EC%A0%80%EC%9A%B8-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-01-02 16:41:12 +0800",
    "content": "문제 링크 메모리: 15584 KB, 시간: 112 ms다이나믹 프로그래밍, 배낭 문제2025년 1월 2일 17:15:20양팔 저울과 몇 개의 추가 주어졌을 때, 이를 이용하여 입력으로 주어진 구슬의 무게를 확인할 수 있는지를 결정하려고 한다.무게가 각각 1g과 4g인"
  },
  
  {
    "title": "BOJ_14497_주난의 난(難) (Java)",
    "url": "/posts/BOJ14497%EC%A3%BC%EB%82%9C%EC%9D%98-%EB%82%9C%E9%9B%A3-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2025-01-02 13:59:13 +0800",
    "content": "문제 링크 메모리: 23860 KB, 시간: 232 ms0-1 너비 우선 탐색, 너비 우선 탐색, 데이크스트라, 그래프 이론, 그래프 탐색, 최단 경로2025년 1월 2일 14:02:32간단한 BFS 문제다. time을 우선순위큐에 넣어 진행했다. 생각해보니 다익스트라"
  },
  
  {
    "title": "PGMS_2020 카카오 인턴_보석 쇼핑 (Java)",
    "url": "/posts/PGMS2020-%EC%B9%B4%EC%B9%B4%EC%98%A4-%EC%9D%B8%ED%84%B4%EB%B3%B4%EC%84%9D-%EC%87%BC%ED%95%91-Java/",
    "categories": "알고리즘",
    "tags": "Java, 알고리즘, 프로그래머스",
    "date": "2025-01-01 23:00:58 +0800",
    "content": "문제 링크 메모리: 83.2 MB, 시간: 51.36 ms코딩테스트 연습 > 2020 카카오 인턴십정확성: 33.3효율성: 66.7합계: 100.0 / 100.02025년 01월 01일 21:57:58출처: 프로그래머스 코딩 테스트 연습, https&#x3A;//sch"
  },
  
  {
    "title": "LeetCode_71_Simplify Path (Java)",
    "url": "/posts/LeetCode71Simplify-Path/",
    "categories": "알고리즘",
    "tags": "Java, leetcode, 알고리즘",
    "date": "2025-01-01 12:31:26 +0800",
    "content": "/로 split 한 뒤 ..에 대한 경우의수를 나누었고 아무것도 없는 조건에서 바로 리턴하는 조건문도 추가했다.}"
  },
  
  {
    "title": "BOJ_17073_나무 위의 빗물 (Java, C++)",
    "url": "/posts/BOJ17073%EB%82%98%EB%AC%B4-%EC%9C%84%EC%9D%98-%EB%B9%97%EB%AC%BC-Java-C/",
    "categories": "알고리즘",
    "tags": "C++, Java, 백준, 알고리즘",
    "date": "2024-12-31 23:59:57 +0800",
    "content": "문제 링크 메모리: 118868 KB, 시간: 460 ms그래프 이론, 그래프 탐색, 수학, 트리2025년 1월 1일 00:54:45업로드중.."
  },
  
  {
    "title": "BOJ_18428_감시 피하기 (Java)",
    "url": "/posts/BOJ18428%EA%B0%90%EC%8B%9C-%ED%94%BC%ED%95%98%EA%B8%B0-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-12-31 22:52:45 +0800",
    "content": "문제 링크 메모리: 15848 KB, 시간: 124 ms백트래킹, 브루트포스 알고리즘2024년 12월 31일 23:49:03보자마자 dfs 문제라고 생각했다. 모든 조합에 대한 완탐이 필요하다고 생각했기 때문이다. trap을 매개변수로 하나씩 늘려가는것이 함정개수다. "
  },
  
  {
    "title": "PGMS_자동차 대여 기록에서 대여중 / 대여 가능 여부 구분하기 (SQL)",
    "url": "/posts/PGMS%EC%9E%90%EB%8F%99%EC%B0%A8-%EB%8C%80%EC%97%AC-%EA%B8%B0%EB%A1%9D%EC%97%90%EC%84%9C-%EB%8C%80%EC%97%AC%EC%A4%91-%EB%8C%80%EC%97%AC-%EA%B0%80%EB%8A%A5-%EC%97%AC%EB%B6%80-%EA%B5%AC%EB%B6%84%ED%95%98%EA%B8%B0-SQL/",
    "categories": "SQL",
    "tags": "sql, 프로그래머스",
    "date": "2024-12-31 20:50:21 +0800",
    "content": "문제 링크 메모리: 0.0 MB, 시간: 0.00 ms코딩테스트 연습 > GROUP BYEmpty2024년 12월 31일 21:49:59출처: 프로그래머스 코딩 테스트 연습, https&#x3A;//school.programmers.co.kr/learn/challeng"
  },
  
  {
    "title": "BOJ_7983_내일 할거야 (Java)",
    "url": "/posts/BOJ7983%EB%82%B4%EC%9D%BC-%ED%95%A0%EA%B1%B0%EC%95%BC-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-12-31 19:34:03 +0800",
    "content": "문제 링크 메모리: 276848 KB, 시간: 2068 ms그리디 알고리즘, 정렬2024년 12월 31일 20:30:18그리디하게 시작일을 설정하면된다.public class Main {\tclass Work implements Comparable{\t\tint time, "
  },
  
  {
    "title": "BOJ_10974_모든 순열 (Java, C++)",
    "url": "/posts/BOJ10974%EB%AA%A8%EB%93%A0-%EC%88%9C%EC%97%B4-Java-C/",
    "categories": "알고리즘",
    "tags": "C++, Java, 백준, 알고리즘",
    "date": "2024-12-29 18:04:21 +0800",
    "content": "문제 링크 메모리: 3896 KB, 시간: 16 ms백트래킹, 브루트포스 알고리즘2024년 12월 29일 18:55:08순열은 재귀로 방문처리와 함께 작성할 수 있었다. 메모리 사용을 좋게 하고자 길이 8 제한을 보고 비트마스킹으로 방문처리를 했다.C++에서 숫자를 문"
  },
  
  {
    "title": "BOJ_1519_부분 문자열 뽑기 게임 (Java)",
    "url": "/posts/BOJ1519%EB%B6%80%EB%B6%84-%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%BD%91%EA%B8%B0-%EA%B2%8C%EC%9E%84-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-12-25 03:30:05 +0800",
    "content": "문제 링크 메모리: 323276 KB, 시간: 2424 ms다이나믹 프로그래밍, 게임 이론, 문자열2024년 12월 25일 04:21:35이미 계산된 값이면 바로 반환 (메모이제이션)num이 9 이하면 -1 반환현재 숫자의 모든 가능한 부분 문자열 생성:앞자리가 0이 "
  },
  
  {
    "title": "BOJ_3711_학번 (C++)",
    "url": "/posts/BOJ3711%ED%95%99%EB%B2%88-C/",
    "categories": "알고리즘",
    "tags": "C++, 백준, 알고리즘",
    "date": "2024-12-23 21:42:34 +0800",
    "content": "문제 링크 메모리: 2020 KB, 시간: 196 ms브루트포스 알고리즘, 수학, 정수론2024년 12월 23일 22:34:45간단하게 m을 1부터 나누어보며 나머지를 저장시키고 모든 학생수만큼 진행했을 떄 겹치는게 없으면 그때가 최소 m이므로 출력.// void so"
  },
  
  {
    "title": "BOJ_25707_팔찌 만들기 (C++)",
    "url": "/posts/BOJ25707%ED%8C%94%EC%B0%8C-%EB%A7%8C%EB%93%A4%EA%B8%B0-C/",
    "categories": "알고리즘",
    "tags": "C++, 백준, 알고리즘",
    "date": "2024-12-23 21:40:55 +0800",
    "content": "문제 링크 메모리: 2020 KB, 시간: 0 ms애드 혹, 그리디 알고리즘, 수학, 정렬2024년 12월 22일 12:37:38반드시 한바퀴를 돌며 처음부터 끝까지 검사해야하는데 반드시 최소값과 최대값은 지나쳐야하며 최대값 - 최솟값의 절댓값이 있으면 양쪽으로 그 이"
  },
  
  {
    "title": "BOJ_2720_세탁소 사장 동혁 (Java)",
    "url": "/posts/BOJ2720%EC%84%B8%ED%83%81%EC%86%8C-%EC%82%AC%EC%9E%A5-%EB%8F%99%ED%98%81-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-12-23 21:38:27 +0800",
    "content": "문제 링크 메모리: 14300 KB, 시간: 104 ms사칙연산, 그리디 알고리즘, 수학2024년 12월 21일 23:22:43간단한 수학 계산이다. 몫을 저장하고 나머지로 갱신하며 답을 찾았다.public class Main {\tstatic BufferedReader"
  },
  
  {
    "title": "클라이언트와 서버의 통신, 그리고 WebSocket과 WebRTC",
    "url": "/posts/%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8%EC%99%80-%EC%84%9C%EB%B2%84%EC%9D%98-%ED%86%B5%EC%8B%A0-%EA%B7%B8%EB%A6%AC%EA%B3%A0-WebSocket%EA%B3%BC-WebRTC/",
    "categories": "공부",
    "tags": "JPA, Java, Spring, websocket, 백엔드",
    "date": "2024-12-20 16:16:37 +0800",
    "content": "프로젝트를 진행하며 공부한 내용을 기록하고자 한다.  > # Client-to-server communication  Http 클라이언트와 서버는 통신을 할 때 여러 방식을 채택할 수 있다. 이때 가장 대표적인 것으로 Http / Https 통신을 생각할 수 있을것이다"
  },
  
  {
    "title": "BOJ_16756_Pismo (Java, C++)",
    "url": "/posts/BOJ16756Pismo-Java-C/",
    "categories": "알고리즘",
    "tags": "C++, Java, 백준, 알고리즘",
    "date": "2024-12-20 16:15:28 +0800",
    "content": "문제 링크 메모리: 2376 KB, 시간: 12 ms그리디 알고리즘, 구현2024년 12월 20일 17:07:06생각보다 문제 이해가 잘 안됐다가 아이디어가 번뜩였다. 최대값 - 최소값의 차이가 최소인 구간을 찾는 것 이므로 가장 최대값 - 최소값의 차이가 적은 구간은"
  },
  
  {
    "title": "BOJ_11728_배열 합치기 (Java, C++)",
    "url": "/posts/BOJ11728%EB%B0%B0%EC%97%B4-%ED%95%A9%EC%B9%98%EA%B8%B0-Java-C/",
    "categories": "알고리즘",
    "tags": "C++, Java, 백준, 알고리즘",
    "date": "2024-12-20 16:03:41 +0800",
    "content": "문제 링크 메모리: 353940 KB, 시간: 1464 ms정렬, 두 포인터2024년 12월 19일 21:22:18리스트에 추가 후 오름차순 정렬하여 출력했다.public class Main {\tstatic BufferedReader br;\tstatic Buffered"
  },
  
  {
    "title": "BOJ_23563_벽 타기 (Java)",
    "url": "/posts/BOJ23563%EB%B2%BD-%ED%83%80%EA%B8%B0-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-12-18 15:43:52 +0800",
    "content": "[Gold III] 벽 타기 - 23563  문제 링크  성능 요약  메모리: 33392 KB, 시간: 628 ms  분류  0-1 너비 우선 탐색, 데이크스트라, 그래프 이론, 최단 경로  제출 일자  2024년 12월 18일 16:11:27  문제 설명  루시우는 "
  },
  
  {
    "title": "BOJ_17304_변호사들 (Java)",
    "url": "/posts/BOJ17304%EB%B3%80%ED%98%B8%EC%82%AC%EB%93%A4-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-12-17 04:42:34 +0800",
    "content": "문제 링크 메모리: 94808 KB, 시간: 668 ms깊이 우선 탐색, 그래프 이론, 그래프 탐색, 강한 연결 요소2024년 12월 17일 05:34:02처음 틀린 풀이(14%) 부터 리뷰하겠다.변호관계를 다 저장한 뒤 dfs로 그래프 탐색을 한다. 이때 양방향이거나"
  },
  
  {
    "title": "BOJ_2096_내려가기 (Java, C++)",
    "url": "/posts/BOJ2096%EB%82%B4%EB%A0%A4%EA%B0%80%EA%B8%B0-Java-C/",
    "categories": "알고리즘",
    "tags": "C++, Java, 백준, 알고리즘",
    "date": "2024-12-16 16:08:12 +0800",
    "content": "문제 링크 메모리: 2020 KB, 시간: 20 ms다이나믹 프로그래밍, 슬라이딩 윈도우2024년 12월 16일 17:03:41간단한 dp 문제다. 자바로 풀 땐 dp배열과 board배열을 사용해 전체에 저장하며 풀었다. 이를 c++로 그대로 구현하니 메모리 초과가 발"
  },
  
  {
    "title": "LeetCode_433_Minimum Genetic Mutation (Java, C++)",
    "url": "/posts/LeetCode433Minimum-Genetic-Mutation-Java-C/",
    "categories": "알고리즘",
    "tags": "C++, Java, leetcode, 알고리즘",
    "date": "2024-12-16 14:43:59 +0800",
    "content": "완전 탐색을 생각했다. 이후 어떻게 찾은 문자에 대해서만 진행하지를 생각했을 때 queue에 넣고 그 사이즈만큼 반복해서 돌리면 될 것 같았다. BFS알고리즘과 비슷한 것 같다.이후 어떻게 이 gene들을 비교할 지 생각 중 문자열이기 때문에 contains를 사용시 "
  },
  
  {
    "title": "BOJ_23353_승부 조작 (Java)",
    "url": "/posts/BOJ23353%EC%8A%B9%EB%B6%80-%EC%A1%B0%EC%9E%91-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-12-16 01:09:59 +0800",
    "content": "문제 링크 메모리: 243664 KB, 시간: 996 ms다이나믹 프로그래밍2024년 12월 16일 01:56:03냥목 게임은 위 그림과 같은 $N \\times N$ 크기의 바둑판에서 흑돌과 백돌을 이용해 진행된다.랑이는 흑돌을, 메리는 백돌을 사용한다.냥목 게임에서"
  },
  
  {
    "title": "BOJ_25629_홀짝 수열 (C++)",
    "url": "/posts/BOJ25629%ED%99%80%EC%A7%9D-%EC%88%98%EC%97%B4-C/",
    "categories": "알고리즘",
    "tags": "C++, 백준, 알고리즘",
    "date": "2024-12-15 23:00:11 +0800",
    "content": "문제 링크 메모리: 2020 KB, 시간: 0 ms애드 혹, 수학2024년 12월 15일 23:54:58길이가 $N$인 수열의 $i(1 \\le i \\le N)$번째 원소를 정수 $a_i(1\\le a_i \\le 100)$라고 하자. 동훈이는 이 수열을 잘 정렬해서"
  },
  
  {
    "title": "PGMS_보물 지도 (Java)",
    "url": "/posts/PGMS%EB%B3%B4%EB%AC%BC-%EC%A7%80%EB%8F%84-Java/",
    "categories": "알고리즘",
    "tags": "Java, 알고리즘, 프로그래머스",
    "date": "2024-12-15 19:35:16 +0800",
    "content": "문제 링크 메모리: undefined, 시간: 프로그래밍 강의 > PCCP 모의고사 2회 > PCCP 모의고사 2 4번채점 결과정확성: 100.0합계: 100.0 / 100.02024년 12월 15일 11:22:45벽 부수고 이동하기 처럼 3차원 visited로 간단하"
  },
  
  {
    "title": "PGMS_대장균들의 자식의 수 구하기 (SQL)",
    "url": "/posts/PGMS%EB%8C%80%EC%9E%A5%EA%B7%A0%EB%93%A4%EC%9D%98-%EC%9E%90%EC%8B%9D%EC%9D%98-%EC%88%98-%EA%B5%AC%ED%95%98%EA%B8%B0-SQL/",
    "categories": "SQL",
    "tags": "sql, 프로그래머스",
    "date": "2024-12-15 19:29:37 +0800",
    "content": "문제 링크 메모리: undefined, 시간: 코딩테스트 연습 > SELECT합계: 100.0 / 100.02024년 12월 15일 11:22:45출처: 프로그래머스 코딩 테스트 연습, https&#x3A;//school.programmers.co.kr/learn/ch"
  },
  
  {
    "title": "BOJ_1094_막대기 (Java, C++)",
    "url": "/posts/BOJ1094%EB%A7%89%EB%8C%80%EA%B8%B0-Java-C/",
    "categories": "알고리즘",
    "tags": "C++, Java, 백준, 알고리즘",
    "date": "2024-12-14 18:40:40 +0800",
    "content": "문제 링크 메모리: 15880 KB, 시간: 124 ms비트마스킹, 수학2024년 12월 14일 19:32:48숫자를 2진수로 표현 후 1의 개수를 세면된다.public class Main {    static BufferedReader br;    static Buf"
  },
  
  {
    "title": "BOJ_5550_헌책방 (Java, C++)",
    "url": "/posts/BOJ5550%ED%97%8C%EC%B1%85%EB%B0%A9-Java-C/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-12-13 22:55:03 +0800",
    "content": "문제 링크 메모리: 23536 KB, 시간: 300 ms다이나믹 프로그래밍, 누적 합, 정렬2024년 12월 13일 23:43:43상당히 어려웠다... 아이디어가 매우 중요한데선택하는 책 카테고리를 늘려가기선택하는 책 수를 늘려가기최대값을 dp에 저장 ( dpi는 i종"
  },
  
  {
    "title": "백준허브(BaekjoonHub)와 LeetHub 커스텀하여 사용하기",
    "url": "/posts/%EB%B0%B1%EC%A4%80%ED%97%88%EB%B8%8CBaekjoonHub%EC%99%80-LeetHub-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/",
    "categories": "사이드, 프로젝트",
    "tags": "leetcode, 백준",
    "date": "2024-12-13 15:52:42 +0800",
    "content": "PS을 위해 여러 사이트에서 알고리즘 문제들을 푼 사람이라면 코드들을 정리해본 적이 있을것이다. 이에 백준 허브 or LeetHub를 사용하는 사람이 많다. 하지만 두 확장프로그램에는 차이점이 있어 좀 더 깔끔한 백준허브 스타일에 LeetHub를 커스텀해보고자 한다. "
  },
  
  {
    "title": "iCloud 동기화 해제 및 iCloud에서 폴더로 다운받기 오류 (Mac) (데스크탑, 문서 옮기기)",
    "url": "/posts/iCloud-%EC%97%90%EC%84%9C-%ED%8F%B4%EB%8D%94%EB%A1%9C-%EB%8B%A4%EC%9A%B4%EB%B0%9B%EA%B8%B0-%EC%98%A4%EB%A5%98-Mac/",
    "categories": "오류, 해결",
    "tags": "iCloud, mac",
    "date": "2024-12-13 14:40:09 +0800",
    "content": "맥북 사용 중 iCloud 용량때문에 동기화를 해제할 일이 생겼고, 이에 로컬에 있는 데스크톱 파일들과 로컬 파일들이 전부 사라지는 현상을 겪었다. 이를 많은 구글링을 해보아도 마땅한 해결책이 없어 나름 대안을 혼자 하루종일 시간을 갈아넣으며 찾았다.iCloud와 맥북"
  },
  
  {
    "title": "BOJ_5052_전화번호 목록 (Java)",
    "url": "/posts/BOJ5052%EC%A0%84%ED%99%94%EB%B2%88%ED%98%B8-%EB%AA%A9%EB%A1%9D-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-12-11 04:04:43 +0800",
    "content": "문제 링크 메모리: 107912 KB, 시간: 328 ms자료 구조, 정렬, 문자열, 트리, 트라이2024년 12월 11일 04:53:18두가지 방법으로 풀었다. 첫번째는 startsWith매서드, 두번째는 트라이다.startsWith() 사용 코드import java"
  },
  
  {
    "title": "BOJ_11444_피보나치 수 6 (C++)",
    "url": "/posts/BOJ11444%ED%94%BC%EB%B3%B4%EB%82%98%EC%B9%98-%EC%88%98-6-C/",
    "categories": "알고리즘",
    "tags": "C++, 백준, 알고리즘",
    "date": "2024-12-08 00:57:23 +0800",
    "content": "문제 링크 메모리: 2160 KB, 시간: 0 ms분할 정복을 이용한 거듭제곱, 수학2024년 12월 8일 00:42:23map&lt;int, int> fibo;int getFibo(int n) {    if (fibo.contains(n)) return fibon; "
  },
  
  {
    "title": "vscode CPH Judge C++20 컴파일 오류",
    "url": "/posts/vscode-CPH-Judge-C20-%EC%BB%B4%ED%8C%8C%EC%9D%BC-%EC%98%A4%EB%A5%98/",
    "categories": "오류, 해결",
    "tags": "C++, CPH, vscode",
    "date": "2024-12-08 00:54:42 +0800",
    "content": "vscode에서 Competitive Companion과 CPH Judge를 사용해 알고리즘을 푸는데 C++의 map 문법 중 C++20버전부터 사용 가능한 contains를 사용했는데 컴파일이 안되었다. 기존 C++17로 설정되어있었다. 이를 고치기 위한 여러 트러블"
  },
  
  {
    "title": "BOJ_18186_라면 사기 (Large) (Java, C++)",
    "url": "/posts/BOJ18186%EB%9D%BC%EB%A9%B4-%EC%82%AC%EA%B8%B0-Large-Java-C/",
    "categories": "알고리즘",
    "tags": "C++, Java, 백준, 알고리즘",
    "date": "2024-12-07 15:58:28 +0800",
    "content": "문제 링크 메모리: 9836 KB, 시간: 100 ms그리디 알고리즘2024년 12월 7일 16:50:43C++에서 int 대신 long long리턴 시 unsigned main으로 바꾸었다! (++새로운 지식)public class Main {\tstatic Buffe"
  },
  
  {
    "title": "BOJ_18185_라면 사기 (Small) (Java, C++)",
    "url": "/posts/BOJ18185%EB%9D%BC%EB%A9%B4-%EC%82%AC%EA%B8%B0-Small-Java-C/",
    "categories": "알고리즘",
    "tags": "C++, Java, 백준, 알고리즘",
    "date": "2024-12-07 15:55:28 +0800",
    "content": "문제 링크 메모리: 2180 KB, 시간: 0 ms그리디 알고리즘2024년 12월 7일 16:43:43이전 Skyline문제를 이 문제를 풀기 위해 공부했다. 사실상 똑같은 문젠데왜 난이도 차이가 한 티어나 차이나는지 모르겠다. 그리디 문제로 Skyline과 똑같이 풀"
  },
  
  {
    "title": "BOJ_11835_Skyline (Java, C++)",
    "url": "/posts/BOJ11835Skyline-Java-C/",
    "categories": "알고리즘",
    "tags": "C++, Java, 백준, 알고리즘",
    "date": "2024-12-07 15:14:19 +0800",
    "content": "문제 링크 메모리: 14140 KB, 시간: 104 ms다이나믹 프로그래밍, 그리디 알고리즘2024년 12월 7일 16:06:07각 위치에서 어떤 연산을 먼저 수행하는 것이 최적인지를 판단해야 한다.각 위치 i에서 현재 수 arri를 0으로 만들어야 한다. ai+1과 "
  },
  
  {
    "title": "BOJ_1981_배열에서 이동 (Java, C++)",
    "url": "/posts/BOJ1981%EB%B0%B0%EC%97%B4%EC%97%90%EC%84%9C-%EC%9D%B4%EB%8F%99/",
    "categories": "알고리즘",
    "tags": "C++, Java, 백준, 알고리즘",
    "date": "2024-12-07 04:30:17 +0800",
    "content": "문제 링크 메모리: 157272 KB, 시간: 364 ms너비 우선 탐색, 이분 탐색, 그래프 이론, 그래프 탐색2024년 12월 7일 05:28:49"
  },
  
  {
    "title": "BOJ_2179_비슷한 단어 (Java, C++)",
    "url": "/posts/BOJ2179%EB%B9%84%EC%8A%B7%ED%95%9C-%EB%8B%A8%EC%96%B4-Java-C/",
    "categories": "알고리즘",
    "tags": "C++, Java, 백준, 알고리즘",
    "date": "2024-12-06 16:19:11 +0800",
    "content": "문제 링크 메모리: 2856 KB, 시간: 0 ms자료 구조, 해시를 사용한 집합과 맵, 정렬, 문자열2024년 12월 6일 17:12:10먼저 푼 방법은 완전탐색이다. 반복문을 통해 O(N^2)에도 통과할 것 같아 바로 Java로 작성후 통과했다. 이후 좋은 풀이를 "
  },
  
  {
    "title": "BOJ_9471_피사노 주기 (C++)",
    "url": "/posts/BOJ9471%ED%94%BC%EC%82%AC%EB%85%B8-%EC%A3%BC%EA%B8%B0-C/",
    "categories": "알고리즘",
    "tags": "C++, 백준, 알고리즘",
    "date": "2024-12-06 15:35:54 +0800",
    "content": "문제 링크 메모리: 8292 KB, 시간: 4 ms브루트포스 알고리즘, 수학, 정수론2024년 12월 6일 16:24:49"
  },
  
  {
    "title": "CF_Round 991 (Div. 3)",
    "url": "/posts/CFRound-991-Div.-3/",
    "categories": "알고리즘",
    "tags": "codeforces, cp, 알고리즘",
    "date": "2024-12-06 02:18:23 +0800",
    "content": "Codeforces Round 991 (Div. 3)  Codeforces Round 991 (Div. 3)  A. Line Breaks  문제 Kostya는 라틴 알파벳으로 구성된 n개의 단어로 이루어진 텍스트를 가지고 있습니다. 그는 이 텍스트를 두 개의 띠에 써야"
  },
  
  {
    "title": "BOJ_1090_체커(Java, C++)",
    "url": "/posts/BOJ1090%EC%B2%B4%EC%BB%A4Java-C/",
    "categories": "알고리즘",
    "tags": "C++, Java, 백준, 알고리즘",
    "date": "2024-12-05 22:25:33 +0800",
    "content": "문제 링크 메모리: 2024 KB, 시간: 4 ms브루트포스 알고리즘2024년 12월 5일 23:23:08생각보다 간단하게 풀렸다... 그냥 사실상 완전탐색."
  },
  
  {
    "title": "BOJ_9007_카누 선수 (Java, C++)",
    "url": "/posts/BOJ9007%EC%B9%B4%EB%88%84-%EC%84%A0%EC%88%98/",
    "categories": "알고리즘",
    "tags": "C++, Java, 백준, 알고리즘",
    "date": "2024-12-05 01:34:21 +0800",
    "content": "문제 링크 메모리: 120284 KB, 시간: 3992 ms이분 탐색, 중간에서 만나기, 정렬2024년 12월 5일 02:28:07"
  },
  
  {
    "title": "BOJ_14400_편의점 2 (Java, C++)",
    "url": "/posts/BOJ14400%ED%8E%B8%EC%9D%98%EC%A0%90-2-Java-C/",
    "categories": "알고리즘",
    "tags": "C++, Java, 백준, 알고리즘",
    "date": "2024-12-04 16:30:36 +0800",
    "content": "문제 링크 메모리: 46920 KB, 시간: 896 ms기하학, 수학, 정렬2024년 12월 4일 17:28:10"
  },
  
  {
    "title": "BOJ_2110_공유기 설치 (C++, Java)",
    "url": "/posts/BOJ2110%EA%B3%B5%EC%9C%A0%EA%B8%B0-%EC%84%A4%EC%B9%98-C-Java/",
    "categories": "알고리즘",
    "tags": "C++, Java, 백준, 알고리즘",
    "date": "2024-12-03 01:59:55 +0800",
    "content": "문제 링크 메모리: 31000 KB, 시간: 280 ms이분 탐색, 매개 변수 탐색2024년 12월 3일 02:52:41집 간격 res로 이분탐색. 두가지 언어로 푸는데 50분정도 걸린 것 같다."
  },
  
  {
    "title": "Java to C++ ",
    "url": "/posts/Java-to-C/",
    "categories": "공부",
    "tags": "C++, Java",
    "date": "2024-12-02 17:26:27 +0800",
    "content": "개발 공부를 하다보면 다른 개발언어로 작성된 코드를 볼 일도 많고 특히 해외 사이트에서 discussion을 볼 일이 잦았는데 C/C++ 코드를 볼 일이 상당히 많았다. 자료구조 위주로 비교하며 자바를 C++로 어떻게 작성되하지 알아보고자 공부하였다.  데이터 유형 및"
  },
  
  {
    "title": "BOJ_17510_Bigger Sokoban 40k",
    "url": "/posts/BOJ17510/",
    "categories": "알고리즘",
    "tags": "백준, 알고리즘",
    "date": "2024-12-02 02:14:42 +0800",
    "content": "문제 링크 메모리: 4528 KB, 시간: 0 ms해 구성하기2024년 12월 2일 03:01:22문제Sokoban is a famous puzzle game, where the player moves around in the $N \\times M$-size grid"
  },
  
  {
    "title": "BOJ_14453_Hoof, Paper, Scissors (Silver) (C++)",
    "url": "/posts/BOJ14453Hoof-Paper-Scissors-Silver-C/",
    "categories": "알고리즘",
    "tags": "C++, 백준, 알고리즘",
    "date": "2024-12-01 22:00:18 +0800",
    "content": "문제 링크 메모리: 3808 KB, 시간: 4 ms다이나믹 프로그래밍, 누적 합2024년 12월 1일 22:54:53"
  },
  
  {
    "title": "Java-Competitive-Programming (feat. Codeforces)",
    "url": "/posts/Java-Competitive-Programming-feat.-Codeforces/",
    "categories": "알고리즘",
    "tags": "codeforces, cp",
    "date": "2024-12-01 19:35:48 +0800",
    "content": "다음과 같은 알고리즘 대회/코딩 테스트 백준, 코드포스 등의 온라인 저지 대량의 데이터를 빠르게 처리해야 하는 상황 수학적 계산이 많이 필요한 문제 "
  },
  
  {
    "title": "C++ 시작하기 (VS Code + MinGW)",
    "url": "/posts/C-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0-VS-Code-MinGW/",
    "categories": "공부",
    "tags": "C++",
    "date": "2024-12-01 16:38:20 +0800",
    "content": "C++ 개발 환경을 세팅해보자!Visual Studio Code 설치VS Code용 C/C++ 확장 프로그램 설치MSYS2 를 통해 최신 버전의 MinGW-w64를 설치하자. 여기에는 최신 네이티브 빌드의 GCC, MinGW-w64 및 기타 유용한 C++ 도구와 라이브"
  },
  
  {
    "title": "BOJ_2015_수들의 합 4 (Java)",
    "url": "/posts/BOJ2015%EC%88%98%EB%93%A4%EC%9D%98-%ED%95%A9-4-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-11-25 21:34:00 +0800",
    "content": "문제 링크 메모리: 35308 KB, 시간: 352 ms자료 구조, 해시를 사용한 집합과 맵, 누적 합, 트리를 사용한 집합과 맵2024년 11월 25일 22:31:56"
  },
  
  {
    "title": "BOJ_14568_2017 연세대학교 프로그래밍 경시대회 (Java)",
    "url": "/posts/BOJ145682017-%EC%97%B0%EC%84%B8%EB%8C%80%ED%95%99%EA%B5%90-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%EA%B2%BD%EC%8B%9C%EB%8C%80%ED%9A%8C-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-11-25 12:31:37 +0800",
    "content": "문제 링크 메모리: 14276 KB, 시간: 108 ms사칙연산, 브루트포스 알고리즘, 수학2024년 11월 25일 13:27:46단순한 완전탐색 수학문제."
  },
  
  {
    "title": "BOJ_22988_재활용 캠페인 (Java)",
    "url": "/posts/BOJ22988%EC%9E%AC%ED%99%9C%EC%9A%A9-%EC%BA%A0%ED%8E%98%EC%9D%B8-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-11-22 22:57:36 +0800",
    "content": "[Gold II] 재활용 캠페인 - 22988  문제 링크  성능 요약  메모리: 38760 KB, 시간: 492 ms  분류  그리디 알고리즘, 정렬, 두 포인터  제출 일자  2024년 11월 22일 23:49:58  문제 설명  고등학생 때였다. 친구의 손에 이끌"
  },
  
  {
    "title": "Gitlab 작업을 Github으로 옮기기 ( 커밋 내역 포함 미러링)",
    "url": "/posts/Gitlab-%EC%9E%91%EC%97%85%EC%9D%84-Github%EC%9C%BC%EB%A1%9C-%EC%98%AE%EA%B8%B0%EA%B8%B0-%EC%BB%A4%EB%B0%8B-%EB%82%B4%EC%97%AD-%ED%8F%AC%ED%95%A8-%EB%AF%B8%EB%9F%AC%EB%A7%81/",
    "categories": "프로젝트",
    "tags": "git, 프로젝트",
    "date": "2024-11-22 09:54:38 +0800",
    "content": "이번 프로젝트는 큰 파일이 없는 경우였기 때문에 간단한 미러링으로 옮길 수 있었다. 용량이 큰 파일은 다른 방법을 사용해야한다. 매우 귀찮고 복잡하기 때문에 최대한 git에 커밋할 땐 용량이 큰 파일은 지양하자.(경험담)ps. 파일을 지운다고 해서 다시 옮길 수 있는 "
  },
  
  {
    "title": "BOJ_1946_신입사원 (Java)",
    "url": "/posts/BOJ1946%EC%8B%A0%EC%9E%85%EC%82%AC%EC%9B%90-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-11-21 20:48:39 +0800",
    "content": "[Silver I] 신입 사원 - 1946  문제 링크  성능 요약  메모리: 300128 KB, 시간: 868 ms  분류  그리디 알고리즘, 정렬  제출 일자  2024년 11월 21일 18:01:37  문제 설명  언제나 최고만을 지향하는 굴지의 대기업 진영 주식"
  },
  
  {
    "title": "BOJ_14247_나무 자르기 (Java)",
    "url": "/posts/BOJ14247%EB%82%98%EB%AC%B4-%EC%9E%90%EB%A5%B4%EA%B8%B0-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-11-21 15:56:01 +0800",
    "content": "문제 링크 메모리: 29544 KB, 시간: 400 ms그리디 알고리즘, 정렬2024년 11월 21일 16:51:00"
  },
  
  {
    "title": "BOJ_2217_로프 (Java)",
    "url": "/posts/BOJ2217%EB%A1%9C%ED%94%84-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-11-21 14:00:56 +0800",
    "content": "문제 링크 메모리: 29816 KB, 시간: 400 ms그리디 알고리즘, 수학, 정렬2024년 11월 21일 14:54:10간단한 그리디 및 정렬 문제다. 무거운 하중을 들 수 있는 로프부터 사용하며 그때그때 각 로프별 들 수 있는 최소 하중을 계산해 사용한 로프 개수"
  },
  
  {
    "title": "BOJ_1194_달이 차오른다, 가자 (Java)",
    "url": "/posts/BOJ1194%EB%8B%AC%EC%9D%B4-%EC%B0%A8%EC%98%A4%EB%A5%B8%EB%8B%A4-%EA%B0%80%EC%9E%90-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-11-21 10:15:17 +0800",
    "content": "[Gold I] 달이 차오른다, 가자. - 1194  문제 링크  성능 요약  메모리: 16388 KB, 시간: 128 ms  분류  너비 우선 탐색, 비트마스킹, 그래프 이론, 그래프 탐색  제출 일자  2024년 11월 21일 11:05:29  문제 설명  지금 민"
  },
  
  {
    "title": "BOJ_21815_Portals (Java)",
    "url": "/posts/BOJ21815Portals-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-11-20 17:12:24 +0800",
    "content": "[Platinum III] Portals - 21815  문제 링크  성능 요약  메모리: 68080 KB, 시간: 756 ms  분류  그래프 이론, 최소 스패닝 트리  제출 일자  2024년 11월 20일 18:05:31  문제 설명 "
  },
  
  {
    "title": "BOJ_2673_교차하지 않는 원의 현들의 최대 집합 (Java)",
    "url": "/posts/BOJ2673%EA%B5%90%EC%B0%A8%ED%95%98%EC%A7%80-%EC%95%8A%EB%8A%94-%EC%9B%90%EC%9D%98-%ED%98%84%EB%93%A4%EC%9D%98-%EC%B5%9C%EB%8C%80-%EC%A7%91%ED%95%A9/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-11-20 13:42:23 +0800",
    "content": "문제 링크 메모리: 12056 KB, 시간: 84 ms다이나믹 프로그래밍2024년 11월 20일 14:36:19"
  },
  
  {
    "title": "BOJ_16235_나무 제테크 (Java)",
    "url": "/posts/BOJ16235%EB%82%98%EB%AC%B4-%EC%A0%9C%ED%85%8C%ED%81%AC-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-11-19 12:24:36 +0800",
    "content": "문제 링크 메모리: 298368 KB, 시간: 732 ms자료 구조, 구현, 시뮬레이션2024년 11월 19일 13:12:13"
  },
  
  {
    "title": "BOJ_11694_님 게임 (Java)",
    "url": "/posts/BOJ11694%EB%8B%98-%EA%B2%8C%EC%9E%84-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-11-18 14:54:52 +0800",
    "content": "문제 링크 메모리: 14288 KB, 시간: 108 ms게임 이론, 스프라그–그런디 정리2024년 11월 18일 15:51:18"
  },
  
  {
    "title": "BOJ_11868_님 게임 2 (Java)",
    "url": "/posts/BOJ11868%EB%8B%98-%EA%B2%8C%EC%9E%84-2-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-11-18 13:43:10 +0800",
    "content": "문제 링크 메모리: 14236 KB, 시간: 108 ms게임 이론, 스프라그–그런디 정리2024년 11월 18일 14:39:39처음 접해보는 스프라그-그런디 정리를 사용했다. 재미있는 애드혹 문제풀이인 것 같다."
  },
  
  {
    "title": "BOJ_21818_Do You Know Your ABCs?",
    "url": "/posts/BOJ21818Do-You-Know-Your-ABCs/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-11-18 03:05:44 +0800",
    "content": "문제 링크 메모리: 21520 KB, 시간: 204 ms브루트포스 알고리즘, 구현, 수학2024년 11월 18일 03:51:48For each test case, output the number of triples $(A,B,C)$ that are consistent "
  },
  
  {
    "title": "BOJ_19942_다이어트 (Java)",
    "url": "/posts/BOJ19942%EB%8B%A4%EC%9D%B4%EC%96%B4%ED%8A%B8-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-11-14 15:41:54 +0800",
    "content": "문제 링크 메모리: 19636 KB, 시간: 156 ms백트래킹, 브루트포스 알고리즘2024년 11월 14일 16:29:06예를 들어, 식재료 1, 3, 5를 선택하면 영양분은 100, 145, 130, 10으로 조건을 만족하지만 가격은 270이 된다. 대신 2, 3,"
  },
  
  {
    "title": "BOJ_16884_나이트 게임 (Java)",
    "url": "/posts/BOJ16884%EB%82%98%EC%9D%B4%ED%8A%B8-%EA%B2%8C%EC%9E%84-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-11-14 08:04:53 +0800",
    "content": "문제 링크 메모리: 14412 KB, 시간: 104 ms애드 혹, 게임 이론2024년 11월 13일 20:50:05점 대칭으로 패를 놓을 경우 후공이 항상 이길 수 있다. 보드의 크기가 짝수면 성립하지만 홀수일 경우 점대칭의 중심이 1+ n/2, 1 + n/2에 존재하"
  },
  
  {
    "title": "PGMS_사칙연산 (Java)",
    "url": "/posts/PGMS%EC%82%AC%EC%B9%99%EC%97%B0%EC%82%B0-Java/",
    "categories": "알고리즘",
    "tags": "Java, 알고리즘, 프로그래머스",
    "date": "2024-11-12 10:32:09 +0800",
    "content": "문제 링크 메모리: 52 MB, 시간: 0.96 ms코딩테스트 연습 > 동적계획법（Dynamic Programming）정확성: 55.6효율성: 44.4합계: 100.0 / 100.02024년 11월 12일 11:25:18"
  },
  
  {
    "title": "BOJ_2170_선 긋기 (Java)",
    "url": "/posts/BOJ2170%EC%84%A0-%EA%B8%8B%EA%B8%B0-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-11-11 23:49:38 +0800",
    "content": "문제 링크 메모리: 280852 KB, 시간: 2268 ms정렬, 스위핑2024년 11월 12일 00:38:46선을 긋는 경우가 두가지 있다. 연결될때/연결되지 않을 때연결되면 오른쪽 max값만 갱신해가면되고 끊어지면 끊어지기 전 길이까지 저장하고 (더해주고) 다시 새"
  },
  
  {
    "title": "BOJ_2792_보석 상자 (Java)",
    "url": "/posts/BOJ2792%EB%B3%B4%EC%84%9D-%EC%83%81%EC%9E%90-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-11-10 15:23:40 +0800",
    "content": "문제 링크 메모리: 34716 KB, 시간: 320 ms이분 탐색, 매개 변수 탐색2024년 11월 10일 16:08:43"
  },
  
  {
    "title": "PGMS_대장균 크기에 따라 분류하기 (2) - SQL",
    "url": "/posts/PGMS%EB%8C%80%EC%9E%A5%EA%B7%A0-%ED%81%AC%EA%B8%B0%EC%97%90-%EB%94%B0%EB%9D%BC-%EB%B6%84%EB%A5%98%ED%95%98%EA%B8%B0-2-SQL/",
    "categories": "SQL",
    "tags": "sql, 프로그래머스",
    "date": "2024-11-09 16:33:29 +0800",
    "content": "문제 링크 메모리: undefined, 시간: 코딩테스트 연습 > SELECT합계: 100.0 / 100.02024년 11월 09일 17:30:00출처: 프로그래머스 코딩 테스트 연습, https&#x3A;//school.programmers.co.kr/learn/ch"
  },
  
  {
    "title": "BOJ_17307_색깔 통일하기 (Java)",
    "url": "/posts/BOJ17307%EC%83%89%EA%B9%94-%ED%86%B5%EC%9D%BC%ED%95%98%EA%B8%B0-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-11-08 17:10:21 +0800",
    "content": "문제 링크 메모리: 49200 KB, 시간: 432 ms누적 합2024년 11월 8일 18:05:43"
  },
  
  {
    "title": "BOJ_10972_다음 순열(Java)",
    "url": "/posts/BOJ10972%EB%8B%A4%EC%9D%8C-%EC%88%9C%EC%97%B4Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-11-06 05:10:52 +0800",
    "content": "문제 링크 메모리: 17140 KB, 시간: 176 ms조합론, 수학2024년 11월 6일 06:06:48"
  },
  
  {
    "title": "BOJ_1011_Fly me to the Alpha Centauri(Java)",
    "url": "/posts/BOJ1011Fly-me-to-the-Alpha-Centauri/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-11-05 11:57:17 +0800",
    "content": "문제 링크 메모리: 15812 KB, 시간: 112 ms수학2024년 11월 5일 12:37:39규칙을 찾아내서 풀었다!"
  },
  
  {
    "title": "BOJ_19590_비드맨 (Java)",
    "url": "/posts/BOJ19590%EB%B9%84%EB%93%9C%EB%A7%A8-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-11-03 15:21:53 +0800",
    "content": "문제 링크 메모리: 28228 KB, 시간: 268 ms그리디 알고리즘2024년 11월 3일 16:10:57"
  },
  
  {
    "title": "BOJ_1600_말이 되고픈 원숭이 (Java)",
    "url": "/posts/BOJ1600%EB%A7%90%EC%9D%B4-%EB%90%98%EA%B3%A0%ED%94%88-%EC%9B%90%EC%88%AD%EC%9D%B4/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-11-02 21:58:11 +0800",
    "content": "문제 링크 메모리: 93616 KB, 시간: 576 ms너비 우선 탐색, 그래프 이론, 그래프 탐색2024년 11월 2일 22:56:49"
  },
  
  {
    "title": "PGMS_산 모양 타일링",
    "url": "/posts/PGMS%EC%82%B0-%EB%AA%A8%EC%96%91-%ED%83%80%EC%9D%BC%EB%A7%81/",
    "categories": "알고리즘",
    "tags": "Java, 알고리즘, 프로그래머스",
    "date": "2024-10-31 03:35:10 +0800",
    "content": "문제 링크 메모리: 92.4 MB, 시간: 8.65 ms코딩테스트 연습 > 2024 KAKAO WINTER INTERNSHIP정확성: 100.0합계: 100.0 / 100.02024년 10월 31일 04:31:55출처: 프로그래머스 코딩 테스트 연습, https&#x3"
  },
  
  {
    "title": "BOJ_2437_저울",
    "url": "/posts/BOJ2437%EC%A0%80%EC%9A%B8/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-10-31 01:03:11 +0800",
    "content": "문제 링크 메모리: 14788 KB, 시간: 112 ms그리디 알고리즘, 정렬2024년 10월 31일 01:59:38"
  },
  
  {
    "title": "BOJ_2580_스도쿠",
    "url": "/posts/BOJ2580%EC%8A%A4%EB%8F%84%EC%BF%A0/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-10-30 08:34:15 +0800",
    "content": "문제 링크 메모리: 17948 KB, 시간: 268 ms백트래킹2024년 10월 30일 09:26:35"
  },
  
  {
    "title": "PGMS_특정 세대의 대장균 찾기",
    "url": "/posts/PGMS%ED%8A%B9%EC%A0%95-%EC%84%B8%EB%8C%80%EC%9D%98-%EB%8C%80%EC%9E%A5%EA%B7%A0-%EC%B0%BE%EA%B8%B0/",
    "categories": "SQL",
    "tags": "sql, 프로그래머스",
    "date": "2024-10-29 20:01:07 +0800",
    "content": "문제 링크 메모리: undefined, 시간: 코딩테스트 연습 > SELECT합계: 100.0 / 100.02024년 10월 29일 20:52:35출처: 프로그래머스 코딩 테스트 연습, https&#x3A;//school.programmers.co.kr/learn/ch"
  },
  
  {
    "title": "BOJ_2250_트리의 높이와 너비",
    "url": "/posts/BOJ2250%ED%8A%B8%EB%A6%AC%EC%9D%98-%EB%86%92%EC%9D%B4%EC%99%80-%EB%84%88%EB%B9%84/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-10-29 19:57:21 +0800",
    "content": "문제 링크 메모리: 23036 KB, 시간: 284 ms깊이 우선 탐색, 그래프 이론, 그래프 탐색, 트리2024년 10월 29일 07:50:45트리의 행을 dfs로 찾아가며 부여하고 depth를 레벨로 생각하였다."
  },
  
  {
    "title": "Pycharm and FastAPI - (2)",
    "url": "/posts/Pycharm-and-FastAPI-2/",
    "categories": "",
    "tags": "FastAPI, pycharm, python",
    "date": "2024-10-29 19:54:19 +0800",
    "content": "이어서 FastAPI 기본 학습 기록입니다"
  },
  
  {
    "title": "Pycharm and FastAPI",
    "url": "/posts/Pycharm-and-FastAPI/",
    "categories": "",
    "tags": "FastAPI, pycharm, python",
    "date": "2024-10-29 13:05:32 +0800",
    "content": "fastapi를 pycharm을 통해 학습해봅시다실습환경 : Mac(M3), IDE : Pycharm먼저 python을 brew를 통해 다운받는다.만약 brew가 없다면brew로 다운로드pycharm 프로젝트 생성 후 requirements.txt를 생성 및 작성이제 "
  },
  
  {
    "title": "Pytorch로 시작하는 딥러닝",
    "url": "/posts/Pytorch%EB%A1%9C-%EC%8B%9C%EC%9E%91%ED%95%98%EB%8A%94-%EB%94%A5%EB%9F%AC%EB%8B%9D-1/",
    "categories": "머신러닝",
    "tags": "DL, ML, PyTorch",
    "date": "2024-10-22 20:15:27 +0800",
    "content": "Pytorch와 딥러닝 공부를 시작하며 기록하고자 한다.자연어 데이터인 코퍼스(corpus) 수집다양한 출처(음성 데이터, 웹 크롤링, 리뷰 등)와 형식(txt, csv, xml 등)의 텍스트 데이터 확보탐색적 데이터 분석(EDA) 수행데이터 구조, 노이즈, 변수 특성"
  },
  
  {
    "title": "BOJ_16724_피리 부는 사나이",
    "url": "/posts/BOJ16724%ED%94%BC%EB%A6%AC-%EB%B6%80%EB%8A%94-%EC%82%AC%EB%82%98%EC%9D%B4/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-10-22 04:40:36 +0800",
    "content": "문제 링크 메모리: 65212 KB, 시간: 432 ms자료 구조, 깊이 우선 탐색, 분리 집합, 그래프 이론, 그래프 탐색2024년 10월 22일 05:38:59유니온 파인드로 풀었다."
  },
  
  {
    "title": "BOJ_1407_2로 몇 번 나누어질까",
    "url": "/posts/BOJ14072%EB%A1%9C-%EB%AA%87-%EB%B2%88-%EB%82%98%EB%88%84%EC%96%B4%EC%A7%88%EA%B9%8C/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-10-22 04:11:50 +0800",
    "content": "문제 링크 메모리: 14312 KB, 시간: 100 ms수학2024년 10월 22일 05:09:501의배수 - 2의배수 - 4의배수 이런식으로 좁혀 찾아나가고 이렇게 새로 찾으면 /2를 더해주면 된다. 4를 찾으면 2를 더했으므로 나머지 2 더해주기 이런식."
  },
  
  {
    "title": "Artillery 부하 테스트",
    "url": "/posts/Artillery-%EB%B6%80%ED%95%98-%ED%85%8C%EC%8A%A4%ED%8A%B8/",
    "categories": "프로젝트",
    "tags": "",
    "date": "2024-10-14 04:00:30 +0800",
    "content": "Spring 백엔드 서버의 부하테스트를 진행하기 위헤 Artillery라는 라이브러리를 사용했습니다. VS Code로 간단하게 테스트 할 수 있기에 좋은 것 같습니다. Jmeter로 테스트 하실 분들은 패스해주세요  Artillery 테스트 실행 가이드 1. 백엔드 서"
  },
  
  {
    "title": "BOJ_17387_선분 교차 2 (Java)",
    "url": "/posts/BOJ17387%EC%84%A0%EB%B6%84-%EA%B5%90%EC%B0%A8-2-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-10-14 04:00:07 +0800",
    "content": "문제 링크 메모리: 14264 KB, 시간: 100 ms많은 조건 분기, 기하학, 선분 교차 판정2024년 10월 14일 04:18:15"
  },
  
  {
    "title": "docker compose 로 Kafka + ELK stack 사용",
    "url": "/posts/docker-compose-%EB%A1%9C-Kafka-ELK-stack-%EC%82%AC%EC%9A%A9/",
    "categories": "프로젝트",
    "tags": "ELK, docker, kafka",
    "date": "2024-10-09 16:28:51 +0800",
    "content": "여러 채용 공고 및 회사별 기술 스택을 보며 대부분 MSA아키텍처를 채택하며 이를 분석하는데 ELK Stack을 사용하는것을 보고 파이프라인을 구현해보았습니다.  ELK 스택 파이프라인  먼저 전체적인 파이프라인 및 디렉토리 구조입니다. ( 터미널에서 tree 혹은 t"
  },
  
  {
    "title": "BOJ_2467_용액 (Java)",
    "url": "/posts/BOJ2467%EC%9A%A9%EC%95%A1-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-10-06 07:59:31 +0800",
    "content": "문제 링크 메모리: 28520 KB, 시간: 332 ms이분 탐색, 두 포인터2024년 10월 6일 08:58:06"
  },
  
  {
    "title": "BOJ_9655_돌게임 (Java)",
    "url": "/posts/BOJ9655%EB%8F%8C%EA%B2%8C%EC%9E%84-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-10-02 08:35:07 +0800",
    "content": "문제 링크 메모리: 14304 KB, 시간: 104 ms다이나믹 프로그래밍, 게임 이론, 수학2024년 10월 2일 09:28:31애드혹 문제라고 생각됐다. DP로도 풀 순 있지만 문제 답의 규칙성이 보여 그냥 규칙성으로 풀었다.DP로 푼다면 N번째에 N-1상태와 N-"
  },
  
  {
    "title": "BOJ_11054_가장 긴 바이토닉 부분수열 (Java)",
    "url": "/posts/BOJ11054%EA%B0%80%EC%9E%A5-%EA%B8%B4-%EB%B0%94%EC%9D%B4%ED%86%A0%EB%8B%89-%EB%B6%80%EB%B6%84%EC%88%98%EC%97%B4-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-10-02 06:46:47 +0800",
    "content": "문제 링크 메모리: 15564 KB, 시간: 132 ms다이나믹 프로그래밍2024년 10월 2일 07:44:13가장 긴 증가하는 부분수열을 풀 줄 알면 쉽게 풀 수 있다. 꺾이는 부분을 생각하면 되는데 이때부턴 감소하므로 그냥 응용해서 한 점에서 양쪽으로 반대로 구하고"
  },
  
  {
    "title": "BOJ_6549_히스토그램에서 가장 큰 직사각형(Java)",
    "url": "/posts/BOJ6549%ED%9E%88%EC%8A%A4%ED%86%A0%EA%B7%B8%EB%9E%A8%EC%97%90%EC%84%9C-%EA%B0%80%EC%9E%A5-%ED%81%B0-%EC%A7%81%EC%82%AC%EA%B0%81%ED%98%95Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-09-30 02:09:42 +0800",
    "content": "문제 링크 메모리: 56948 KB, 시간: 968 ms자료 구조, 분할 정복, 세그먼트 트리, 스택2024년 9월 30일 02:59:54먼저 세그먼트 트리를 응용하는 것이 어려웠다. 기존 구간합, 구간 곱과 달리 넣는 값이 어려웠다.각 구간에 최소높이를 넣으려 했는데"
  },
  
  {
    "title": "BOJ_2631_줄 세우기 (Java)",
    "url": "/posts/BOJ2631%EC%A4%84-%EC%84%B8%EC%9A%B0%EA%B8%B0-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-09-25 05:12:42 +0800",
    "content": "문제 링크 메모리: 14288 KB, 시간: 100 ms다이나믹 프로그래밍2024년 9월 25일 06:10:48수열이 주어지면 여기서 어떤 정수가 가장 오름차순으로 증가하는 수열을 이루는지 찾고 나머지 숫자들은 뽑아서 알맞게 넣어준다고 생각하면된다.LIS 알고리즘 관련"
  },
  
  {
    "title": "BOJ_7662_이중 우선순위 큐(Java)",
    "url": "/posts/BOJ7662%EC%9D%B4%EC%A4%91-%EC%9A%B0%EC%84%A0%EC%88%9C%EC%9C%84-%ED%81%90Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-09-25 04:43:17 +0800",
    "content": "문제 링크 메모리: 451072 KB, 시간: 2648 ms자료 구조, 우선순위 큐, 트리를 사용한 집합과 맵2024년 9월 25일 05:27:29O(N) 으로 최대 최소 우선순위큐에서 찾아 삭제하면 시간초과가 발생, 지울 값을 map별로 저장해 key를 통해 O(1)"
  },
  
  {
    "title": "BOJ_16934_게임 닉네임 (Java)",
    "url": "/posts/BOJ16934%EA%B2%8C%EC%9E%84-%EB%8B%89%EB%84%A4%EC%9E%84-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-09-22 19:13:15 +0800",
    "content": "문제 링크 메모리: 85120 KB, 시간: 508 ms자료 구조, 해시를 사용한 집합과 맵, 문자열, 트리, 트라이2024년 9월 22일 20:01:14기본적인 트라이 사용 문제다. 먼저 트라이라는 구조에 대해 공부 후 적용해보았다.트리 구조로 일치하는 항목에 접근하"
  },
  
  {
    "title": "PGMS_보호소에서 중성화한 동물",
    "url": "/posts/PGMS%EB%B3%B4%ED%98%B8%EC%86%8C%EC%97%90%EC%84%9C-%EC%A4%91%EC%84%B1%ED%99%94%ED%95%9C-%EB%8F%99%EB%AC%BC/",
    "categories": "SQL",
    "tags": "sql, 프로그래머스",
    "date": "2024-09-22 17:42:49 +0800",
    "content": "문제 링크 메모리: 0.0 MB, 시간: 0.00 ms코딩테스트 연습 > JOINEmpty2024년 09월 22일 18:24:09출처: 프로그래머스 코딩 테스트 연습, https&#x3A;//school.programmers.co.kr/learn/challengesID"
  },
  
  {
    "title": "BOJ_2252_줄 세우기(Java)",
    "url": "/posts/BOJ2252%EC%A4%84-%EC%84%B8%EC%9A%B0%EA%B8%B0Java-r9p49ffk/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-09-22 16:06:42 +0800",
    "content": "[Gold III] 줄 세우기 - 2252  문제 링크  성능 요약  메모리: 51328 KB, 시간: 456 ms  분류  방향 비순환 그래프, 그래프 이론, 위상 정렬  제출 일자  2024년 9월 8일 23:19:24  문제 설명  N명의 학생들을 키 순서대로 줄"
  },
  
  {
    "title": "BOJ_2162_선분 그룹 (Java)",
    "url": "/posts/BOJ2162%EC%84%A0%EB%B6%84-%EA%B7%B8%EB%A3%B9-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-09-22 13:23:56 +0800",
    "content": "문제 링크 메모리: 19176 KB, 시간: 368 ms자료 구조, 분리 집합, 기하학, 선분 교차 판정2024년 9월 22일 14:17:57풀이 방법은 쉽게 떠올렸지만 케이스 처리 부분에서 생각을 오래했던 문제. 일자로 두 선분이 나란히 있을때 어떻게 처리해야할 지 "
  },
  
  {
    "title": "JWT 학습",
    "url": "/posts/JWT-%ED%95%99%EC%8A%B5/",
    "categories": "공부",
    "tags": "JWT, Java",
    "date": "2024-09-22 12:13:08 +0800",
    "content": " "
  },
  
  {
    "title": "BOJ_11967_불켜기 (Java)",
    "url": "/posts/BOJ11967%EB%B6%88%EC%BC%9C%EA%B8%B0-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-09-21 09:15:00 +0800",
    "content": "문제 링크 메모리: 26468 KB, 시간: 248 ms너비 우선 탐색, 그래프 이론, 그래프 탐색2024년 9월 21일 10:11:57Area 클래스:(r,c) 좌표를 나타내는 클래스로, HashMap에서 키로 사용하기 위해 hashCode와 equals 메서드를 오"
  },
  
  {
    "title": "백준 문제 풀이 세팅 템플릿",
    "url": "/posts/%EB%B0%B1%EC%A4%80-%EB%AC%B8%EC%A0%9C-%ED%92%80%EC%9D%B4-%EC%84%B8%ED%8C%85-%ED%85%9C%ED%94%8C%EB%A6%BF/",
    "categories": "알고리즘",
    "tags": "C++, Java, 백준, 알고리즘",
    "date": "2024-09-21 08:51:38 +0800",
    "content": "Eclipse에서 백준 문제를 풀 때 매번 Main함수부터 입출력까지 입력하는 부분이 귀찮아서 자동화했습니다. 이 안에 자주 사용하는 main 도 볼 수 있을것입니다. 저의 경우 다음과 같이 매번 작성하기 때문에 다음과 같이 만들어두었습니다.${cursor}은 템플릿이"
  },
  
  {
    "title": "BOJ_13397_구간 나누기 2 (Java)",
    "url": "/posts/BOJ13397%EA%B5%AC%EA%B0%84-%EB%82%98%EB%88%84%EA%B8%B0-2-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-09-19 01:05:08 +0800",
    "content": "문제 링크 메모리: 14940 KB, 시간: 132 ms이분 탐색, 매개 변수 탐색2024년 9월 19일 01:56:49"
  },
  
  {
    "title": "PGMS_오랜 기간 보호한 동물(2) (SQL)",
    "url": "/posts/PGMS%EC%98%A4%EB%9E%9C-%EA%B8%B0%EA%B0%84-%EB%B3%B4%ED%98%B8%ED%95%9C-%EB%8F%99%EB%AC%BC2-SQL/",
    "categories": "SQL",
    "tags": "sql, 프로그래머스",
    "date": "2024-09-18 23:50:52 +0800",
    "content": "문제 링크 메모리: 0.0 MB, 시간: 0.00 ms코딩테스트 연습 > String， DateEmpty2024년 09월 19일 00:49:28출처: 프로그래머스 코딩 테스트 연습, https&#x3A;//school.programmers.co.kr/learn/chal"
  },
  
  {
    "title": "BOJ_1167_트리의 지름 (Java)",
    "url": "/posts/BOJ1167%ED%8A%B8%EB%A6%AC%EC%9D%98-%EC%A7%80%EB%A6%84-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-09-17 23:59:03 +0800",
    "content": "문제 링크 메모리: 87836 KB, 시간: 764 ms깊이 우선 탐색, 그래프 이론, 그래프 탐색, 트리2024년 9월 18일 00:52:01 생각의 전환이 필요했다. "
  },
  
  {
    "title": "BOJ_17386_선분 교차 1 ( Java )",
    "url": "/posts/BOJ17386%EC%84%A0%EB%B6%84-%EA%B5%90%EC%B0%A8-1-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-09-17 10:04:58 +0800",
    "content": "문제 링크 메모리: 14284 KB, 시간: 100 ms기하학, 선분 교차 판정2024년 9월 17일 10:58:52CCW알고리즘을 이용해 풀었다. CCW 알고리즘이란 두 벡터의 스칼라 곱을 계산하는방법을 응용한 것인데 두 벡터 u, v 의 스칼라 곱 u x v 는 |"
  },
  
  {
    "title": "BOJ_2143_두 배열의 합 (Java)",
    "url": "/posts/BOJ2143%EB%91%90-%EB%B0%B0%EC%97%B4%EC%9D%98-%ED%95%A9-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-09-16 23:41:31 +0800",
    "content": "문제 링크 메모리: 73020 KB, 시간: 340 ms이분 탐색, 자료 구조, 해시를 사용한 집합과 맵, 누적 합2024년 9월 17일 00:35:10누적합으로 문제를 풀어보았다.누적합 배열 a, b, 에서 i까지의 값은 1~i까지의 합을 나타낸다.이후 HashMap"
  },
  
  {
    "title": "BOJ_2166_다각형의 면적 (Java)",
    "url": "/posts/BOJ2166%EB%8B%A4%EA%B0%81%ED%98%95%EC%9D%98-%EB%A9%B4%EC%A0%81-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-09-09 01:12:00 +0800",
    "content": "문제 링크 메모리: 19708 KB, 시간: 184 ms기하학, 다각형의 넓이2024년 9월 9일 02:08:44"
  },
  
  {
    "title": "BOJ_1799_비숍 (Java)",
    "url": "/posts/BOJ1799%EB%B9%84%EC%88%8D-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-09-09 00:36:09 +0800",
    "content": "문제 링크 메모리: 18572 KB, 시간: 276 ms백트래킹2024년 9월 9일 01:33:43  검은 칸과 흰 칸을 나누어 계산 -> 절대 겹치지 않으므로  첫 검은칸 dfs, 첫 흰칸 dfs  이때, 각 칸에서 대각선으로 쭉 진행, 비숍 놓은칸은 2로."
  },
  
  {
    "title": "BOJ_9252_LCS 2 (Java)",
    "url": "/posts/BOJ9252LCS-2-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-09-08 22:57:51 +0800",
    "content": "문제 링크 메모리: 23060 KB, 시간: 140 ms다이나믹 프로그래밍2024년 9월 8일 23:49:15"
  },
  
  {
    "title": "BOJ_2252_줄 세우기(Java)",
    "url": "/posts/BOJ2252%EC%A4%84-%EC%84%B8%EC%9A%B0%EA%B8%B0Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-09-08 22:21:38 +0800",
    "content": "문제 링크 메모리: 51328 KB, 시간: 456 ms방향 비순환 그래프, 그래프 이론, 위상 정렬2024년 9월 8일 23:19:24"
  },
  
  {
    "title": "Windows 환경변수 설정시 재부팅 하지 않기",
    "url": "/posts/Windows-%ED%99%98%EA%B2%BD%EB%B3%80%EC%88%98-%EC%84%A4%EC%A0%95%EC%8B%9C-%EC%9E%AC%EB%B6%80%ED%8C%85-%ED%95%98%EC%A7%80-%EC%95%8A%EA%B8%B0/",
    "categories": "오류, 해결",
    "tags": "settings, 환경설정",
    "date": "2024-09-08 21:04:29 +0800",
    "content": "개발자로서 컴퓨터 환경 세팅시 환경변수를 설정하는 것은 프로그램을 설치하면 거의 필수적이다. 이때 실행파일이 아닌 시스템 관련 설정이라면 재부팅을 해야 적용이 되는데 이를 명령 프롬프트창을 통해 재부팅을 건너뛸 수 있다.  먼저 환경 변수를 설정한다 환경변수 설정 Wi"
  },
  
  {
    "title": "BOJ_1766_문제집 (Java)",
    "url": "/posts/BOJ1766%EB%AC%B8%EC%A0%9C%EC%A7%91-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-09-04 23:37:36 +0800",
    "content": "문제 링크 메모리: 49020 KB, 시간: 488 ms방향 비순환 그래프, 자료 구조, 그래프 이론, 우선순위 큐, 위상 정렬2024년 9월 5일 00:35:03선행 문제가 필요한 문제들을 진입차수 1 증가시키면서 dfs로 차례대로 풀면서 진입차수 0인 문제 우선순위"
  },
  
  {
    "title": "BOJ_1644_소수의 연속합",
    "url": "/posts/BOJ1644%EC%86%8C%EC%88%98%EC%9D%98-%EC%97%B0%EC%86%8D%ED%95%A9/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-09-04 12:21:00 +0800",
    "content": "문제 링크 메모리: 27052 KB, 시간: 204 ms수학, 정수론, 소수 판정, 에라토스테네스의 체, 두 포인터2024년 9월 4일 13:17:35"
  },
  
  {
    "title": "BOJ_2239_스도쿠(Java)",
    "url": "/posts/BOJ2239%EC%8A%A4%EB%8F%84%EC%BF%A0Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-09-04 03:03:25 +0800",
    "content": "문제 링크 메모리: 16872 KB, 시간: 336 ms백트래킹, 구현2024년 9월 4일 03:56:00비트마스킹으로 세로, 가로, 3x3 격자를 체크한다.재귀적으로 진행하며 조건 만족시 체크 및 재귀호출 후 다시 되돌리는 백트래킹 작업 필요."
  },
  
  {
    "title": "BOJ_9084_동전(Java)",
    "url": "/posts/BOJ9084%EB%8F%99%EC%A0%84Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-09-04 02:05:57 +0800",
    "content": "문제 링크 메모리: 15268 KB, 시간: 112 ms다이나믹 프로그래밍, 배낭 문제2024년 9월 4일 03:03:05"
  },
  
  {
    "title": "BOJ_1700_멀티탭 스케줄링(Java)",
    "url": "/posts/BOJ1700%EB%A9%80%ED%8B%B0%ED%83%AD-%EC%8A%A4%EC%BC%80%EC%A4%84%EB%A7%81Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-09-04 01:28:43 +0800",
    "content": "문제 링크 메모리: 14164 KB, 시간: 100 ms그리디 알고리즘2024년 9월 4일 02:20:56"
  },
  
  {
    "title": "PGMS_대장균의 크기에 따라 분류하기 1 (SQL)",
    "url": "/posts/PGMS%EB%8C%80%EC%9E%A5%EA%B7%A0%EC%9D%98-%ED%81%AC%EA%B8%B0%EC%97%90-%EB%94%B0%EB%9D%BC-%EB%B6%84%EB%A5%98%ED%95%98%EA%B8%B0-1-SQL/",
    "categories": "SQL",
    "tags": "sql, 프로그래머스",
    "date": "2024-09-02 15:06:50 +0800",
    "content": "문제 링크 메모리: undefined, 시간: 코딩테스트 연습 > SELECT합계: 100.0 / 100.02024년 09월 02일 16:02:20출처: 프로그래머스 코딩 테스트 연습, https&#x3A;//school.programmers.co.kr/learn/ch"
  },
  
  {
    "title": "BOJ_1562_계단수(Java)",
    "url": "/posts/BOJ1562%EA%B3%84%EB%8B%A8%EC%88%98Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-09-02 14:40:29 +0800",
    "content": "[Gold I] 계단 수 - 1562  문제 링크  성능 요약  메모리: 19936 KB, 시간: 144 ms  분류  비트마스킹, 다이나믹 프로그래밍, 비트필드를 이용한 다이나믹 프로그래밍  제출 일자  2024년 9월 2일 15:34:15  문제 설명  45656이"
  },
  
  {
    "title": "BOJ_1509_팰린드롬 분할(Java)",
    "url": "/posts/BOJ1509%ED%8C%B0%EB%A6%B0%EB%93%9C%EB%A1%AC-%EB%B6%84%ED%95%A0Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-09-02 12:27:50 +0800",
    "content": "문제 링크 메모리: 46856 KB, 시간: 188 ms다이나믹 프로그래밍2024년 9월 2일 13:18:03"
  },
  
  {
    "title": "BOJ_1005_ACM Craft(Java)",
    "url": "/posts/BOJ1005ACM-Craft/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-09-02 12:22:21 +0800",
    "content": "문제 링크 메모리: 242104 KB, 시간: 700 ms방향 비순환 그래프, 다이나믹 프로그래밍, 그래프 이론, 위상 정렬2024년 8월 30일 01:08:43"
  },
  
  {
    "title": "Codeforces Round 970 (Div. 3) Reviews",
    "url": "/posts/Codeforces-Round-970-Div.-3-Reviews/",
    "categories": "Code, Contests",
    "tags": "Java, codeforces, 알고리즘",
    "date": "2024-09-02 03:03:02 +0800",
    "content": " "
  },
  
  {
    "title": "Operating System Concepts - (6)",
    "url": "/posts/Operating-System-Concepts-6/",
    "categories": "운영체제",
    "tags": "공룡책, 운영체제",
    "date": "2024-09-01 20:43:07 +0800",
    "content": "Memory Management  Logical vs Physical Address ✔ Logical Address (= virtual address, 가상 주소)   프로세스마다 독립적으로 가지는 주소 공간   각 프로세스마다 0번지부터 시작   CPU가 보는 주소는"
  },
  
  {
    "title": "BOJ_10266_시계 사진들(Java)",
    "url": "/posts/BOJ10266%EC%8B%9C%EA%B3%84-%EC%82%AC%EC%A7%84%EB%93%A4Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-08-28 15:32:38 +0800",
    "content": "문제 링크 메모리: 50832 KB, 시간: 532 msKMP, 문자열2024년 8월 28일 16:23:56KMP알고리즘 문제.시계각도가 0~359999까지 있고 회전 가능하므로 회전 고려하여 길이 720000텍스트 clock1과 길이 360000의 패턴 clock2를"
  },
  
  {
    "title": "BOJ_4354_문자열 제곱(Java)",
    "url": "/posts/BOJ4354%EB%AC%B8%EC%9E%90%EC%97%B4-%EC%A0%9C%EA%B3%B1Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-08-28 03:12:50 +0800",
    "content": "문제 링크 메모리: 97008 KB, 시간: 460 msKMP, 문자열2024년 8월 28일 04:10:34KMP알고리즘 문제다. KMP로 마지막까지 반복되는 접두사 길이 체크하고 그 길이만큼 전체 문자열이 딱 떨어진다면 같은 패턴으로 쭉 반복되기에 지수곱 사용가능하므"
  },
  
  {
    "title": "BOJ_1305_광고(Java)",
    "url": "/posts/BOJ1305%EA%B4%91%EA%B3%A0Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-08-28 02:57:09 +0800",
    "content": "문제 링크 메모리: 24096 KB, 시간: 252 msKMP, 문자열2024년 8월 28일 03:32:15광고가 반복된다면, 우리가 본 부분의 앞부분과 뒷부분이 같다. 이 같은 부분을 최대한 길게 찾으면, 그게 반복되는 부분.예시 : abcabcabpi : 0, 0,"
  },
  
  {
    "title": "BOJ_1786_찾기(Java)",
    "url": "/posts/BOJ1786%EC%B0%BE%EA%B8%B0Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-08-28 02:14:33 +0800",
    "content": "문제 링크 메모리: 55652 KB, 시간: 532 msKMP, 문자열2024년 8월 28일 03:12:40KMP알고리즘을 이용해 풀었다. KMP로직을 이해하고 나니 간단한 코드고 선형시간만에 패턴매칭이 가능해졌다."
  },
  
  {
    "title": "PGMS_있었는데요 없었습니다(SQL)",
    "url": "/posts/PGME%EC%9E%88%EC%97%88%EB%8A%94%EB%8D%B0%EC%9A%94-%EC%97%86%EC%97%88%EC%8A%B5%EB%8B%88%EB%8B%A4SQL/",
    "categories": "SQL",
    "tags": "sql, 프로그래머스",
    "date": "2024-08-28 01:47:03 +0800",
    "content": "문제 링크 메모리: 0.0 MB, 시간: 0.00 ms코딩테스트 연습 > JOINEmpty2024년 08월 28일 02:41:52출처: 프로그래머스 코딩 테스트 연습, https&#x3A;//school.programmers.co.kr/learn/challenges"
  },
  
  {
    "title": "BOJ_1701_Cubeditor(Java)",
    "url": "/posts/BOJ1701CubeditorJava/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-08-28 01:17:48 +0800",
    "content": "문제 링크 메모리: 76480 KB, 시간: 256 msKMP, 문자열2024년 8월 28일 01:16:38"
  },
  
  {
    "title": "BOJ_1377_버블소트(Java)",
    "url": "/posts/BOJ1377%EB%B2%84%EB%B8%94%EC%86%8C%ED%8A%B8Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-08-26 03:23:46 +0800",
    "content": "문제 링크 메모리: 47920 KB, 시간: 300 ms정렬2024년 8월 26일 04:16:51풀이 1 : 메모리 47920KB, 시간 300ms풀이 2 : 메모리 82748KB, 시간 1488ms"
  },
  
  {
    "title": "Operating System Concepts - (5)",
    "url": "/posts/Operating-System-Concepts-5/",
    "categories": "운영체제",
    "tags": "공룡책, 운영체제",
    "date": "2024-08-26 02:18:23 +0800",
    "content": "Counting Semaphore도메인이 0 이상인 임의의 정수값주로 resource counting 에 사용Binary Semaphore (= mutex)0 또는 1 값만 가질 수 있는 semaphore주로 mutual exclusion (lock/unlock)에 사"
  },
  
  {
    "title": "BOJ_3015_오아시스 재결합",
    "url": "/posts/BOJ3015%EC%98%A4%EC%95%84%EC%8B%9C%EC%8A%A4-%EC%9E%AC%EA%B2%B0%ED%95%A9/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-08-23 09:46:33 +0800",
    "content": "문제 링크 메모리: 60024 KB, 시간: 432 ms자료 구조, 스택2024년 8월 23일 10:42:10"
  },
  
  {
    "title": "BOJ_1932_정수 삼각형(Java)",
    "url": "/posts/BOJ1932%EC%A0%95%EC%88%98-%EC%82%BC%EA%B0%81%ED%98%95Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-08-22 11:46:34 +0800",
    "content": "문제 링크 메모리: 26956 KB, 시간: 240 ms다이나믹 프로그래밍2024년 8월 22일 12:40:24"
  },
  
  {
    "title": "BOJ_9465_스티커(Java)",
    "url": "/posts/BOJ9465%EC%8A%A4%ED%8B%B0%EC%BB%A4Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-08-21 16:11:45 +0800",
    "content": "문제 링크 메모리: 110508 KB, 시간: 620 ms다이나믹 프로그래밍2024년 8월 21일 17:08:35"
  },
  
  {
    "title": "BOJ_2613_숫자구슬(Java)",
    "url": "/posts/BOJ2613%EC%88%AB%EC%9E%90%EA%B5%AC%EC%8A%ACJava/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-08-21 14:34:18 +0800",
    "content": "문제 링크 메모리: 16320 KB, 시간: 144 ms이분 탐색, 다이나믹 프로그래밍, 그리디 알고리즘, 매개 변수 탐색2024년 8월 21일 13:59:16  DP를 이용한 풀이"
  },
  
  {
    "title": "BOJ_9935_문자열 폭발(Java)",
    "url": "/posts/BOJ9935%EB%AC%B8%EC%9E%90%EC%97%B4%ED%8F%AD%EB%B0%9CJava/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-08-21 14:28:06 +0800",
    "content": "문제 링크 메모리: 122684 KB, 시간: 472 ms자료 구조, 스택, 문자열2024년 8월 20일 21:17:21"
  },
  
  {
    "title": "BOJ_20055_컨베이어 벨트 위의 로봇(Java)",
    "url": "/posts/BOJ20055%EC%BB%A8%EB%B2%A0%EC%9D%B4%EC%96%B4-%EB%B2%A8%ED%8A%B8-%EC%9C%84%EC%9D%98-%EB%A1%9C%EB%B4%87Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-08-21 14:24:26 +0800",
    "content": "문제 링크 메모리: 14512 KB, 시간: 248 ms구현, 시뮬레이션2024년 8월 20일 15:17:05"
  },
  
  {
    "title": "BOJ_2098_외판원 순회 (Java)",
    "url": "/posts/BOJ2098%EC%99%B8%ED%8C%90%EC%9B%90-%EC%88%9C%ED%9A%8C-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-08-20 09:09:45 +0800",
    "content": "문제 링크 메모리: 20188 KB, 시간: 168 ms비트마스킹, 다이나믹 프로그래밍, 비트필드를 이용한 다이나믹 프로그래밍, 외판원 순회 문제2024년 8월 19일 21:00:01문제해결"
  },
  
  {
    "title": "Docker & Kubernetes - (1)",
    "url": "/posts/Docker-Kubernetes-1/",
    "categories": "공부",
    "tags": "docker, kubernetes",
    "date": "2024-08-12 02:48:18 +0800",
    "content": "쿠버네티스란? 컨테이너화의 의의와 쿠버네티스의 개요  쿠버네티스 Kubernetes :  컨테인화된 애플리케이션을 효율적으로 배포하고 운영하기 위해 설계된 오픈 소스 플랫폼.  왜 컨테이너를 사용할까? CI/CD* (지속적 통합, 지속적 배포) : 사용자에게 새로운 기"
  },
  
  {
    "title": "BOJ_11286_절댓값 힙 (Java)",
    "url": "/posts/BOJ11286%EC%A0%88%EB%8C%93%EA%B0%92-%ED%9E%99-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-08-12 02:33:55 +0800",
    "content": "문제 링크 메모리: 25872 KB, 시간: 416 ms자료 구조, 우선순위 큐2024년 8월 12일 03:31:39업로드중.."
  },
  
  {
    "title": "CODEFORCES CONTESTS - EPIC Institute of Technology Round August 2024 (Div. 1 + Div. 2) - Distanced Coloring",
    "url": "/posts/CODEFORCES-CONTESTS-EPIC-Institute-of-Technology-Round-August-2024-Div.-1-Div.-2/",
    "categories": "Code, Contests",
    "tags": "Java, codeforces, 알고리즘",
    "date": "2024-08-12 00:53:17 +0800",
    "content": "A. Distanced Coloring You received an n×m grid from a mysterious source. The source also gave you a magic positive integer constant k . The source tol"
  },
  
  {
    "title": "CODEFORCES CONTESTS - Round 965 (Div. 2) - Find K Distinct Points with Fixed Center",
    "url": "/posts/CODEFORCES-CONTESTS-Round-965-Div.-2/",
    "categories": "Code, Contests",
    "tags": "Java, codeforces, 알고리즘",
    "date": "2024-08-10 23:19:58 +0800",
    "content": "A. Find K Distinct Points with Fixed Center time limit per test1 second memory limit per test256 megabytes  I couldn't think of a good title for this "
  },
  
  {
    "title": "Docker Desktop Error",
    "url": "/posts/Docker-Desktop-Error/",
    "categories": "오류, 해결",
    "tags": "docker, error",
    "date": "2024-08-10 20:34:06 +0800",
    "content": "도커 데스크탑을 설치하고 마주한 오류창이다. 오류 메시지는 Windows Subsystem for Linux (WSL)가 아직 시스템에 설치되지 않았음을 나타낸다. Docker Desktop을 실행하기 위해서는 WSL2가 필요하다.WSL 설치하기: 관리자 권한으로 Po"
  },
  
  {
    "title": "SWEA_Pro_끝말잇기2(Java)",
    "url": "/posts/SWEAPro%EB%81%9D%EB%A7%90%EC%9E%87%EA%B8%B02Java/",
    "categories": "알고리즘",
    "tags": "Java, SWEA, 알고리즘",
    "date": "2024-08-10 10:23:35 +0800",
    "content": "메모리: 106,556 KB, 시간: 546 ms, 코드길이: 3,892 Bytes2024-08-10 10:49출처: SW Expert Academy, https&#x3A;//swexpertacademy.com/main/code/problem/problemList.do"
  },
  
  {
    "title": "BOJ_10840_구간 성분 (Java)",
    "url": "/posts/BOJ10840%EA%B5%AC%EA%B0%84-%EC%84%B1%EB%B6%84/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-08-05 01:24:03 +0800",
    "content": "문제 링크 메모리: 226464 KB, 시간: 936 ms해싱2024년 8월 4일 21:34:43문제 풀이문제 풀이"
  },
  
  {
    "title": "Hashing, 해싱 (feat. codetree)",
    "url": "/posts/Hashing-%ED%95%B4%EC%8B%B1-feat.-codetree/",
    "categories": "알고리즘",
    "tags": "알고리즘, 자료구조, 코드트리",
    "date": "2024-08-04 14:49:00 +0800",
    "content": "Hashing 에 대한 학습 내용을 정리하고자 한다. 학습은 코드트리의 과정으로 진행되었다.배열에서 값을 찾을 때 인덱스와 같이 값이 있는 위치를 명시하여 그 값을 찾는다. 실제 데이터 관리/접근/조회 및 웹 사이트에서 다루는 경우 이는 최적의 방법은 아니다.예시로 홈"
  },
  
  {
    "title": "AWS RDS 설정 - 프리티어, MySQL",
    "url": "/posts/AWS-RDS-%EC%84%A4%EC%A0%95-%ED%94%84%EB%A6%AC%ED%8B%B0%EC%96%B4-MySQL/",
    "categories": "프로젝트",
    "tags": "aws, ec2, rds",
    "date": "2024-08-01 10:23:34 +0800",
    "content": "먼저 아래 링크에서 루트 사용자로 로그인 하자AWS RDS좌측 데이터베이스를 클릭하자데이터베이스RDS 인스턴스를 생성하기 위해 데이터베이스 생성을 클릭하자필자는 범용적인 설정을 위해 표준생성 해주었다. 손쉬운 설정으로 기본에 커스텀하고싶으면 오른쪽을 선택하자다음으로 사"
  },
  
  {
    "title": "BOJ_10999_구간 합 구하기 2 (Java)",
    "url": "/posts/BOJ10999%EA%B5%AC%EA%B0%84-%ED%95%A9-%EA%B5%AC%ED%95%98%EA%B8%B0-2-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-07-31 04:12:52 +0800",
    "content": "문제 링크 메모리: 119644 KB, 시간: 784 ms세그먼트 트리, 느리게 갱신되는 세그먼트 트리, 자료 구조2024년 7월 31일 05:05:27Lazy propagation 학습 및 적용해보았다Lazy propagation 처음 이해하는데 좀 오래 걸리니 간단"
  },
  
  {
    "title": "BOJ_2042_구간 합 구하기 (Java)",
    "url": "/posts/BOJ2042%EA%B5%AC%EA%B0%84-%ED%95%A9-%EA%B5%AC%ED%95%98%EA%B8%B0-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-07-31 03:30:33 +0800",
    "content": "문제 링크 메모리: 102764 KB, 시간: 612 ms세그먼트 트리, 자료 구조2024년 7월 31일 04:23:35세그먼트트리에서 update부분만 고려해보았다.범위 밖이라면 종료리프 노드시 변경해당 노드를 값을 변경하고 그 위 부모도 전부 합 새로 계산"
  },
  
  {
    "title": "BOJ_최솟값과 최댓값_2357 (Java)",
    "url": "/posts/BOJ%EC%B5%9C%EC%86%9F%EA%B0%92%EA%B3%BC-%EC%B5%9C%EB%8C%93%EA%B0%922357-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-07-31 02:17:55 +0800",
    "content": "문제 링크 메모리: 58600 KB, 시간: 696 ms세그먼트 트리, 자료 구조2024년 7월 31일 03:07:55M개의 줄에 입력받은 순서대로 각 a, b에 대한 답을 최솟값, 최댓값 순서로 출력한다. 이전 풀었던 세그먼트 트리와 같다. 이전 학습하며 정리한 필기"
  },
  
  {
    "title": "BOJ_10868_최솟값 (Java)",
    "url": "/posts/BOJ10868%EC%B5%9C%EC%86%9F%EA%B0%92-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-07-31 02:14:43 +0800",
    "content": "문제 링크 메모리: 53688 KB, 시간: 648 ms세그먼트 트리, 희소 배열, 자료 구조2024년 7월 31일 03:09:03 M개의 줄에 입력받은 순서대로 각 a, b에 대한 답을 출력한다.세그먼트트리에 대한 공부 후 문제를 바로 풀어보았다. 기본적으로 알아야 "
  },
  
  {
    "title": "Operating System Concepts - (4)",
    "url": "/posts/Operating-System-Concepts-4/",
    "categories": "운영체제",
    "tags": "공룡책, 운영체제",
    "date": "2024-07-29 02:10:52 +0800",
    "content": "데이터의 접근Race Condition중복 접근이 발생하는 경우 결과 값에 문제가 발생해 원치 않은 결과를 얻게 될 수 있다Kernel 수행 중 인터럽트 발생 (interrupt handler vs kernel)interrupt handler vs kernel중요한 변"
  },
  
  {
    "title": "BOJ_19951_태상이의 훈련소 생활 (Java)",
    "url": "/posts/BOJ19951%ED%83%9C%EC%83%81%EC%9D%B4%EC%9D%98-%ED%9B%88%EB%A0%A8%EC%86%8C-%EC%83%9D%ED%99%9C/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-07-24 03:37:46 +0800",
    "content": "문제 링크 메모리: 76688 KB, 시간: 740 ms누적 합2024년 7월 24일 04:34:46"
  },
  
  {
    "title": "BOJ_5972_택배배송 (Java)",
    "url": "/posts/BOJ5972%ED%83%9D%EB%B0%B0%EB%B0%B0%EC%86%A1-Java-zfwwpzaj/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-07-24 02:59:50 +0800",
    "content": "문제 링크 메모리: 42300 KB, 시간: 456 ms데이크스트라, 그래프 이론, 최단 경로2024년 7월 24일 03:35:55다익스트라 사용"
  },
  
  {
    "title": "PGMS_단속카메라 - 42884 (Java)",
    "url": "/posts/PGMS%EB%8B%A8%EC%86%8D%EC%B9%B4%EB%A9%94%EB%9D%BC-42884/",
    "categories": "알고리즘",
    "tags": "Java, 알고리즘, 프로그래머스",
    "date": "2024-07-24 02:48:20 +0800",
    "content": "문제 링크 메모리: 53.5 MB, 시간: 8.09 ms코딩테스트 연습 > 탐욕법（Greedy）정확성: 50.0효율성: 50.0합계: 100.0 / 100.02024년 07월 24일 02:53:42출처: 프로그래머스 코딩 테스트 연습, https&#x3A;//schoo"
  },
  
  {
    "title": "BOJ_32031_석고모형만들기 (Java)",
    "url": "/posts/BOJ32031%EC%84%9D%EA%B3%A0%EB%AA%A8%ED%98%95%EB%A7%8C%EB%93%A4%EA%B8%B0-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-07-24 02:42:54 +0800",
    "content": "문제 링크 메모리: 24888 KB, 시간: 212 ms너비 우선 탐색, 자료 구조, 분리 집합, 플러드 필, 기하학, 3차원 기하학, 그래프 이론, 그래프 탐색, 구현2024년 7월 24일 02:11:22BOJ_32031 석고모형만들기BOJ_32031 석고모형만들"
  },
  
  {
    "title": "AWS S3 버킷 설정 및 파일 관리",
    "url": "/posts/AWS-S3-%EB%B2%84%ED%82%B7-%EC%84%A4%EC%A0%95-%EB%B0%8F-%ED%8C%8C%EC%9D%BC-%EA%B4%80%EB%A6%AC/",
    "categories": "프로젝트",
    "tags": "IntelliJ, Java, Springboot, aws",
    "date": "2024-07-23 12:04:20 +0800",
    "content": "먼저 아래 링크에서 루트 사용자로 로그인 하도록 하자 AWS 콘솔공식 가이드를 보고 싶으면 Getting started with Amazon S3 해당 사이트 방문해 읽어보면 좋을 것 같다.설명 및 장단점 등은 다른 글에도 많으니 생략하고 사용방법 및 설정을 다루어 보"
  },
  
  {
    "title": "Operating System Concepts - (3)",
    "url": "/posts/Operating-System-Concepts-3/",
    "categories": "운영체제",
    "tags": "공룡책, 운영체제",
    "date": "2024-07-21 22:24:01 +0800",
    "content": "Parent Process (부모 프로세스) 가 Children Process (자식 프로세스) 생성( 복제 생성; 프로세스가 또 다른 프로세스를 만드는 구조)프로세스의 트리(계층 구조)가 형성됨프로세스는 자원을 필요로 하고 자원은 운영체제(OS)로부터 받거나 부모와 "
  },
  
  {
    "title": "Operating System Concepts - (2)",
    "url": "/posts/Operating-System-Concepts-2/",
    "categories": "운영체제",
    "tags": "공룡책, 운영체제",
    "date": "2024-07-14 22:37:40 +0800",
    "content": "OS 컴퓨터 시스템 구조하드 디스크는 input device/output device 둘 다의 역할을 한다.cpu안에는 memory보다 빠른 저장 공간이 있음. 이를 register라고 함.Interrupt line은 항상 프로그램이 memory 영역만을 사용해서 작동"
  },
  
  {
    "title": "Operating System Concepts",
    "url": "/posts/%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C/",
    "categories": "운영체제",
    "tags": "공룡책, 운영체제",
    "date": "2024-07-07 20:25:40 +0800",
    "content": "운영체제 개요 (Ch1. Overview)  운영체제란?  컴퓨터 하드웨어를 관리하는 소프트웨어. 응용 프로그램을 위한 기반을 제공하며 컴퓨터 사용자와 컴퓨터 하드웨어 사이에서 중재자 역할을 수행한다. 컴퓨터에서 항상 실행되는 프로그램이다. (일반적으로 커널이라고 함)"
  },
  
  {
    "title": "BOJ_1806_부분합 (Java)",
    "url": "/posts/BOJ1806%EB%B6%80%EB%B6%84%ED%95%A9-Java/",
    "categories": "알고리즘",
    "tags": "Java, 백준, 알고리즘",
    "date": "2024-07-03 14:16:45 +0800",
    "content": "문제 링크  성능 요약 메모리: 102172 KB, 시간: 740 ms  분류 누적 합, 두 포인터  제출 일자 2024년 7월 3일 15:20:10  문제 설명 10,000 이하의 자연수로 이루어진 길이 N짜리 수열이 주어진다. 이 수열에서 연속된 수들의 부분합 중에"
  },
  
  {
    "title": "PGMS-조이스틱 (JAVA)",
    "url": "/posts/PGMS-%EC%A1%B0%EC%9D%B4%EC%8A%A4%ED%8B%B1-JAVA/",
    "categories": "알고리즘",
    "tags": "Java, 알고리즘, 프로그래머스",
    "date": "2024-05-29 18:55:14 +0800",
    "content": "문제 링크 메모리: 73.3 MB, 시간: 0.05 ms코딩테스트 연습 > 탐욕법（Greedy）정확성: 100.0합계: 100.0 / 100.02024년 05월 29일 17:18:39출처: 프로그래머스 코딩 테스트 연습, https&#x3A;//school.progra"
  },
  
  {
    "title": "Customize the Favicon",
    "url": "/posts/customize-the-favicon/",
    "categories": "Blogging, Tutorial",
    "tags": "favicon",
    "date": "2019-08-11 00:34:00 +0800",
    "content": "The favicons of Chirpy are placed in the directory assets/img/favicons/. You may want to replace them with your own. The following sections will guide you to create and replace the default favicons.  Generate the favicon  Prepare a square image (PNG, JPG, or SVG) with a size of 512x512 or more, and then go to the online tool Real Favicon Generator and click the button Select your Favicon image to upload your image file.  In the next step, the webpage will show all usage scenarios. You can keep the default options, scroll to the bottom of the page, and click the button Generate your Favicons and HTML code to generate the favicon.  Download &amp; Replace  Download the generated package, unzip and delete the following two from the extracted files:     browserconfig.xml   site.webmanifest   And then copy the remaining image files (.PNG and .ICO) to cover the original files in the directory assets/img/favicons/ of your Jekyll site. If your Jekyll site doesn’t have this directory yet, just create one.  The following table will help you understand the changes to the favicon files:                 File(s)       From Online Tool       From Chirpy                       *.PNG       ✓       ✗                 *.ICO       ✓       ✗               ✓ means keep, ✗ means delete.   The next time you build the site, the favicon will be replaced with a customized edition. "
  },
  
  {
    "title": "Getting Started",
    "url": "/posts/getting-started/",
    "categories": "Blogging, Tutorial",
    "tags": "getting started",
    "date": "2019-08-09 20:55:00 +0800",
    "content": "Get started with Chirpy basics in this comprehensive overview. You will learn how to install, configure, and use your first Chirpy-based website, as well as deploy it to a web server."
  },
  
  {
    "title": "Writing a New Post",
    "url": "/posts/write-a-new-post/",
    "categories": "Blogging, Tutorial",
    "tags": "writing",
    "date": "2019-08-08 14:10:00 +0800",
    "content": "This tutorial will guide you how to write a post in the Chirpy template, and it’s worth reading even if you’ve used Jekyll before, as many features require specific variables to be set.  Naming and Path  Create a new file named YYYY-MM-DD-TITLE.EXTENSION and put it in the _posts of the root directory. Please note that the EXTENSION must be one of md and markdown. If you want to save time of creating files, please consider using the plugin Jekyll-Compose to accomplish this.  Front Matter  Basically, you need to fill the Front Matter as below at the top of the post:  --- title: TITLE date: YYYY-MM-DD HH:MM:SS +/-TTTT categories: [TOP_CATEGORY, SUB_CATEGORY] tags: [TAG]     # TAG names should always be lowercase ---      The posts’ layout has been set to post by default, so there is no need to add the variable layout in the Front Matter block.   Timezone of Date  To accurately record the release date of a post, you should not only set up the timezone of _config.yml but also provide the post’s timezone in variable date of its Front Matter block. Format: +/-TTTT, e.g. +0800.  Categories and Tags  The categories of each post are designed to contain up to two elements, and the number of elements in tags can be zero to infinity. For instance:  --- categories: [Animal, Insect] tags: [bee] ---   Author Information  The author information of the post usually does not need to be filled in the Front Matter , they will be obtained from variables social.name and the first entry of social.links of the configuration file by default. But you can also override it as follows:  Adding author information in _data/authors.yml (If your website doesn’t have this file, don’t hesitate to create one).  &lt;author_id&gt;:   name: &lt;full name&gt;   twitter: &lt;twitter_of_author&gt;   url: &lt;homepage_of_author&gt;   And then use author to specify a single entry or authors to specify multiple entries:  --- author: &lt;author_id&gt;                     # for single entry # or authors: [&lt;author1_id&gt;, &lt;author2_id&gt;]   # for multiple entries ---   Having said that, the key author can also identify multiple entries.     The benefit of reading the author information from the file _data/authors.yml is that the page will have the meta tag twitter:creator, which enriches the Twitter Cards and is good for SEO.   Post Description  By default, the first words of the post are used to display on the home page for a list of posts, in the Further Reading section, and in the XML of the RSS feed. If you don’t want to display the auto-generated description for the post, you can customize it using the description field in the Front Matter as follows:  --- description: Short summary of the post. ---   Additionally, the description text will also be displayed under the post title on the post’s page.  Table of Contents  By default, the Table of Contents (TOC) is displayed on the right panel of the post. If you want to turn it off globally, go to _config.yml and set the value of variable toc to false. If you want to turn off TOC for a specific post, add the following to the post’s Front Matter:  --- toc: false ---   Comments  The global setting for comments is defined by the comments.provider option in the _config.yml file. Once a comment system is selected for this variable, comments will be enabled for all posts.  If you want to close the comment for a specific post, add the following to the Front Matter of the post:  --- comments: false ---   Media  We refer to images, audio and video as media resources in Chirpy.  URL Prefix  From time to time we have to define duplicate URL prefixes for multiple resources in a post, which is a boring task that you can avoid by setting two parameters.          If you are using a CDN to host media files, you can specify the cdn in _config.yml. The URLs of media resources for site avatar and posts are then prefixed with the CDN domain name.      cdn: https://cdn.com                To specify the resource path prefix for the current post/page range, set media_subpath in the front matter of the post:      --- media_subpath: /path/to/media/ ---           The option site.cdn and page.media_subpath can be used individually or in combination to flexibly compose the final resource URL: [site.cdn/][page.media_subpath/]file.ext  Images  Caption  Add italics to the next line of an image, then it will become the caption and appear at the bottom of the image:  ![img-description](/path/to/image) _Image Caption_   Size  To prevent the page content layout from shifting when the image is loaded, we should set the width and height for each image.  ![Desktop View](/assets/img/sample/mockup.png){: width=\"700\" height=\"400\" }      For an SVG, you have to at least specify its width, otherwise it won’t be rendered.   Starting from Chirpy v5.0.0, height and width support abbreviations (height → h, width → w). The following example has the same effect as the above:  ![Desktop View](/assets/img/sample/mockup.png){: w=\"700\" h=\"400\" }   Position  By default, the image is centered, but you can specify the position by using one of the classes normal, left, and right.     Once the position is specified, the image caption should not be added.           Normal position      Image will be left aligned in below sample:      ![Desktop View](/assets/img/sample/mockup.png){: .normal }                Float to the left      ![Desktop View](/assets/img/sample/mockup.png){: .left }                Float to the right      ![Desktop View](/assets/img/sample/mockup.png){: .right }           Dark/Light mode  You can make images follow theme preferences in dark/light mode. This requires you to prepare two images, one for dark mode and one for light mode, and then assign them a specific class (dark or light):  ![Light mode only](/path/to/light-mode.png){: .light } ![Dark mode only](/path/to/dark-mode.png){: .dark }   Shadow  The screenshots of the program window can be considered to show the shadow effect:  ![Desktop View](/assets/img/sample/mockup.png){: .shadow }   Preview Image  If you want to add an image at the top of the post, please provide an image with a resolution of 1200 x 630. Please note that if the image aspect ratio does not meet 1.91 : 1, the image will be scaled and cropped.  Knowing these prerequisites, you can start setting the image’s attribute:  --- image:   path: /path/to/image   alt: image alternative text ---   Note that the media_subpath can also be passed to the preview image, that is, when it has been set, the attribute path only needs the image file name.  For simple use, you can also just use image to define the path.  --- image: /path/to/image ---   LQIP  For preview images:  --- image:   lqip: /path/to/lqip-file # or base64 URI ---      You can observe LQIP in the preview image of post \"Text and Typography\".   For normal images:  ![Image description](/path/to/image){: lqip=\"/path/to/lqip-file\" }   Video  Social Media Platform  You can embed videos from social media platforms with the following syntax:  {% include embed/{Platform}.html id='{ID}' %}   Where Platform is the lowercase of the platform name, and ID is the video ID.  The following table shows how to get the two parameters we need in a given video URL, and you can also know the currently supported video platforms.                 Video URL       Platform       ID                       https://www.youtube.com/watch?v=H-B46URT4mg       youtube       H-B46URT4mg                 https://www.twitch.tv/videos/1634779211       twitch       1634779211                 https://www.bilibili.com/video/BV1Q44y1B7Wf       bilibili       BV1Q44y1B7Wf           Video Files  If you want to embed a video file directly, use the following syntax:  {% include embed/video.html src='{URL}' %}   Where URL is a URL to a video file e.g. /path/to/sample/video.mp4.  You can also specify additional attributes for the embedded video file. Here is a full list of attributes allowed.     poster='/path/to/poster.png' — poster image for a video that is shown while video is downloading   title='Text' — title for a video that appears below the video and looks same as for images   autoplay=true — video automatically begins to play back as soon as it can   loop=true — automatically seek back to the start upon reaching the end of the video   muted=true — audio will be initially silenced   types — specify the extensions of additional video formats separated by |. Ensure these files exist in the same directory as your primary video file.   Consider an example using all of the above:  {%   include embed/video.html   src='/path/to/video.mp4'   types='ogg|mov'   poster='poster.png'   title='Demo video'   autoplay=true   loop=true   muted=true %}   Audios  If you want to embed an audio file directly, use the following syntax:  {% include embed/audio.html src='{URL}' %}   Where URL is a URL to an audio file e.g. /path/to/audio.mp3.  You can also specify additional attributes for the embedded audio file. Here is a full list of attributes allowed.     title='Text' — title for an audio that appears below the audio and looks same as for images   types — specify the extensions of additional audio formats separated by |. Ensure these files exist in the same directory as your primary audio file.   Consider an example using all of the above:  {%   include embed/audio.html   src='/path/to/audio.mp3'   types='ogg|wav|aac'   title='Demo audio' %}   Pinned Posts  You can pin one or more posts to the top of the home page, and the fixed posts are sorted in reverse order according to their release date. Enable by:  --- pin: true ---   Prompts  There are several types of prompts: tip, info, warning, and danger. They can be generated by adding the class prompt-{type} to the blockquote. For example, define a prompt of type info as follows:  &gt; Example line for prompt. {: .prompt-info }   Syntax  Inline Code  `inline code part`   Filepath Highlight  `/path/to/a/file.extend`{: .filepath}   Code Block  Markdown symbols ``` can easily create a code block as follows:  ``` This is a plaintext code snippet. ```   Specifying Language  Using ```{language} you will get a code block with syntax highlight:  ```yaml key: value ```      The Jekyll tag {% highlight %} is not compatible with this theme.   Line Number  By default, all languages except plaintext, console, and terminal will display line numbers. When you want to hide the line number of a code block, add the class nolineno to it:  ```shell echo 'No more line numbers!' ``` {: .nolineno }   Specifying the Filename  You may have noticed that the code language will be displayed at the top of the code block. If you want to replace it with the file name, you can add the attribute file to achieve this:  ```shell # content ``` {: file=\"path/to/file\" }   Liquid Codes  If you want to display the Liquid snippet, surround the liquid code with {% raw %} and {% endraw %}:  {% raw %} ```liquid {% if product.title contains 'Pack' %}   This product's title contains the word Pack. {% endif %} ``` {% endraw %}   Or adding render_with_liquid: false (Requires Jekyll 4.0 or higher) to the post’s YAML block.  Mathematics  We use MathJax to generate mathematics. For website performance reasons, the mathematical feature won’t be loaded by default. But it can be enabled by:  --- math: true ---   After enabling the mathematical feature, you can add math equations with the following syntax:     Block math should be added with $$ math $$ with mandatory blank lines before and after $$            Inserting equation numbering should be added with $$\\begin{equation} math \\end{equation}$$       Referencing equation numbering should be done with \\label{eq:label_name} in the equation block and \\eqref{eq:label_name} inline with text (see example below)           Inline math (in lines) should be added with $$ math $$ without any blank line before or after $$   Inline math (in lists) should be added with \\$$ math $$   &lt;!-- Block math, keep all blank lines --&gt;  $$ LaTeX_math_expression $$  &lt;!-- Equation numbering, keep all blank lines  --&gt;  $$ \\begin{equation}   LaTeX_math_expression   \\label{eq:label_name} \\end{equation} $$  Can be referenced as \\eqref{eq:label_name}.  &lt;!-- Inline math in lines, NO blank lines --&gt;  \"Lorem ipsum dolor sit amet, $$ LaTeX_math_expression $$ consectetur adipiscing elit.\"  &lt;!-- Inline math in lists, escape the first `$` --&gt;  1. \\$$ LaTeX_math_expression $$ 2. \\$$ LaTeX_math_expression $$ 3. \\$$ LaTeX_math_expression $$      Starting with v7.0.0, configuration options for MathJax have been moved to file assets/js/data/mathjax.js, and you can change the options as needed, such as adding extensions. If you are building the site via chirpy-starter, copy that file from the gem installation directory (check with command bundle info --path jekyll-theme-chirpy) to the same directory in your repository.   Mermaid  Mermaid is a great diagram generation tool. To enable it on your post, add the following to the YAML block:  --- mermaid: true ---   Then you can use it like other markdown languages: surround the graph code with ```mermaid and ```.  Learn More  For more knowledge about Jekyll posts, visit the Jekyll Docs: Posts. "
  },
  
  {
    "title": "Text and Typography",
    "url": "/posts/text-and-typography/",
    "categories": "Blogging, Demo",
    "tags": "typography",
    "date": "2019-08-08 11:33:00 +0800",
    "content": "Examples of text, typography, math equations, diagrams, flowcharts, pictures, videos, and more."
  }
  
]

