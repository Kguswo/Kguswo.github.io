

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://kguswo.github.io/</id>
  <title>Now's Log</title>
  <subtitle>프로그래밍, 개발 팁과 프로젝트를 공유하는 기술 블로그입니다.</subtitle>
  <updated>2025-09-19T10:32:49+09:00</updated>
  <author>
    <name>Hyeon Jae Kim</name>
    <uri>https://kguswo.github.io/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="https://kguswo.github.io/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="https://kguswo.github.io/"/>
  <generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator>
  <rights> © 2025 Hyeon Jae Kim </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>PGMS_2차원 동전 뒤집기 (Java)</title>
    <link href="https://kguswo.github.io/posts/PGMS2%EC%B0%A8%EC%9B%90-%EB%8F%99%EC%A0%84-%EB%92%A4%EC%A7%91%EA%B8%B0-Java/" rel="alternate" type="text/html" title="PGMS_2차원 동전 뒤집기 (Java)" />
    <published>2025-09-18T10:34:45+09:00</published>
  
    <updated>2025-09-18T10:34:45+09:00</updated>
  
    <id>https://kguswo.github.io/posts/PGMS2%EC%B0%A8%EC%9B%90-%EB%8F%99%EC%A0%84-%EB%92%A4%EC%A7%91%EA%B8%B0-Java/</id>
    <content type="text/html" src="https://kguswo.github.io/posts/PGMS2%EC%B0%A8%EC%9B%90-%EB%8F%99%EC%A0%84-%EB%92%A4%EC%A7%91%EA%B8%B0-Java/" />
    <author>
      <name>Hyeon Jae Kim</name>
    </author>

  
    
    <category term="알고리즘" />
    
  

  <summary>[level 3] 2차원 동전 뒤집기 - 131703  문제 링크  성능 요약  메모리: 74 MB, 시간: 3.49 ms  구분  코딩테스트 연습 &amp;gt; 연습문제  채점결과  정확성: 100.0합계: 100.0 / 100.0  제출 일자  2025년 09월 17일 11:28:01  문제 설명  한수는 직사각형 모양의 공간에 놓인 동전들을 뒤집는 놀이를 하고 있습니다. 모든 동전들은 앞과 뒤가 구분되어 있으며, 동전을 뒤집기 위해서는 같은 줄에 있는 모든 동전을 뒤집어야 합니다. 동전들의 초기 상태와 목표 상태가 주어졌을 때, 초기 상태에서 최소 몇 번의 동전을 뒤집어야 목표 상태가 되는지 알아봅시다.    예를 들어, 위 그림에서 맨 왼쪽이 초기 상태, 맨 오른쪽이 목표 상태인 경우에 대해 알아봅시...</summary>

  </entry>

  
  <entry>
    <title>PGMS_스킬트리 (Java)</title>
    <link href="https://kguswo.github.io/posts/PGMS%EC%8A%A4%ED%82%AC%ED%8A%B8%EB%A6%AC-Java/" rel="alternate" type="text/html" title="PGMS_스킬트리 (Java)" />
    <published>2025-09-17T11:40:33+09:00</published>
  
    <updated>2025-09-17T11:40:33+09:00</updated>
  
    <id>https://kguswo.github.io/posts/PGMS%EC%8A%A4%ED%82%AC%ED%8A%B8%EB%A6%AC-Java/</id>
    <content type="text/html" src="https://kguswo.github.io/posts/PGMS%EC%8A%A4%ED%82%AC%ED%8A%B8%EB%A6%AC-Java/" />
    <author>
      <name>Hyeon Jae Kim</name>
    </author>

  
    
    <category term="알고리즘" />
    
  

  <summary>[level 2] 스킬트리 - 49993  문제 링크  성능 요약  메모리: 79.6 MB, 시간: 0.21 ms  구분  코딩테스트 연습 &amp;gt; Summer／Winter Coding（～2018）  채점결과  정확성: 100.0합계: 100.0 / 100.0  제출 일자  2025년 09월 17일 10:33:38  문제 설명  선행 스킬이란 어떤 스킬을 배우기 전에 먼저 배워야 하는 스킬을 뜻합니다.  예를 들어 선행 스킬 순서가 스파크 → 라이트닝 볼트 → 썬더일때, 썬더를 배우려면 먼저 라이트닝 볼트를 배워야 하고, 라이트닝 볼트를 배우려면 먼저 스파크를 배워야 합니다.  위 순서에 없는 다른 스킬(힐링 등)은 순서에 상관없이 배울 수 있습니다. 따라서 스파크 → 힐링 → 라이트닝 볼트 → 썬더와...</summary>

  </entry>

  
  <entry>
    <title>PGMS_거리두기 확인하기 (Java)</title>
    <link href="https://kguswo.github.io/posts/PGMS%EA%B1%B0%EB%A6%AC%EB%91%90%EA%B8%B0-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0-Java-63sj1vsu/" rel="alternate" type="text/html" title="PGMS_거리두기 확인하기 (Java)" />
    <published>2025-09-12T01:21:37+09:00</published>
  
    <updated>2025-09-12T01:21:37+09:00</updated>
  
    <id>https://kguswo.github.io/posts/PGMS%EA%B1%B0%EB%A6%AC%EB%91%90%EA%B8%B0-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0-Java-63sj1vsu/</id>
    <content type="text/html" src="https://kguswo.github.io/posts/PGMS%EA%B1%B0%EB%A6%AC%EB%91%90%EA%B8%B0-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0-Java-63sj1vsu/" />
    <author>
      <name>Hyeon Jae Kim</name>
    </author>

  
    
    <category term="알고리즘" />
    
  

  <summary>[level 2] 거리두기 확인하기 - 81302  문제 링크  성능 요약  메모리: 75.7 MB, 시간: 0.19 ms  구분  코딩테스트 연습 &amp;gt; 2021 카카오 채용연계형 인턴십  채점결과  정확성: 100.0합계: 100.0 / 100.0  제출 일자  2025년 09월 10일 10:44:45  문제 설명  개발자를 희망하는 죠르디가 카카오에 면접을 보러 왔습니다. 코로나 바이러스 감염 예방을 위해 응시자들은 거리를 둬서 대기를 해야하는데 개발 직군 면접인 만큼 아래와 같은 규칙으로 대기실에 거리를 두고 앉도록 안내하고 있습니다.    대기실은 5개이며, 각 대기실은 5x5 크기입니다. 거리두기를 위하여 응시자들 끼리는 맨해튼 거리1가 2 이하로 앉지 말아 주세요. 단 응시자가 앉아있는 ...</summary>

  </entry>

  
  <entry>
    <title>PGMS_추석 트래픽 (Java)</title>
    <link href="https://kguswo.github.io/posts/PGMS%EC%B6%94%EC%84%9D-%ED%8A%B8%EB%9E%98%ED%94%BD-Java/" rel="alternate" type="text/html" title="PGMS_추석 트래픽 (Java)" />
    <published>2025-09-10T11:49:39+09:00</published>
  
    <updated>2025-09-10T11:49:39+09:00</updated>
  
    <id>https://kguswo.github.io/posts/PGMS%EC%B6%94%EC%84%9D-%ED%8A%B8%EB%9E%98%ED%94%BD-Java/</id>
    <content type="text/html" src="https://kguswo.github.io/posts/PGMS%EC%B6%94%EC%84%9D-%ED%8A%B8%EB%9E%98%ED%94%BD-Java/" />
    <author>
      <name>Hyeon Jae Kim</name>
    </author>

  
    
    <category term="알고리즘" />
    
  

  <summary>[level 3] [1차] 추석 트래픽 - 17676  문제 링크  성능 요약  메모리: 83.2 MB, 시간: 100.74 ms  구분  코딩테스트 연습 &amp;gt; 2018 KAKAO BLIND RECRUITMENT  채점결과  정확성: 100.0합계: 100.0 / 100.0  제출 일자  2025년 09월 10일 11:40:34  문제 설명  추석 트래픽  이번 추석에도 시스템 장애가 없는 명절을 보내고 싶은 어피치는 서버를 증설해야 할지 고민이다. 장애 대비용 서버 증설 여부를 결정하기 위해 작년 추석 기간인 9월 15일 로그 데이터를 분석한 후 초당 최대 처리량을 계산해보기로 했다. 초당 최대 처리량은 요청의 응답 완료 여부에 관계없이 임의 시간부터 1초(=1,000밀리초)간 처리하는 요청의 최...</summary>

  </entry>

  
  <entry>
    <title>System Design Interview - 검색어 자동완성 시스템</title>
    <link href="https://kguswo.github.io/posts/System-Design-Interview-%EA%B2%80%EC%83%89%EC%96%B4-%EC%9E%90%EB%8F%99%EC%99%84%EC%84%B1-%EC%8B%9C%EC%8A%A4%ED%85%9C/" rel="alternate" type="text/html" title="System Design Interview - 검색어 자동완성 시스템" />
    <published>2025-09-08T05:57:28+09:00</published>
  
    <updated>2025-09-08T05:57:28+09:00</updated>
  
    <id>https://kguswo.github.io/posts/System-Design-Interview-%EA%B2%80%EC%83%89%EC%96%B4-%EC%9E%90%EB%8F%99%EC%99%84%EC%84%B1-%EC%8B%9C%EC%8A%A4%ED%85%9C/</id>
    <content type="text/html" src="https://kguswo.github.io/posts/System-Design-Interview-%EA%B2%80%EC%83%89%EC%96%B4-%EC%9E%90%EB%8F%99%EC%99%84%EC%84%B1-%EC%8B%9C%EC%8A%A4%ED%85%9C/" />
    <author>
      <name>Hyeon Jae Kim</name>
    </author>

  
    
    <category term="시스템" />
    
    <category term="디자인" />
    
  

  <summary>들어가며  많은 포털 사이트, 웹 사이트 검색창에는 단어를 입력하면 입력중인 글자에 맞는 추천 검색어들이 표시된다. 이러한 기능을 자동완성 이라고 한다.   이 글은 특정 입력에 대한 검색어 자동 완성 기능을 다룬다.    1. 문제 이해 및 설계 범위     자동완될 검색어는 첫 부분으로 한정한다.   5개의 자동완성 검색어가 표시되어야 한다.   인기 순위를 기준으로 5개의 검색어를 표시한다.   맞춤법 검사나 자동수정은 지원하지 않는다   질의어는 영어지만, 다국어 지원을 생각하면 좋다.   질의는 영어 소문자로 구성된다.   DAU는 천만명 기준이다.     요구사항 정리     빠른 응답 속도 : 사용자가 검색어를 입력할 때마다 자동완성 검색어도 표시되어야 한다. (100ms 이내)   연관성...</summary>

  </entry>

</feed>


