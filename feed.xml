

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://kguswo.github.io/</id>
  <title>Now's Log</title>
  <subtitle>프로그래밍, 개발 팁과 프로젝트를 공유하는 기술 블로그입니다.</subtitle>
  <updated>2025-09-06T14:52:37+09:00</updated>
  <author>
    <name>Hyeon Jae Kim</name>
    <uri>https://kguswo.github.io/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="https://kguswo.github.io/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="https://kguswo.github.io/"/>
  <generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator>
  <rights> © 2025 Hyeon Jae Kim </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>BOJ_1514_자물쇠 (Java)</title>
    <link href="https://kguswo.github.io/posts/BOJ1514%EC%9E%90%EB%AC%BC%EC%87%A0-Java/" rel="alternate" type="text/html" title="BOJ_1514_자물쇠 (Java)" />
    <published>2025-09-03T03:44:38+09:00</published>
  
    <updated>2025-09-03T03:44:38+09:00</updated>
  
    <id>https://kguswo.github.io/posts/BOJ1514%EC%9E%90%EB%AC%BC%EC%87%A0-Java/</id>
    <content type="text/html" src="https://kguswo.github.io/posts/BOJ1514%EC%9E%90%EB%AC%BC%EC%87%A0-Java/" />
    <author>
      <name>Hyeon Jae Kim</name>
    </author>

  
    
    <category term="알고리즘" />
    
  

  <summary>[Platinum III] 자물쇠 - 1514  문제 링크  성능 요약  메모리: 18068 KB, 시간: 144 ms  분류  다이나믹 프로그래밍, 그래프 이론, 최단 경로  제출 일자  2025년 9월 3일 03:35:58  문제 설명  세준이는 노트북을 누가 가져갈까봐 자물쇠로 잠가놓는다. 자물쇠는 동그란 디스크 N개로 구성되어 있다. 각 디스크에는 숫자가 0부터 9까지 숫자가 표시되어 있다. 디스크는 원형이기 때문에, 0과 9는 인접해 있다.  세준이는 한 번 자물쇠를 돌릴 때, 최대 세 칸을 시계 방향 또는 반시계 방향으로 돌릴 수 있다. 또, 최대 세 개의 인접한 디스크를 한 번에 돌릴 수 있다.  현재 자물쇠의 상태와 세준이의 비밀번호가 주어질 때, 자물쇠를 최소 몇 번 돌려야 풀 수 있는...</summary>

  </entry>

  
  <entry>
    <title>무료로 구축하는 협업 자동화 : Trello + Github + Slack</title>
    <link href="https://kguswo.github.io/posts/%EB%AC%B4%EB%A3%8C%EB%A1%9C-%EA%B5%AC%EC%B6%95%ED%95%98%EB%8A%94-%ED%98%91%EC%97%85-%EC%9E%90%EB%8F%99%ED%99%94-Trello-Github-Slack/" rel="alternate" type="text/html" title="무료로 구축하는 협업 자동화 : Trello + Github + Slack" />
    <published>2025-09-02T01:36:47+09:00</published>
  
    <updated>2025-09-02T01:36:47+09:00</updated>
  
    <id>https://kguswo.github.io/posts/%EB%AC%B4%EB%A3%8C%EB%A1%9C-%EA%B5%AC%EC%B6%95%ED%95%98%EB%8A%94-%ED%98%91%EC%97%85-%EC%9E%90%EB%8F%99%ED%99%94-Trello-Github-Slack/</id>
    <content type="text/html" src="https://kguswo.github.io/posts/%EB%AC%B4%EB%A3%8C%EB%A1%9C-%EA%B5%AC%EC%B6%95%ED%95%98%EB%8A%94-%ED%98%91%EC%97%85-%EC%9E%90%EB%8F%99%ED%99%94-Trello-Github-Slack/" />
    <author>
      <name>Hyeon Jae Kim</name>
    </author>

  
    
    <category term="사이드" />
    
    <category term="프로젝트" />
    
  

  <summary>들어가며  사이드 프로젝트를 진행할 때 개발 전, 협업 규칙과 컨벤션 등을 정한다. 이 기본 틀이 가장 중요하며 프로젝트 속도를 늦추지 않는 중요한 규칙이 된다.  이번 글은 어떻게 협업 자동화를 (무료로!) 구성했는지에 관한 이야기다.  레퍼런스가 없어 상당히 고생했기 때문에 비슷한 시도를 하는 모두에게 도움이 되었으면 좋겠다!    협업 툴  협업 툴로는 다양한 후보군들이 많다. 그 중에서 어떤 것을 선택할지 정하는 것도 쉽지 않았다.  선택한 협업 툴에 관한 짧은 설명과, 왜 선택하게 되었는지에 대해 정리하겠다.  Trello    칸반 보드 방식의 직관적인 작업 관리 도구      무료 플랜으로도 충분한 기능을 제공한다.   직관적인 UI로 작업 상태를 한눈에 파악 가능하다.   강력한 Auto...</summary>

  </entry>

  
  <entry>
    <title>System Design Interview - 알림 시스템 설계</title>
    <link href="https://kguswo.github.io/posts/System-Design-Interview-%EC%95%8C%EB%A6%BC-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EC%84%A4%EA%B3%84/" rel="alternate" type="text/html" title="System Design Interview - 알림 시스템 설계" />
    <published>2025-09-01T03:23:18+09:00</published>
  
    <updated>2025-09-01T03:23:18+09:00</updated>
  
    <id>https://kguswo.github.io/posts/System-Design-Interview-%EC%95%8C%EB%A6%BC-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EC%84%A4%EA%B3%84/</id>
    <content type="text/html" src="https://kguswo.github.io/posts/System-Design-Interview-%EC%95%8C%EB%A6%BC-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EC%84%A4%EA%B3%84/" />
    <author>
      <name>Hyeon Jae Kim</name>
    </author>

  
    
    <category term="시스템" />
    
    <category term="디자인" />
    
  

  <summary>들어가며  알림 시스템은 최근 많은 프로그램에서 채택하는 인기 있는 기능이다. 최신 뉴스, 제품 업데이터, 이벤트, 선물 등 고객에게 중요할 만한 정보를 비동기적으로 제공한다.  이러한 알림 시스템을 순차적으로 확장하며 설계해보려 한다.    1단계. 문제 이해 및 설계 범위 확정  하루에 백만건 이상의 알림을 처리하는 확장성 높은 시스템을 구축하는게 쉬운 과제가 아니다. 알림 시스템이 어떻게 구현되는지에 대한 깊은 이해가 필요한 작업이다.  이에 관한 문제가 면접에 출제될 때는 보통 정해진 정답이 없고, 문제 자체가 모호하게 주어지는 것이 일반적이므로, 적절한 질문을 통해 요구사항이 무엇인지 우리가 스스로 알아내야 한다.       지원자 : 이 시스템은 어떤 종류의 알림을 지원해야 하나요?   면접...</summary>

  </entry>

  
  <entry>
    <title>PGMS_귤 고르기 (Java)</title>
    <link href="https://kguswo.github.io/posts/PGMS%EA%B7%A4-%EA%B3%A0%EB%A5%B4%EA%B8%B0-Java/" rel="alternate" type="text/html" title="PGMS_귤 고르기 (Java)" />
    <published>2025-08-27T04:29:49+09:00</published>
  
    <updated>2025-08-27T04:29:49+09:00</updated>
  
    <id>https://kguswo.github.io/posts/PGMS%EA%B7%A4-%EA%B3%A0%EB%A5%B4%EA%B8%B0-Java/</id>
    <content type="text/html" src="https://kguswo.github.io/posts/PGMS%EA%B7%A4-%EA%B3%A0%EB%A5%B4%EA%B8%B0-Java/" />
    <author>
      <name>Hyeon Jae Kim</name>
    </author>

  
    
    <category term="알고리즘" />
    
  

  <summary>[level 2] 귤 고르기 - 138476  문제 링크  성능 요약  메모리: 108 MB, 시간: 59.84 ms  구분  코딩테스트 연습 &amp;gt; 연습문제  채점결과  정확성: 100.0합계: 100.0 / 100.0  제출 일자  2025년 08월 27일 04:27:36  문제 설명  경화는 과수원에서 귤을 수확했습니다. 경화는 수확한 귤 중 'k'개를 골라 상자 하나에 담아 판매하려고 합니다. 그런데 수확한 귤의 크기가 일정하지 않아 보기에 좋지 않다고 생각한 경화는 귤을 크기별로 분류했을 때 서로 다른 종류의 수를 최소화하고 싶습니다.  예를 들어, 경화가 수확한 귤 8개의 크기가 [1, 3, 2, 5, 4, 5, 2, 3] 이라고 합시다. 경화가 귤 6개를 판매하고 싶다면, 크기가 1, 4...</summary>

  </entry>

  
  <entry>
    <title>System Design Interview - 분산 시스템을 위한 유일 ID 생성기 설계</title>
    <link href="https://kguswo.github.io/posts/System-Design-Interview-%EB%B6%84%EC%82%B0-%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%84-%EC%9C%84%ED%95%9C-%EC%9C%A0%EC%9D%BC-ID-%EC%83%9D%EC%84%B1%EA%B8%B0-%EC%84%A4%EA%B3%84/" rel="alternate" type="text/html" title="System Design Interview - 분산 시스템을 위한 유일 ID 생성기 설계" />
    <published>2025-08-25T11:28:49+09:00</published>
  
    <updated>2025-08-25T11:28:49+09:00</updated>
  
    <id>https://kguswo.github.io/posts/System-Design-Interview-%EB%B6%84%EC%82%B0-%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%84-%EC%9C%84%ED%95%9C-%EC%9C%A0%EC%9D%BC-ID-%EC%83%9D%EC%84%B1%EA%B8%B0-%EC%84%A4%EA%B3%84/</id>
    <content type="text/html" src="https://kguswo.github.io/posts/System-Design-Interview-%EB%B6%84%EC%82%B0-%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%84-%EC%9C%84%ED%95%9C-%EC%9C%A0%EC%9D%BC-ID-%EC%83%9D%EC%84%B1%EA%B8%B0-%EC%84%A4%EA%B3%84/" />
    <author>
      <name>Hyeon Jae Kim</name>
    </author>

  
    
    <category term="시스템" />
    
    <category term="디자인" />
    
  

  <summary>들어가며  이번은 책 7장인 분산 시스템을 위한 유일 ID 생성기를 설계해보겠다.  간단한 팀/개인 프로젝트에서 ID를 설계할 때는 auto_increment 속성으로 설정된 기본 키를 사용하곤 했었다.  하지만 대규모 분산 환경에서는 auto_increment를 사용할 수 없다.  데이터베이스 서버 한 대로는 요구를 충족할 수 없고, 여러 서버가 동시에 auto_increment 값을 생성한다면 중복된 값이 발생할 수도 있기 때문이다.    여러 유일한 ID 를 생성하는 방법을 다음과 같이 정리해보자.     다중 마스터 복제 (multi-master replication)   UUID (Universally Unique Identifier)   티켓 서버 (Ticket Server)   트위터 스노...</summary>

  </entry>

</feed>


